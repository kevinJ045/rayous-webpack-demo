/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/macy/dist/macy.js":
/*!****************************************!*\
  !*** ./node_modules/macy/dist/macy.js ***!
  \****************************************/
/***/ (function(module) {

eval("!function(t,n){ true?module.exports=n():0}(this,function(){\"use strict\";function t(t,n){var e=void 0;return function(){e&&clearTimeout(e),e=setTimeout(t,n)}}function n(t,n){for(var e=t.length,r=e,o=[];e--;)o.push(n(t[r-e-1]));return o}function e(t,n){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(window.Promise)return A(t,n,e);t.recalculate(!0,!0)}function r(t){for(var n=t.options,e=t.responsiveOptions,r=t.keys,o=t.docWidth,i=void 0,s=0;s<r.length;s++){var a=parseInt(r[s],10);o>=a&&(i=n.breakAt[a],O(i,e))}return e}function o(t){for(var n=t.options,e=t.responsiveOptions,r=t.keys,o=t.docWidth,i=void 0,s=r.length-1;s>=0;s--){var a=parseInt(r[s],10);o<=a&&(i=n.breakAt[a],O(i,e))}return e}function i(t){var n=t.useContainerForBreakpoints?t.container.clientWidth:window.innerWidth,e={columns:t.columns};b(t.margin)?e.margin={x:t.margin.x,y:t.margin.y}:e.margin={x:t.margin,y:t.margin};var i=Object.keys(t.breakAt);return t.mobileFirst?r({options:t,responsiveOptions:e,keys:i,docWidth:n}):o({options:t,responsiveOptions:e,keys:i,docWidth:n})}function s(t){return i(t).columns}function a(t){return i(t).margin}function c(t){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],e=s(t),r=a(t).x,o=100/e;if(!n)return o;if(1===e)return\"100%\";var i=\"px\";if(\"string\"==typeof r){var c=parseFloat(r);i=r.replace(c,\"\"),r=c}return r=(e-1)*r/e,\"%\"===i?o-r+\"%\":\"calc(\"+o+\"% - \"+r+i+\")\"}function u(t,n){var e=s(t.options),r=0,o=void 0,i=void 0;if(1===++n)return 0;i=a(t.options).x;var u=\"px\";if(\"string\"==typeof i){var l=parseFloat(i,10);u=i.replace(l,\"\"),i=l}return o=(i-(e-1)*i/e)*(n-1),r+=c(t.options,!1)*(n-1),\"%\"===u?r+o+\"%\":\"calc(\"+r+\"% + \"+o+u+\")\"}function l(t){var n=0,e=t.container,r=t.rows;v(r,function(t){n=t>n?t:n}),e.style.height=n+\"px\"}function p(t,n){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=s(t.options),i=a(t.options).y;M(t,o,e),v(n,function(n){var e=0,o=parseInt(n.offsetHeight,10);isNaN(o)||(t.rows.forEach(function(n,r){n<t.rows[e]&&(e=r)}),n.style.position=\"absolute\",n.style.top=t.rows[e]+\"px\",n.style.left=\"\"+t.cols[e],t.rows[e]+=isNaN(o)?0:o+i,r&&(n.dataset.macyComplete=1))}),r&&(t.tmpRows=null),l(t)}function f(t,n){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=s(t.options),i=a(t.options).y;M(t,o,e),v(n,function(n){t.lastcol===o&&(t.lastcol=0);var e=C(n,\"height\");e=parseInt(n.offsetHeight,10),isNaN(e)||(n.style.position=\"absolute\",n.style.top=t.rows[t.lastcol]+\"px\",n.style.left=\"\"+t.cols[t.lastcol],t.rows[t.lastcol]+=isNaN(e)?0:e+i,t.lastcol+=1,r&&(n.dataset.macyComplete=1))}),r&&(t.tmpRows=null),l(t)}var h=function t(n,e){if(!(this instanceof t))return new t(n,e);if(n&&n.nodeName)return n;if(n=n.replace(/^\\s*/,\"\").replace(/\\s*$/,\"\"),e)return this.byCss(n,e);for(var r in this.selectors)if(e=r.split(\"/\"),new RegExp(e[1],e[2]).test(n))return this.selectors[r](n);return this.byCss(n)};h.prototype.byCss=function(t,n){return(n||document).querySelectorAll(t)},h.prototype.selectors={},h.prototype.selectors[/^\\.[\\w\\-]+$/]=function(t){return document.getElementsByClassName(t.substring(1))},h.prototype.selectors[/^\\w+$/]=function(t){return document.getElementsByTagName(t)},h.prototype.selectors[/^\\#[\\w\\-]+$/]=function(t){return document.getElementById(t.substring(1))};var v=function(t,n){for(var e=t.length,r=e;e--;)n(t[r-e-1])},m=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.running=!1,this.events=[],this.add(t)};m.prototype.run=function(){if(!this.running&&this.events.length>0){var t=this.events.shift();this.running=!0,t(),this.running=!1,this.run()}},m.prototype.add=function(){var t=this,n=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return!!n&&(Array.isArray(n)?v(n,function(n){return t.add(n)}):(this.events.push(n),void this.run()))},m.prototype.clear=function(){this.events=[]};var d=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.instance=t,this.data=n,this},y=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.events={},this.instance=t};y.prototype.on=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return!(!t||!n)&&(Array.isArray(this.events[t])||(this.events[t]=[]),this.events[t].push(n))},y.prototype.emit=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!t||!Array.isArray(this.events[t]))return!1;var e=new d(this.instance,n);v(this.events[t],function(t){return t(e)})};var g=function(t){return!(\"naturalHeight\"in t&&t.naturalHeight+t.naturalWidth===0)||t.width+t.height!==0},E=function(t,n){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return new Promise(function(t,e){if(n.complete)return g(n)?t(n):e(n);n.addEventListener(\"load\",function(){return g(n)?t(n):e(n)}),n.addEventListener(\"error\",function(){return e(n)})}).then(function(n){e&&t.emit(t.constants.EVENT_IMAGE_LOAD,{img:n})}).catch(function(n){return t.emit(t.constants.EVENT_IMAGE_ERROR,{img:n})})},w=function(t,e){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return n(e,function(n){return E(t,n,r)})},A=function(t,n){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Promise.all(w(t,n,e)).then(function(){t.emit(t.constants.EVENT_IMAGE_COMPLETE)})},I=function(n){return t(function(){n.emit(n.constants.EVENT_RESIZE),n.queue.add(function(){return n.recalculate(!0,!0)})},100)},N=function(t){if(t.container=h(t.options.container),t.container instanceof h||!t.container)return!!t.options.debug&&console.error(\"Error: Container not found\");t.container.length&&(t.container=t.container[0]),t.options.container=t.container,t.container.style.position=\"relative\"},T=function(t){t.queue=new m,t.events=new y(t),t.rows=[],t.resizer=I(t)},L=function(t){var n=h(\"img\",t.container);window.addEventListener(\"resize\",t.resizer),t.on(t.constants.EVENT_IMAGE_LOAD,function(){return t.recalculate(!1,!1)}),t.on(t.constants.EVENT_IMAGE_COMPLETE,function(){return t.recalculate(!0,!0)}),t.options.useOwnImageLoader||e(t,n,!t.options.waitForImages),t.emit(t.constants.EVENT_INITIALIZED)},_=function(t){N(t),T(t),L(t)},b=function(t){return t===Object(t)&&\"[object Array]\"!==Object.prototype.toString.call(t)},O=function(t,n){b(t)||(n.columns=t),b(t)&&t.columns&&(n.columns=t.columns),b(t)&&t.margin&&!b(t.margin)&&(n.margin={x:t.margin,y:t.margin}),b(t)&&t.margin&&b(t.margin)&&t.margin.x&&(n.margin.x=t.margin.x),b(t)&&t.margin&&b(t.margin)&&t.margin.y&&(n.margin.y=t.margin.y)},C=function(t,n){return window.getComputedStyle(t,null).getPropertyValue(n)},M=function(t,n){var e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(t.lastcol||(t.lastcol=0),t.rows.length<1&&(e=!0),e){t.rows=[],t.cols=[],t.lastcol=0;for(var r=n-1;r>=0;r--)t.rows[r]=0,t.cols[r]=u(t,r)}else if(t.tmpRows){t.rows=[];for(var r=n-1;r>=0;r--)t.rows[r]=t.tmpRows[r]}else{t.tmpRows=[];for(var r=n-1;r>=0;r--)t.tmpRows[r]=t.rows[r]}},V=function(t){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],e=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=n?t.container.children:h(':scope > *:not([data-macy-complete=\"1\"])',t.container);r=Array.from(r).filter(function(t){return null!==t.offsetParent});var o=c(t.options);return v(r,function(t){n&&(t.dataset.macyComplete=0),t.style.width=o}),t.options.trueOrder?(f(t,r,n,e),t.emit(t.constants.EVENT_RECALCULATED)):(p(t,r,n,e),t.emit(t.constants.EVENT_RECALCULATED))},R=function(){return!!window.Promise},x=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t};Array.from||(Array.from=function(t){for(var n=0,e=[];n<t.length;)e.push(t[n++]);return e});var k={columns:4,margin:2,trueOrder:!1,waitForImages:!1,useImageLoader:!0,breakAt:{},useOwnImageLoader:!1,onInit:!1,cancelLegacy:!1,useContainerForBreakpoints:!1};!function(){try{document.createElement(\"a\").querySelector(\":scope *\")}catch(t){!function(){function t(t){return function(e){if(e&&n.test(e)){var r=this.getAttribute(\"id\");r||(this.id=\"q\"+Math.floor(9e6*Math.random())+1e6),arguments[0]=e.replace(n,\"#\"+this.id);var o=t.apply(this,arguments);return null===r?this.removeAttribute(\"id\"):r||(this.id=r),o}return t.apply(this,arguments)}}var n=/:scope\\b/gi,e=t(Element.prototype.querySelector);Element.prototype.querySelector=function(t){return e.apply(this,arguments)};var r=t(Element.prototype.querySelectorAll);Element.prototype.querySelectorAll=function(t){return r.apply(this,arguments)}}()}}();var q=function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:k;if(!(this instanceof t))return new t(n);this.options={},x(this.options,k,n),this.options.cancelLegacy&&!R()||_(this)};return q.init=function(t){return console.warn(\"Depreciated: Macy.init will be removed in v3.0.0 opt to use Macy directly like so Macy({ /*options here*/ }) \"),new q(t)},q.prototype.recalculateOnImageLoad=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return e(this,h(\"img\",this.container),!t)},q.prototype.runOnImageLoad=function(t){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=h(\"img\",this.container);return this.on(this.constants.EVENT_IMAGE_COMPLETE,t),n&&this.on(this.constants.EVENT_IMAGE_LOAD,t),e(this,r,n)},q.prototype.recalculate=function(){var t=this,n=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return e&&this.queue.clear(),this.queue.add(function(){return V(t,n,e)})},q.prototype.remove=function(){window.removeEventListener(\"resize\",this.resizer),v(this.container.children,function(t){t.removeAttribute(\"data-macy-complete\"),t.removeAttribute(\"style\")}),this.container.removeAttribute(\"style\")},q.prototype.reInit=function(){this.recalculate(!0,!0),this.emit(this.constants.EVENT_INITIALIZED),window.addEventListener(\"resize\",this.resizer),this.container.style.position=\"relative\"},q.prototype.on=function(t,n){this.events.on(t,n)},q.prototype.emit=function(t,n){this.events.emit(t,n)},q.constants={EVENT_INITIALIZED:\"macy.initialized\",EVENT_RECALCULATED:\"macy.recalculated\",EVENT_IMAGE_LOAD:\"macy.image.load\",EVENT_IMAGE_ERROR:\"macy.image.error\",EVENT_IMAGE_COMPLETE:\"macy.images.complete\",EVENT_RESIZE:\"macy.resize\"},q.prototype.constants=q.constants,q});\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/macy/dist/macy.js?");

/***/ }),

/***/ "./node_modules/rayous/client/components/Animate.ts":
/*!**********************************************************!*\
  !*** ./node_modules/rayous/client/components/Animate.ts ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.animateWidgets = exports.animateWidget = void 0;\nvar anime_1 = __importDefault(__webpack_require__(/*! ../modules/anime */ \"./node_modules/rayous/client/modules/anime.js\"));\nvar elman_1 = __webpack_require__(/*! ../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nfunction makeOps(animations) {\n    var _loop_1 = function () {\n        var _a;\n        var anim = animations[i];\n        if (typeof anim == \"function\") {\n            animations[i] = function (el) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                return anim.apply(void 0, __spreadArray([el.GUIWIDGET], args, false));\n            };\n        }\n        if (typeof anim == \"string\") {\n            var func_1 = anim.match(/(random|stagger)\\(([^)]+)\\)/);\n            var funcs = 'random|none'.split('|');\n            if (func_1) {\n                var args_1 = func_1[2].match(',') ? func_1[2].split(',').map(function (i) { return i.trim(); }) : [func_1[2]];\n                args_1 = args_1.map(function (g) { return isNaN(parseInt(g)) ? g : parseInt(g); })\n                    .map(function (g) {\n                    if (typeof g == \"string\") {\n                        try {\n                            return JSON.parse(g);\n                        }\n                        catch (e) {\n                            return g;\n                        }\n                    }\n                    return g;\n                });\n                animations[i] = funcs.includes(func_1[1]) ? function () {\n                    var _a;\n                    return (_a = anime_1.default)[func_1[1]].apply(_a, args_1);\n                } : (_a = anime_1.default)[func_1[1]].apply(_a, args_1);\n            }\n        }\n    };\n    for (var i in animations) {\n        _loop_1();\n    }\n    console.log(animations);\n    return animations;\n}\nfunction animateWidgets(widgets, animations) {\n    animations = makeOps(animations);\n    return (0, anime_1.default)(__assign({ targets: widgets.map(function (widget) { return (0, elman_1.findEl)(widget.id).at(0); }) }, animations));\n}\nexports.animateWidgets = animateWidgets;\nfunction animateWidget(widget, animations) {\n    return animateWidgets([widget], animations);\n}\nexports.animateWidget = animateWidget;\n;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/components/Animate.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/components/Style.ts":
/*!********************************************************!*\
  !*** ./node_modules/rayous/client/components/Style.ts ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar eventtarget_1 = __webpack_require__(/*! ../utils/eventtarget */ \"./node_modules/rayous/client/utils/eventtarget.ts\");\nvar voca_1 = __importDefault(__webpack_require__(/*! ../modules/voca */ \"./node_modules/rayous/client/modules/voca.js\"));\nvar elman_1 = __webpack_require__(/*! ../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar type_1 = __webpack_require__(/*! ../utils/type */ \"./node_modules/rayous/client/utils/type.ts\");\nvar id_1 = __importDefault(__webpack_require__(/*! ../utils/id */ \"./node_modules/rayous/client/utils/id.ts\"));\nfunction trimRules(rules) {\n    return rules;\n}\nvar css = {};\nvar variables = {};\nfunction colorProp(prop) {\n    if (typeof prop == 'number') {\n        if (prop.toString(16).match(/[0-9a-f]{6}|[0-9a-f]{3}|[0-9a-f]{5}/))\n            prop = '#' + (prop.toString(16).length == 5 ? '0' + prop.toString(16) : prop.toString(16));\n    }\n    return prop;\n}\nfunction variableProp(prop) {\n    if (typeof prop == 'string') {\n        if (prop.toLocaleLowerCase() in variables)\n            prop = variables[prop];\n    }\n    return prop;\n}\nfunction cssProperty(prop, fixArray) {\n    if (fixArray === void 0) { fixArray = true; }\n    prop = colorProp(prop);\n    prop = variableProp(prop);\n    if (Array.isArray(prop)) {\n        prop = prop.map(function (f) { return (typeof f == 'number' && fixArray) ? f + 'px' : cssProperty(f); }).join(' ');\n    }\n    return prop;\n}\nfunction setCss(name, map) {\n    if (!css[name])\n        css[name] = {};\n    for (var i in map) {\n        css[name][i] = cssProperty(map[i]);\n    }\n}\nfunction getCss(name, prop) {\n    if (prop === void 0) { prop = null; }\n    if (!css[name])\n        css[name] = {};\n    if (!prop)\n        return css[name];\n    return css[name][prop];\n}\nvar Style = /** @class */ (function (_super) {\n    __extends(Style, _super);\n    function Style(name, map) {\n        if (map === void 0) { map = null; }\n        var _this = _super.call(this) || this;\n        _this.name = \"\";\n        _this.values = {};\n        if (typeof name == 'object' && !map) {\n            map = name;\n            name = null;\n        }\n        if (!name)\n            name = 'style-' + Object.keys(css).length;\n        _this.name = name;\n        if (map) {\n            _this.set(map);\n        }\n        _this.values = new Proxy({}, {\n            get: function (target, propName) { return _this[propName] || _this.all[propName]; }\n        });\n        return _this;\n    }\n    Style.prototype.addProperty = function (prop, value) {\n        var _a;\n        var p = trimRules((_a = {}, _a[prop] = value, _a));\n        if (p[prop])\n            this[prop] = value;\n    };\n    Object.defineProperty(Style.prototype, \"all\", {\n        get: function () {\n            return getCss(this.name);\n        },\n        set: function (all) {\n            for (var i in all) {\n                if (i in this)\n                    this[i] = all[i];\n                else\n                    this.variable(i, all[i]);\n            }\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.set = function (all) {\n        all = trimRules(all);\n        this.all = all;\n    };\n    Object.defineProperty(Style.prototype, \"accentColor\", {\n        get: function () {\n            return getCss(this.name, 'accentColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                accentColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAccentColor = function (value) {\n        this.accentColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"additiveSymbols\", {\n        get: function () {\n            return getCss(this.name, 'additiveSymbols');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                additiveSymbols: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAdditiveSymbols = function (value) {\n        this.additiveSymbols = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"alignContent\", {\n        get: function () {\n            return getCss(this.name, 'alignContent');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                alignContent: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAlignContent = function (value) {\n        this.alignContent = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"alignItems\", {\n        get: function () {\n            return getCss(this.name, 'alignItems');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                alignItems: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAlignItems = function (value) {\n        this.alignItems = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"alignSelf\", {\n        get: function () {\n            return getCss(this.name, 'alignSelf');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                alignSelf: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAlignSelf = function (value) {\n        this.alignSelf = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"alignmentBaseline\", {\n        get: function () {\n            return getCss(this.name, 'alignmentBaseline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                alignmentBaseline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAlignmentBaseline = function (value) {\n        this.alignmentBaseline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animation\", {\n        get: function () {\n            return getCss(this.name, 'animation');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animation: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimation = function (value) {\n        this.animation = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationComposition\", {\n        get: function () {\n            return getCss(this.name, 'animationComposition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationComposition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationComposition = function (value) {\n        this.animationComposition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationDelay\", {\n        get: function () {\n            return getCss(this.name, 'animationDelay');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationDelay: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationDelay = function (value) {\n        this.animationDelay = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationDirection\", {\n        get: function () {\n            return getCss(this.name, 'animationDirection');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationDirection: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationDirection = function (value) {\n        this.animationDirection = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationDuration\", {\n        get: function () {\n            return getCss(this.name, 'animationDuration');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationDuration: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationDuration = function (value) {\n        this.animationDuration = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationFillMode\", {\n        get: function () {\n            return getCss(this.name, 'animationFillMode');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationFillMode: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationFillMode = function (value) {\n        this.animationFillMode = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationIterationCount\", {\n        get: function () {\n            return getCss(this.name, 'animationIterationCount');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationIterationCount: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationIterationCount = function (value) {\n        this.animationIterationCount = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationName\", {\n        get: function () {\n            return getCss(this.name, 'animationName');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationName: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationName = function (value) {\n        this.animationName = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationPlayState\", {\n        get: function () {\n            return getCss(this.name, 'animationPlayState');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationPlayState: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationPlayState = function (value) {\n        this.animationPlayState = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationRange\", {\n        get: function () {\n            return getCss(this.name, 'animationRange');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationRange: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationRange = function (value) {\n        this.animationRange = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationRangeEnd\", {\n        get: function () {\n            return getCss(this.name, 'animationRangeEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationRangeEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationRangeEnd = function (value) {\n        this.animationRangeEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationRangeStart\", {\n        get: function () {\n            return getCss(this.name, 'animationRangeStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationRangeStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationRangeStart = function (value) {\n        this.animationRangeStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationTimeline\", {\n        get: function () {\n            return getCss(this.name, 'animationTimeline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationTimeline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationTimeline = function (value) {\n        this.animationTimeline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"animationTimingFunction\", {\n        get: function () {\n            return getCss(this.name, 'animationTimingFunction');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                animationTimingFunction: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAnimationTimingFunction = function (value) {\n        this.animationTimingFunction = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"appRegion\", {\n        get: function () {\n            return getCss(this.name, 'appRegion');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                appRegion: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAppRegion = function (value) {\n        this.appRegion = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"appearance\", {\n        get: function () {\n            return getCss(this.name, 'appearance');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                appearance: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAppearance = function (value) {\n        this.appearance = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"ascentOverride\", {\n        get: function () {\n            return getCss(this.name, 'ascentOverride');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                ascentOverride: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAscentOverride = function (value) {\n        this.ascentOverride = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"aspectRatio\", {\n        get: function () {\n            return getCss(this.name, 'aspectRatio');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                aspectRatio: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setAspectRatio = function (value) {\n        this.aspectRatio = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backdropFilter\", {\n        get: function () {\n            return getCss(this.name, 'backdropFilter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backdropFilter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackdropFilter = function (value) {\n        this.backdropFilter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backfaceVisibility\", {\n        get: function () {\n            return getCss(this.name, 'backfaceVisibility');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backfaceVisibility: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackfaceVisibility = function (value) {\n        this.backfaceVisibility = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"background\", {\n        get: function () {\n            return getCss(this.name, 'background');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                background: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackground = function (value) {\n        this.background = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundAttachment\", {\n        get: function () {\n            return getCss(this.name, 'backgroundAttachment');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundAttachment: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundAttachment = function (value) {\n        this.backgroundAttachment = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundBlendMode\", {\n        get: function () {\n            return getCss(this.name, 'backgroundBlendMode');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundBlendMode: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundBlendMode = function (value) {\n        this.backgroundBlendMode = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundClip\", {\n        get: function () {\n            return getCss(this.name, 'backgroundClip');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundClip: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundClip = function (value) {\n        this.backgroundClip = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundColor\", {\n        get: function () {\n            return getCss(this.name, 'backgroundColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundColor = function (value) {\n        this.backgroundColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundImage\", {\n        get: function () {\n            return getCss(this.name, 'backgroundImage');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundImage: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundImage = function (value) {\n        this.backgroundImage = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundOrigin\", {\n        get: function () {\n            return getCss(this.name, 'backgroundOrigin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundOrigin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundOrigin = function (value) {\n        this.backgroundOrigin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundPosition\", {\n        get: function () {\n            return getCss(this.name, 'backgroundPosition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundPosition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundPosition = function (value) {\n        this.backgroundPosition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundPositionX\", {\n        get: function () {\n            return getCss(this.name, 'backgroundPositionX');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundPositionX: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundPositionX = function (value) {\n        this.backgroundPositionX = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundPositionY\", {\n        get: function () {\n            return getCss(this.name, 'backgroundPositionY');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundPositionY: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundPositionY = function (value) {\n        this.backgroundPositionY = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundRepeat\", {\n        get: function () {\n            return getCss(this.name, 'backgroundRepeat');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundRepeat: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundRepeat = function (value) {\n        this.backgroundRepeat = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundRepeatX\", {\n        get: function () {\n            return getCss(this.name, 'backgroundRepeatX');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundRepeatX: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundRepeatX = function (value) {\n        this.backgroundRepeatX = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundRepeatY\", {\n        get: function () {\n            return getCss(this.name, 'backgroundRepeatY');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundRepeatY: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundRepeatY = function (value) {\n        this.backgroundRepeatY = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"backgroundSize\", {\n        get: function () {\n            return getCss(this.name, 'backgroundSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                backgroundSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBackgroundSize = function (value) {\n        this.backgroundSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"basePalette\", {\n        get: function () {\n            return getCss(this.name, 'basePalette');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                basePalette: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBasePalette = function (value) {\n        this.basePalette = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"baselineShift\", {\n        get: function () {\n            return getCss(this.name, 'baselineShift');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                baselineShift: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBaselineShift = function (value) {\n        this.baselineShift = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"baselineSource\", {\n        get: function () {\n            return getCss(this.name, 'baselineSource');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                baselineSource: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBaselineSource = function (value) {\n        this.baselineSource = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"blockSize\", {\n        get: function () {\n            return getCss(this.name, 'blockSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                blockSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBlockSize = function (value) {\n        this.blockSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"border\", {\n        get: function () {\n            return getCss(this.name, 'border');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                border: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorder = function (value) {\n        this.border = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlock\", {\n        get: function () {\n            return getCss(this.name, 'borderBlock');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlock: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlock = function (value) {\n        this.borderBlock = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlockColor\", {\n        get: function () {\n            return getCss(this.name, 'borderBlockColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlockColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlockColor = function (value) {\n        this.borderBlockColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlockEnd\", {\n        get: function () {\n            return getCss(this.name, 'borderBlockEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlockEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlockEnd = function (value) {\n        this.borderBlockEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlockEndColor\", {\n        get: function () {\n            return getCss(this.name, 'borderBlockEndColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlockEndColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlockEndColor = function (value) {\n        this.borderBlockEndColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlockEndStyle\", {\n        get: function () {\n            return getCss(this.name, 'borderBlockEndStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlockEndStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlockEndStyle = function (value) {\n        this.borderBlockEndStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlockEndWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderBlockEndWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlockEndWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlockEndWidth = function (value) {\n        this.borderBlockEndWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlockStart\", {\n        get: function () {\n            return getCss(this.name, 'borderBlockStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlockStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlockStart = function (value) {\n        this.borderBlockStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlockStartColor\", {\n        get: function () {\n            return getCss(this.name, 'borderBlockStartColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlockStartColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlockStartColor = function (value) {\n        this.borderBlockStartColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlockStartStyle\", {\n        get: function () {\n            return getCss(this.name, 'borderBlockStartStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlockStartStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlockStartStyle = function (value) {\n        this.borderBlockStartStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlockStartWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderBlockStartWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlockStartWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlockStartWidth = function (value) {\n        this.borderBlockStartWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlockStyle\", {\n        get: function () {\n            return getCss(this.name, 'borderBlockStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlockStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlockStyle = function (value) {\n        this.borderBlockStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBlockWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderBlockWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBlockWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBlockWidth = function (value) {\n        this.borderBlockWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBottom\", {\n        get: function () {\n            return getCss(this.name, 'borderBottom');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBottom: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBottom = function (value) {\n        this.borderBottom = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBottomColor\", {\n        get: function () {\n            return getCss(this.name, 'borderBottomColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBottomColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBottomColor = function (value) {\n        this.borderBottomColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBottomLeftRadius\", {\n        get: function () {\n            return getCss(this.name, 'borderBottomLeftRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBottomLeftRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBottomLeftRadius = function (value) {\n        this.borderBottomLeftRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBottomRightRadius\", {\n        get: function () {\n            return getCss(this.name, 'borderBottomRightRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBottomRightRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBottomRightRadius = function (value) {\n        this.borderBottomRightRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBottomStyle\", {\n        get: function () {\n            return getCss(this.name, 'borderBottomStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBottomStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBottomStyle = function (value) {\n        this.borderBottomStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderBottomWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderBottomWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderBottomWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderBottomWidth = function (value) {\n        this.borderBottomWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderCollapse\", {\n        get: function () {\n            return getCss(this.name, 'borderCollapse');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderCollapse: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderCollapse = function (value) {\n        this.borderCollapse = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderColor\", {\n        get: function () {\n            return getCss(this.name, 'borderColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderColor = function (value) {\n        this.borderColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderEndEndRadius\", {\n        get: function () {\n            return getCss(this.name, 'borderEndEndRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderEndEndRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderEndEndRadius = function (value) {\n        this.borderEndEndRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderEndStartRadius\", {\n        get: function () {\n            return getCss(this.name, 'borderEndStartRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderEndStartRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderEndStartRadius = function (value) {\n        this.borderEndStartRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderImage\", {\n        get: function () {\n            return getCss(this.name, 'borderImage');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderImage: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderImage = function (value) {\n        this.borderImage = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderImageOutset\", {\n        get: function () {\n            return getCss(this.name, 'borderImageOutset');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderImageOutset: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderImageOutset = function (value) {\n        this.borderImageOutset = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderImageRepeat\", {\n        get: function () {\n            return getCss(this.name, 'borderImageRepeat');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderImageRepeat: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderImageRepeat = function (value) {\n        this.borderImageRepeat = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderImageSlice\", {\n        get: function () {\n            return getCss(this.name, 'borderImageSlice');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderImageSlice: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderImageSlice = function (value) {\n        this.borderImageSlice = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderImageSource\", {\n        get: function () {\n            return getCss(this.name, 'borderImageSource');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderImageSource: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderImageSource = function (value) {\n        this.borderImageSource = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderImageWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderImageWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderImageWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderImageWidth = function (value) {\n        this.borderImageWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInline\", {\n        get: function () {\n            return getCss(this.name, 'borderInline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInline = function (value) {\n        this.borderInline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInlineColor\", {\n        get: function () {\n            return getCss(this.name, 'borderInlineColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInlineColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInlineColor = function (value) {\n        this.borderInlineColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInlineEnd\", {\n        get: function () {\n            return getCss(this.name, 'borderInlineEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInlineEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInlineEnd = function (value) {\n        this.borderInlineEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInlineEndColor\", {\n        get: function () {\n            return getCss(this.name, 'borderInlineEndColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInlineEndColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInlineEndColor = function (value) {\n        this.borderInlineEndColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInlineEndStyle\", {\n        get: function () {\n            return getCss(this.name, 'borderInlineEndStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInlineEndStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInlineEndStyle = function (value) {\n        this.borderInlineEndStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInlineEndWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderInlineEndWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInlineEndWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInlineEndWidth = function (value) {\n        this.borderInlineEndWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInlineStart\", {\n        get: function () {\n            return getCss(this.name, 'borderInlineStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInlineStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInlineStart = function (value) {\n        this.borderInlineStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInlineStartColor\", {\n        get: function () {\n            return getCss(this.name, 'borderInlineStartColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInlineStartColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInlineStartColor = function (value) {\n        this.borderInlineStartColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInlineStartStyle\", {\n        get: function () {\n            return getCss(this.name, 'borderInlineStartStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInlineStartStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInlineStartStyle = function (value) {\n        this.borderInlineStartStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInlineStartWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderInlineStartWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInlineStartWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInlineStartWidth = function (value) {\n        this.borderInlineStartWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInlineStyle\", {\n        get: function () {\n            return getCss(this.name, 'borderInlineStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInlineStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInlineStyle = function (value) {\n        this.borderInlineStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderInlineWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderInlineWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderInlineWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderInlineWidth = function (value) {\n        this.borderInlineWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderLeft\", {\n        get: function () {\n            return getCss(this.name, 'borderLeft');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderLeft: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderLeft = function (value) {\n        this.borderLeft = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderLeftColor\", {\n        get: function () {\n            return getCss(this.name, 'borderLeftColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderLeftColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderLeftColor = function (value) {\n        this.borderLeftColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderLeftStyle\", {\n        get: function () {\n            return getCss(this.name, 'borderLeftStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderLeftStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderLeftStyle = function (value) {\n        this.borderLeftStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderLeftWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderLeftWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderLeftWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderLeftWidth = function (value) {\n        this.borderLeftWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderRadius\", {\n        get: function () {\n            return getCss(this.name, 'borderRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderRadius = function (value) {\n        this.borderRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderRight\", {\n        get: function () {\n            return getCss(this.name, 'borderRight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderRight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderRight = function (value) {\n        this.borderRight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderRightColor\", {\n        get: function () {\n            return getCss(this.name, 'borderRightColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderRightColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderRightColor = function (value) {\n        this.borderRightColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderRightStyle\", {\n        get: function () {\n            return getCss(this.name, 'borderRightStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderRightStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderRightStyle = function (value) {\n        this.borderRightStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderRightWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderRightWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderRightWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderRightWidth = function (value) {\n        this.borderRightWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderSpacing\", {\n        get: function () {\n            return getCss(this.name, 'borderSpacing');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderSpacing: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderSpacing = function (value) {\n        this.borderSpacing = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderStartEndRadius\", {\n        get: function () {\n            return getCss(this.name, 'borderStartEndRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderStartEndRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderStartEndRadius = function (value) {\n        this.borderStartEndRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderStartStartRadius\", {\n        get: function () {\n            return getCss(this.name, 'borderStartStartRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderStartStartRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderStartStartRadius = function (value) {\n        this.borderStartStartRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderStyle\", {\n        get: function () {\n            return getCss(this.name, 'borderStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderStyle = function (value) {\n        this.borderStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderTop\", {\n        get: function () {\n            return getCss(this.name, 'borderTop');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderTop: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderTop = function (value) {\n        this.borderTop = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderTopColor\", {\n        get: function () {\n            return getCss(this.name, 'borderTopColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderTopColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderTopColor = function (value) {\n        this.borderTopColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderTopLeftRadius\", {\n        get: function () {\n            return getCss(this.name, 'borderTopLeftRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderTopLeftRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderTopLeftRadius = function (value) {\n        this.borderTopLeftRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderTopRightRadius\", {\n        get: function () {\n            return getCss(this.name, 'borderTopRightRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderTopRightRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderTopRightRadius = function (value) {\n        this.borderTopRightRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderTopStyle\", {\n        get: function () {\n            return getCss(this.name, 'borderTopStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderTopStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderTopStyle = function (value) {\n        this.borderTopStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderTopWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderTopWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderTopWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderTopWidth = function (value) {\n        this.borderTopWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"borderWidth\", {\n        get: function () {\n            return getCss(this.name, 'borderWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                borderWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBorderWidth = function (value) {\n        this.borderWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"bottom\", {\n        get: function () {\n            return getCss(this.name, 'bottom');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                bottom: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBottom = function (value) {\n        this.bottom = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"boxShadow\", {\n        get: function () {\n            return getCss(this.name, 'boxShadow');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                boxShadow: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBoxShadow = function (value) {\n        this.boxShadow = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"boxSizing\", {\n        get: function () {\n            return getCss(this.name, 'boxSizing');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                boxSizing: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBoxSizing = function (value) {\n        this.boxSizing = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"breakAfter\", {\n        get: function () {\n            return getCss(this.name, 'breakAfter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                breakAfter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBreakAfter = function (value) {\n        this.breakAfter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"breakBefore\", {\n        get: function () {\n            return getCss(this.name, 'breakBefore');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                breakBefore: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBreakBefore = function (value) {\n        this.breakBefore = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"breakInside\", {\n        get: function () {\n            return getCss(this.name, 'breakInside');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                breakInside: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBreakInside = function (value) {\n        this.breakInside = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"bufferedRendering\", {\n        get: function () {\n            return getCss(this.name, 'bufferedRendering');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                bufferedRendering: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setBufferedRendering = function (value) {\n        this.bufferedRendering = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"captionSide\", {\n        get: function () {\n            return getCss(this.name, 'captionSide');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                captionSide: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setCaptionSide = function (value) {\n        this.captionSide = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"caretColor\", {\n        get: function () {\n            return getCss(this.name, 'caretColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                caretColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setCaretColor = function (value) {\n        this.caretColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"clear\", {\n        get: function () {\n            return getCss(this.name, 'clear');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                clear: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setClear = function (value) {\n        this.clear = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"clip\", {\n        get: function () {\n            return getCss(this.name, 'clip');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                clip: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setClip = function (value) {\n        this.clip = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"clipPath\", {\n        get: function () {\n            return getCss(this.name, 'clipPath');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                clipPath: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setClipPath = function (value) {\n        this.clipPath = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"clipRule\", {\n        get: function () {\n            return getCss(this.name, 'clipRule');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                clipRule: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setClipRule = function (value) {\n        this.clipRule = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"color\", {\n        get: function () {\n            return getCss(this.name, 'color');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                color: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColor = function (value) {\n        this.color = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"colorInterpolation\", {\n        get: function () {\n            return getCss(this.name, 'colorInterpolation');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                colorInterpolation: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColorInterpolation = function (value) {\n        this.colorInterpolation = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"colorInterpolationFilters\", {\n        get: function () {\n            return getCss(this.name, 'colorInterpolationFilters');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                colorInterpolationFilters: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColorInterpolationFilters = function (value) {\n        this.colorInterpolationFilters = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"colorRendering\", {\n        get: function () {\n            return getCss(this.name, 'colorRendering');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                colorRendering: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColorRendering = function (value) {\n        this.colorRendering = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"colorScheme\", {\n        get: function () {\n            return getCss(this.name, 'colorScheme');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                colorScheme: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColorScheme = function (value) {\n        this.colorScheme = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"columnCount\", {\n        get: function () {\n            return getCss(this.name, 'columnCount');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                columnCount: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColumnCount = function (value) {\n        this.columnCount = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"columnFill\", {\n        get: function () {\n            return getCss(this.name, 'columnFill');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                columnFill: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColumnFill = function (value) {\n        this.columnFill = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"columnGap\", {\n        get: function () {\n            return getCss(this.name, 'columnGap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                columnGap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColumnGap = function (value) {\n        this.columnGap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"columnRule\", {\n        get: function () {\n            return getCss(this.name, 'columnRule');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                columnRule: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColumnRule = function (value) {\n        this.columnRule = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"columnRuleColor\", {\n        get: function () {\n            return getCss(this.name, 'columnRuleColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                columnRuleColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColumnRuleColor = function (value) {\n        this.columnRuleColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"columnRuleStyle\", {\n        get: function () {\n            return getCss(this.name, 'columnRuleStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                columnRuleStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColumnRuleStyle = function (value) {\n        this.columnRuleStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"columnRuleWidth\", {\n        get: function () {\n            return getCss(this.name, 'columnRuleWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                columnRuleWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColumnRuleWidth = function (value) {\n        this.columnRuleWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"columnSpan\", {\n        get: function () {\n            return getCss(this.name, 'columnSpan');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                columnSpan: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColumnSpan = function (value) {\n        this.columnSpan = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"columnWidth\", {\n        get: function () {\n            return getCss(this.name, 'columnWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                columnWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColumnWidth = function (value) {\n        this.columnWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"columns\", {\n        get: function () {\n            return getCss(this.name, 'columns');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                columns: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setColumns = function (value) {\n        this.columns = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"contain\", {\n        get: function () {\n            return getCss(this.name, 'contain');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                contain: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setContain = function (value) {\n        this.contain = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"containIntrinsicBlockSize\", {\n        get: function () {\n            return getCss(this.name, 'containIntrinsicBlockSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                containIntrinsicBlockSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setContainIntrinsicBlockSize = function (value) {\n        this.containIntrinsicBlockSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"containIntrinsicHeight\", {\n        get: function () {\n            return getCss(this.name, 'containIntrinsicHeight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                containIntrinsicHeight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setContainIntrinsicHeight = function (value) {\n        this.containIntrinsicHeight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"containIntrinsicInlineSize\", {\n        get: function () {\n            return getCss(this.name, 'containIntrinsicInlineSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                containIntrinsicInlineSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setContainIntrinsicInlineSize = function (value) {\n        this.containIntrinsicInlineSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"containIntrinsicSize\", {\n        get: function () {\n            return getCss(this.name, 'containIntrinsicSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                containIntrinsicSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setContainIntrinsicSize = function (value) {\n        this.containIntrinsicSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"containIntrinsicWidth\", {\n        get: function () {\n            return getCss(this.name, 'containIntrinsicWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                containIntrinsicWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setContainIntrinsicWidth = function (value) {\n        this.containIntrinsicWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"container\", {\n        get: function () {\n            return getCss(this.name, 'container');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                container: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setContainer = function (value) {\n        this.container = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"containerName\", {\n        get: function () {\n            return getCss(this.name, 'containerName');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                containerName: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setContainerName = function (value) {\n        this.containerName = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"containerType\", {\n        get: function () {\n            return getCss(this.name, 'containerType');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                containerType: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setContainerType = function (value) {\n        this.containerType = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"content\", {\n        get: function () {\n            return getCss(this.name, 'content');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                content: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setContent = function (value) {\n        this.content = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"contentVisibility\", {\n        get: function () {\n            return getCss(this.name, 'contentVisibility');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                contentVisibility: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setContentVisibility = function (value) {\n        this.contentVisibility = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"counterIncrement\", {\n        get: function () {\n            return getCss(this.name, 'counterIncrement');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                counterIncrement: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setCounterIncrement = function (value) {\n        this.counterIncrement = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"counterReset\", {\n        get: function () {\n            return getCss(this.name, 'counterReset');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                counterReset: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setCounterReset = function (value) {\n        this.counterReset = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"counterSet\", {\n        get: function () {\n            return getCss(this.name, 'counterSet');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                counterSet: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setCounterSet = function (value) {\n        this.counterSet = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"cursor\", {\n        get: function () {\n            return getCss(this.name, 'cursor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                cursor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setCursor = function (value) {\n        this.cursor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"cx\", {\n        get: function () {\n            return getCss(this.name, 'cx');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                cx: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setCx = function (value) {\n        this.cx = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"cy\", {\n        get: function () {\n            return getCss(this.name, 'cy');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                cy: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setCy = function (value) {\n        this.cy = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"d\", {\n        get: function () {\n            return getCss(this.name, 'd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                d: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setD = function (value) {\n        this.d = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"descentOverride\", {\n        get: function () {\n            return getCss(this.name, 'descentOverride');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                descentOverride: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setDescentOverride = function (value) {\n        this.descentOverride = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"direction\", {\n        get: function () {\n            return getCss(this.name, 'direction');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                direction: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setDirection = function (value) {\n        this.direction = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"display\", {\n        get: function () {\n            return getCss(this.name, 'display');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                display: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setDisplay = function (value) {\n        this.display = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"dominantBaseline\", {\n        get: function () {\n            return getCss(this.name, 'dominantBaseline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                dominantBaseline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setDominantBaseline = function (value) {\n        this.dominantBaseline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"emptyCells\", {\n        get: function () {\n            return getCss(this.name, 'emptyCells');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                emptyCells: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setEmptyCells = function (value) {\n        this.emptyCells = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fallback\", {\n        get: function () {\n            return getCss(this.name, 'fallback');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fallback: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFallback = function (value) {\n        this.fallback = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fill\", {\n        get: function () {\n            return getCss(this.name, 'fill');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fill: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFill = function (value) {\n        this.fill = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fillOpacity\", {\n        get: function () {\n            return getCss(this.name, 'fillOpacity');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fillOpacity: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFillOpacity = function (value) {\n        this.fillOpacity = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fillRule\", {\n        get: function () {\n            return getCss(this.name, 'fillRule');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fillRule: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFillRule = function (value) {\n        this.fillRule = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"filter\", {\n        get: function () {\n            return getCss(this.name, 'filter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                filter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFilter = function (value) {\n        this.filter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"flex\", {\n        get: function () {\n            return getCss(this.name, 'flex');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                flex: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFlex = function (value) {\n        this.flex = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"flexBasis\", {\n        get: function () {\n            return getCss(this.name, 'flexBasis');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                flexBasis: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFlexBasis = function (value) {\n        this.flexBasis = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"flexDirection\", {\n        get: function () {\n            return getCss(this.name, 'flexDirection');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                flexDirection: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFlexDirection = function (value) {\n        this.flexDirection = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"flexFlow\", {\n        get: function () {\n            return getCss(this.name, 'flexFlow');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                flexFlow: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFlexFlow = function (value) {\n        this.flexFlow = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"flexGrow\", {\n        get: function () {\n            return getCss(this.name, 'flexGrow');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                flexGrow: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFlexGrow = function (value) {\n        this.flexGrow = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"flexShrink\", {\n        get: function () {\n            return getCss(this.name, 'flexShrink');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                flexShrink: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFlexShrink = function (value) {\n        this.flexShrink = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"flexWrap\", {\n        get: function () {\n            return getCss(this.name, 'flexWrap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                flexWrap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFlexWrap = function (value) {\n        this.flexWrap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"float\", {\n        get: function () {\n            return getCss(this.name, 'float');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                float: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFloat = function (value) {\n        this.float = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"floodColor\", {\n        get: function () {\n            return getCss(this.name, 'floodColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                floodColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFloodColor = function (value) {\n        this.floodColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"floodOpacity\", {\n        get: function () {\n            return getCss(this.name, 'floodOpacity');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                floodOpacity: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFloodOpacity = function (value) {\n        this.floodOpacity = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"font\", {\n        get: function () {\n            return getCss(this.name, 'font');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                font: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFont = function (value) {\n        this.font = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontDisplay\", {\n        get: function () {\n            return getCss(this.name, 'fontDisplay');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontDisplay: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontDisplay = function (value) {\n        this.fontDisplay = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontFamily\", {\n        get: function () {\n            return getCss(this.name, 'fontFamily');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontFamily: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontFamily = function (value) {\n        this.fontFamily = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontFeatureSettings\", {\n        get: function () {\n            return getCss(this.name, 'fontFeatureSettings');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontFeatureSettings: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontFeatureSettings = function (value) {\n        this.fontFeatureSettings = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontKerning\", {\n        get: function () {\n            return getCss(this.name, 'fontKerning');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontKerning: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontKerning = function (value) {\n        this.fontKerning = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontOpticalSizing\", {\n        get: function () {\n            return getCss(this.name, 'fontOpticalSizing');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontOpticalSizing: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontOpticalSizing = function (value) {\n        this.fontOpticalSizing = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontPalette\", {\n        get: function () {\n            return getCss(this.name, 'fontPalette');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontPalette: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontPalette = function (value) {\n        this.fontPalette = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontSize\", {\n        get: function () {\n            return getCss(this.name, 'fontSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontSize = function (value) {\n        this.fontSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontStretch\", {\n        get: function () {\n            return getCss(this.name, 'fontStretch');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontStretch: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontStretch = function (value) {\n        this.fontStretch = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontStyle\", {\n        get: function () {\n            return getCss(this.name, 'fontStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontStyle = function (value) {\n        this.fontStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontSynthesis\", {\n        get: function () {\n            return getCss(this.name, 'fontSynthesis');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontSynthesis: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontSynthesis = function (value) {\n        this.fontSynthesis = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontSynthesisSmallCaps\", {\n        get: function () {\n            return getCss(this.name, 'fontSynthesisSmallCaps');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontSynthesisSmallCaps: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontSynthesisSmallCaps = function (value) {\n        this.fontSynthesisSmallCaps = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontSynthesisStyle\", {\n        get: function () {\n            return getCss(this.name, 'fontSynthesisStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontSynthesisStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontSynthesisStyle = function (value) {\n        this.fontSynthesisStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontSynthesisWeight\", {\n        get: function () {\n            return getCss(this.name, 'fontSynthesisWeight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontSynthesisWeight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontSynthesisWeight = function (value) {\n        this.fontSynthesisWeight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontVariant\", {\n        get: function () {\n            return getCss(this.name, 'fontVariant');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontVariant: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontVariant = function (value) {\n        this.fontVariant = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontVariantAlternates\", {\n        get: function () {\n            return getCss(this.name, 'fontVariantAlternates');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontVariantAlternates: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontVariantAlternates = function (value) {\n        this.fontVariantAlternates = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontVariantCaps\", {\n        get: function () {\n            return getCss(this.name, 'fontVariantCaps');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontVariantCaps: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontVariantCaps = function (value) {\n        this.fontVariantCaps = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontVariantEastAsian\", {\n        get: function () {\n            return getCss(this.name, 'fontVariantEastAsian');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontVariantEastAsian: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontVariantEastAsian = function (value) {\n        this.fontVariantEastAsian = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontVariantLigatures\", {\n        get: function () {\n            return getCss(this.name, 'fontVariantLigatures');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontVariantLigatures: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontVariantLigatures = function (value) {\n        this.fontVariantLigatures = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontVariantNumeric\", {\n        get: function () {\n            return getCss(this.name, 'fontVariantNumeric');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontVariantNumeric: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontVariantNumeric = function (value) {\n        this.fontVariantNumeric = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontVariantPosition\", {\n        get: function () {\n            return getCss(this.name, 'fontVariantPosition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontVariantPosition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontVariantPosition = function (value) {\n        this.fontVariantPosition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontVariationSettings\", {\n        get: function () {\n            return getCss(this.name, 'fontVariationSettings');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontVariationSettings: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontVariationSettings = function (value) {\n        this.fontVariationSettings = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"fontWeight\", {\n        get: function () {\n            return getCss(this.name, 'fontWeight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                fontWeight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setFontWeight = function (value) {\n        this.fontWeight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"forcedColorAdjust\", {\n        get: function () {\n            return getCss(this.name, 'forcedColorAdjust');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                forcedColorAdjust: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setForcedColorAdjust = function (value) {\n        this.forcedColorAdjust = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gap\", {\n        get: function () {\n            return getCss(this.name, 'gap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGap = function (value) {\n        this.gap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"grid\", {\n        get: function () {\n            return getCss(this.name, 'grid');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                grid: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGrid = function (value) {\n        this.grid = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridArea\", {\n        get: function () {\n            return getCss(this.name, 'gridArea');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridArea: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridArea = function (value) {\n        this.gridArea = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridAutoColumns\", {\n        get: function () {\n            return getCss(this.name, 'gridAutoColumns');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridAutoColumns: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridAutoColumns = function (value) {\n        this.gridAutoColumns = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridAutoFlow\", {\n        get: function () {\n            return getCss(this.name, 'gridAutoFlow');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridAutoFlow: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridAutoFlow = function (value) {\n        this.gridAutoFlow = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridAutoRows\", {\n        get: function () {\n            return getCss(this.name, 'gridAutoRows');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridAutoRows: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridAutoRows = function (value) {\n        this.gridAutoRows = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridColumn\", {\n        get: function () {\n            return getCss(this.name, 'gridColumn');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridColumn: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridColumn = function (value) {\n        this.gridColumn = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridColumnEnd\", {\n        get: function () {\n            return getCss(this.name, 'gridColumnEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridColumnEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridColumnEnd = function (value) {\n        this.gridColumnEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridColumnGap\", {\n        get: function () {\n            return getCss(this.name, 'gridColumnGap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridColumnGap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridColumnGap = function (value) {\n        this.gridColumnGap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridColumnStart\", {\n        get: function () {\n            return getCss(this.name, 'gridColumnStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridColumnStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridColumnStart = function (value) {\n        this.gridColumnStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridGap\", {\n        get: function () {\n            return getCss(this.name, 'gridGap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridGap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridGap = function (value) {\n        this.gridGap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridRow\", {\n        get: function () {\n            return getCss(this.name, 'gridRow');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridRow: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridRow = function (value) {\n        this.gridRow = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridRowEnd\", {\n        get: function () {\n            return getCss(this.name, 'gridRowEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridRowEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridRowEnd = function (value) {\n        this.gridRowEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridRowGap\", {\n        get: function () {\n            return getCss(this.name, 'gridRowGap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridRowGap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridRowGap = function (value) {\n        this.gridRowGap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridRowStart\", {\n        get: function () {\n            return getCss(this.name, 'gridRowStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridRowStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridRowStart = function (value) {\n        this.gridRowStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridTemplate\", {\n        get: function () {\n            return getCss(this.name, 'gridTemplate');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridTemplate: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridTemplate = function (value) {\n        this.gridTemplate = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridTemplateAreas\", {\n        get: function () {\n            return getCss(this.name, 'gridTemplateAreas');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridTemplateAreas: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridTemplateAreas = function (value) {\n        this.gridTemplateAreas = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridTemplateColumns\", {\n        get: function () {\n            return getCss(this.name, 'gridTemplateColumns');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridTemplateColumns: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridTemplateColumns = function (value) {\n        this.gridTemplateColumns = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"gridTemplateRows\", {\n        get: function () {\n            return getCss(this.name, 'gridTemplateRows');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                gridTemplateRows: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setGridTemplateRows = function (value) {\n        this.gridTemplateRows = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"height\", {\n        get: function () {\n            return getCss(this.name, 'height');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                height: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setHeight = function (value) {\n        this.height = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"hyphenateCharacter\", {\n        get: function () {\n            return getCss(this.name, 'hyphenateCharacter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                hyphenateCharacter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setHyphenateCharacter = function (value) {\n        this.hyphenateCharacter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"hyphenateLimitChars\", {\n        get: function () {\n            return getCss(this.name, 'hyphenateLimitChars');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                hyphenateLimitChars: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setHyphenateLimitChars = function (value) {\n        this.hyphenateLimitChars = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"hyphens\", {\n        get: function () {\n            return getCss(this.name, 'hyphens');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                hyphens: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setHyphens = function (value) {\n        this.hyphens = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"imageOrientation\", {\n        get: function () {\n            return getCss(this.name, 'imageOrientation');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                imageOrientation: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setImageOrientation = function (value) {\n        this.imageOrientation = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"imageRendering\", {\n        get: function () {\n            return getCss(this.name, 'imageRendering');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                imageRendering: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setImageRendering = function (value) {\n        this.imageRendering = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"inherits\", {\n        get: function () {\n            return getCss(this.name, 'inherits');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                inherits: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setInherits = function (value) {\n        this.inherits = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"initialLetter\", {\n        get: function () {\n            return getCss(this.name, 'initialLetter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                initialLetter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setInitialLetter = function (value) {\n        this.initialLetter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"initialValue\", {\n        get: function () {\n            return getCss(this.name, 'initialValue');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                initialValue: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setInitialValue = function (value) {\n        this.initialValue = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"inlineSize\", {\n        get: function () {\n            return getCss(this.name, 'inlineSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                inlineSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setInlineSize = function (value) {\n        this.inlineSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"inset\", {\n        get: function () {\n            return getCss(this.name, 'inset');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                inset: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setInset = function (value) {\n        this.inset = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"insetBlock\", {\n        get: function () {\n            return getCss(this.name, 'insetBlock');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                insetBlock: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setInsetBlock = function (value) {\n        this.insetBlock = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"insetBlockEnd\", {\n        get: function () {\n            return getCss(this.name, 'insetBlockEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                insetBlockEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setInsetBlockEnd = function (value) {\n        this.insetBlockEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"insetBlockStart\", {\n        get: function () {\n            return getCss(this.name, 'insetBlockStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                insetBlockStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setInsetBlockStart = function (value) {\n        this.insetBlockStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"insetInline\", {\n        get: function () {\n            return getCss(this.name, 'insetInline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                insetInline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setInsetInline = function (value) {\n        this.insetInline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"insetInlineEnd\", {\n        get: function () {\n            return getCss(this.name, 'insetInlineEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                insetInlineEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setInsetInlineEnd = function (value) {\n        this.insetInlineEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"insetInlineStart\", {\n        get: function () {\n            return getCss(this.name, 'insetInlineStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                insetInlineStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setInsetInlineStart = function (value) {\n        this.insetInlineStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"isolation\", {\n        get: function () {\n            return getCss(this.name, 'isolation');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                isolation: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setIsolation = function (value) {\n        this.isolation = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"justifyContent\", {\n        get: function () {\n            return getCss(this.name, 'justifyContent');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                justifyContent: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setJustifyContent = function (value) {\n        this.justifyContent = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"justifyItems\", {\n        get: function () {\n            return getCss(this.name, 'justifyItems');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                justifyItems: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setJustifyItems = function (value) {\n        this.justifyItems = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"justifySelf\", {\n        get: function () {\n            return getCss(this.name, 'justifySelf');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                justifySelf: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setJustifySelf = function (value) {\n        this.justifySelf = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"left\", {\n        get: function () {\n            return getCss(this.name, 'left');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                left: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setLeft = function (value) {\n        this.left = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"letterSpacing\", {\n        get: function () {\n            return getCss(this.name, 'letterSpacing');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                letterSpacing: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setLetterSpacing = function (value) {\n        this.letterSpacing = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"lightingColor\", {\n        get: function () {\n            return getCss(this.name, 'lightingColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                lightingColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setLightingColor = function (value) {\n        this.lightingColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"lineBreak\", {\n        get: function () {\n            return getCss(this.name, 'lineBreak');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                lineBreak: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setLineBreak = function (value) {\n        this.lineBreak = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"lineGapOverride\", {\n        get: function () {\n            return getCss(this.name, 'lineGapOverride');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                lineGapOverride: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setLineGapOverride = function (value) {\n        this.lineGapOverride = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"lineHeight\", {\n        get: function () {\n            return getCss(this.name, 'lineHeight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                lineHeight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setLineHeight = function (value) {\n        this.lineHeight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"listStyle\", {\n        get: function () {\n            return getCss(this.name, 'listStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                listStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setListStyle = function (value) {\n        this.listStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"listStyleImage\", {\n        get: function () {\n            return getCss(this.name, 'listStyleImage');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                listStyleImage: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setListStyleImage = function (value) {\n        this.listStyleImage = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"listStylePosition\", {\n        get: function () {\n            return getCss(this.name, 'listStylePosition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                listStylePosition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setListStylePosition = function (value) {\n        this.listStylePosition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"listStyleType\", {\n        get: function () {\n            return getCss(this.name, 'listStyleType');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                listStyleType: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setListStyleType = function (value) {\n        this.listStyleType = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"margin\", {\n        get: function () {\n            return getCss(this.name, 'margin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                margin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMargin = function (value) {\n        this.margin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"marginBlock\", {\n        get: function () {\n            return getCss(this.name, 'marginBlock');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                marginBlock: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarginBlock = function (value) {\n        this.marginBlock = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"marginBlockEnd\", {\n        get: function () {\n            return getCss(this.name, 'marginBlockEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                marginBlockEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarginBlockEnd = function (value) {\n        this.marginBlockEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"marginBlockStart\", {\n        get: function () {\n            return getCss(this.name, 'marginBlockStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                marginBlockStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarginBlockStart = function (value) {\n        this.marginBlockStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"marginBottom\", {\n        get: function () {\n            return getCss(this.name, 'marginBottom');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                marginBottom: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarginBottom = function (value) {\n        this.marginBottom = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"marginInline\", {\n        get: function () {\n            return getCss(this.name, 'marginInline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                marginInline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarginInline = function (value) {\n        this.marginInline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"marginInlineEnd\", {\n        get: function () {\n            return getCss(this.name, 'marginInlineEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                marginInlineEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarginInlineEnd = function (value) {\n        this.marginInlineEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"marginInlineStart\", {\n        get: function () {\n            return getCss(this.name, 'marginInlineStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                marginInlineStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarginInlineStart = function (value) {\n        this.marginInlineStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"marginLeft\", {\n        get: function () {\n            return getCss(this.name, 'marginLeft');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                marginLeft: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarginLeft = function (value) {\n        this.marginLeft = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"marginRight\", {\n        get: function () {\n            return getCss(this.name, 'marginRight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                marginRight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarginRight = function (value) {\n        this.marginRight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"marginTop\", {\n        get: function () {\n            return getCss(this.name, 'marginTop');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                marginTop: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarginTop = function (value) {\n        this.marginTop = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"marker\", {\n        get: function () {\n            return getCss(this.name, 'marker');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                marker: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarker = function (value) {\n        this.marker = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"markerEnd\", {\n        get: function () {\n            return getCss(this.name, 'markerEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                markerEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarkerEnd = function (value) {\n        this.markerEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"markerMid\", {\n        get: function () {\n            return getCss(this.name, 'markerMid');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                markerMid: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarkerMid = function (value) {\n        this.markerMid = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"markerStart\", {\n        get: function () {\n            return getCss(this.name, 'markerStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                markerStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMarkerStart = function (value) {\n        this.markerStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"mask\", {\n        get: function () {\n            return getCss(this.name, 'mask');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                mask: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMask = function (value) {\n        this.mask = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"maskType\", {\n        get: function () {\n            return getCss(this.name, 'maskType');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                maskType: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMaskType = function (value) {\n        this.maskType = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"mathDepth\", {\n        get: function () {\n            return getCss(this.name, 'mathDepth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                mathDepth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMathDepth = function (value) {\n        this.mathDepth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"mathShift\", {\n        get: function () {\n            return getCss(this.name, 'mathShift');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                mathShift: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMathShift = function (value) {\n        this.mathShift = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"mathStyle\", {\n        get: function () {\n            return getCss(this.name, 'mathStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                mathStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMathStyle = function (value) {\n        this.mathStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"maxBlockSize\", {\n        get: function () {\n            return getCss(this.name, 'maxBlockSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                maxBlockSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMaxBlockSize = function (value) {\n        this.maxBlockSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"maxHeight\", {\n        get: function () {\n            return getCss(this.name, 'maxHeight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                maxHeight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMaxHeight = function (value) {\n        this.maxHeight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"maxInlineSize\", {\n        get: function () {\n            return getCss(this.name, 'maxInlineSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                maxInlineSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMaxInlineSize = function (value) {\n        this.maxInlineSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"maxWidth\", {\n        get: function () {\n            return getCss(this.name, 'maxWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                maxWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMaxWidth = function (value) {\n        this.maxWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"minBlockSize\", {\n        get: function () {\n            return getCss(this.name, 'minBlockSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                minBlockSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMinBlockSize = function (value) {\n        this.minBlockSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"minHeight\", {\n        get: function () {\n            return getCss(this.name, 'minHeight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                minHeight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMinHeight = function (value) {\n        this.minHeight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"minInlineSize\", {\n        get: function () {\n            return getCss(this.name, 'minInlineSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                minInlineSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMinInlineSize = function (value) {\n        this.minInlineSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"minWidth\", {\n        get: function () {\n            return getCss(this.name, 'minWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                minWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMinWidth = function (value) {\n        this.minWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"mixBlendMode\", {\n        get: function () {\n            return getCss(this.name, 'mixBlendMode');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                mixBlendMode: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setMixBlendMode = function (value) {\n        this.mixBlendMode = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"negative\", {\n        get: function () {\n            return getCss(this.name, 'negative');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                negative: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setNegative = function (value) {\n        this.negative = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"objectFit\", {\n        get: function () {\n            return getCss(this.name, 'objectFit');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                objectFit: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setObjectFit = function (value) {\n        this.objectFit = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"objectPosition\", {\n        get: function () {\n            return getCss(this.name, 'objectPosition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                objectPosition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setObjectPosition = function (value) {\n        this.objectPosition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"objectViewBox\", {\n        get: function () {\n            return getCss(this.name, 'objectViewBox');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                objectViewBox: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setObjectViewBox = function (value) {\n        this.objectViewBox = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"offset\", {\n        get: function () {\n            return getCss(this.name, 'offset');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                offset: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOffset = function (value) {\n        this.offset = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"offsetAnchor\", {\n        get: function () {\n            return getCss(this.name, 'offsetAnchor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                offsetAnchor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOffsetAnchor = function (value) {\n        this.offsetAnchor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"offsetDistance\", {\n        get: function () {\n            return getCss(this.name, 'offsetDistance');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                offsetDistance: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOffsetDistance = function (value) {\n        this.offsetDistance = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"offsetPath\", {\n        get: function () {\n            return getCss(this.name, 'offsetPath');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                offsetPath: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOffsetPath = function (value) {\n        this.offsetPath = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"offsetPosition\", {\n        get: function () {\n            return getCss(this.name, 'offsetPosition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                offsetPosition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOffsetPosition = function (value) {\n        this.offsetPosition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"offsetRotate\", {\n        get: function () {\n            return getCss(this.name, 'offsetRotate');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                offsetRotate: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOffsetRotate = function (value) {\n        this.offsetRotate = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"opacity\", {\n        get: function () {\n            return getCss(this.name, 'opacity');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                opacity: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOpacity = function (value) {\n        this.opacity = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"order\", {\n        get: function () {\n            return getCss(this.name, 'order');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                order: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOrder = function (value) {\n        this.order = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"orphans\", {\n        get: function () {\n            return getCss(this.name, 'orphans');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                orphans: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOrphans = function (value) {\n        this.orphans = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"outline\", {\n        get: function () {\n            return getCss(this.name, 'outline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                outline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOutline = function (value) {\n        this.outline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"outlineColor\", {\n        get: function () {\n            return getCss(this.name, 'outlineColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                outlineColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOutlineColor = function (value) {\n        this.outlineColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"outlineOffset\", {\n        get: function () {\n            return getCss(this.name, 'outlineOffset');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                outlineOffset: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOutlineOffset = function (value) {\n        this.outlineOffset = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"outlineStyle\", {\n        get: function () {\n            return getCss(this.name, 'outlineStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                outlineStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOutlineStyle = function (value) {\n        this.outlineStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"outlineWidth\", {\n        get: function () {\n            return getCss(this.name, 'outlineWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                outlineWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOutlineWidth = function (value) {\n        this.outlineWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overflow\", {\n        get: function () {\n            return getCss(this.name, 'overflow');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overflow: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverflow = function (value) {\n        this.overflow = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overflowAnchor\", {\n        get: function () {\n            return getCss(this.name, 'overflowAnchor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overflowAnchor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverflowAnchor = function (value) {\n        this.overflowAnchor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overflowClipMargin\", {\n        get: function () {\n            return getCss(this.name, 'overflowClipMargin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overflowClipMargin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverflowClipMargin = function (value) {\n        this.overflowClipMargin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overflowWrap\", {\n        get: function () {\n            return getCss(this.name, 'overflowWrap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overflowWrap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverflowWrap = function (value) {\n        this.overflowWrap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overflowX\", {\n        get: function () {\n            return getCss(this.name, 'overflowX');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overflowX: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverflowX = function (value) {\n        this.overflowX = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overflowY\", {\n        get: function () {\n            return getCss(this.name, 'overflowY');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overflowY: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverflowY = function (value) {\n        this.overflowY = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overlay\", {\n        get: function () {\n            return getCss(this.name, 'overlay');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overlay: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverlay = function (value) {\n        this.overlay = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overrideColors\", {\n        get: function () {\n            return getCss(this.name, 'overrideColors');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overrideColors: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverrideColors = function (value) {\n        this.overrideColors = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overscrollBehavior\", {\n        get: function () {\n            return getCss(this.name, 'overscrollBehavior');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overscrollBehavior: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverscrollBehavior = function (value) {\n        this.overscrollBehavior = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overscrollBehaviorBlock\", {\n        get: function () {\n            return getCss(this.name, 'overscrollBehaviorBlock');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overscrollBehaviorBlock: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverscrollBehaviorBlock = function (value) {\n        this.overscrollBehaviorBlock = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overscrollBehaviorInline\", {\n        get: function () {\n            return getCss(this.name, 'overscrollBehaviorInline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overscrollBehaviorInline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverscrollBehaviorInline = function (value) {\n        this.overscrollBehaviorInline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overscrollBehaviorX\", {\n        get: function () {\n            return getCss(this.name, 'overscrollBehaviorX');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overscrollBehaviorX: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverscrollBehaviorX = function (value) {\n        this.overscrollBehaviorX = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"overscrollBehaviorY\", {\n        get: function () {\n            return getCss(this.name, 'overscrollBehaviorY');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                overscrollBehaviorY: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setOverscrollBehaviorY = function (value) {\n        this.overscrollBehaviorY = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"pad\", {\n        get: function () {\n            return getCss(this.name, 'pad');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                pad: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPad = function (value) {\n        this.pad = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"padding\", {\n        get: function () {\n            return getCss(this.name, 'padding');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                padding: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPadding = function (value) {\n        this.padding = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"paddingBlock\", {\n        get: function () {\n            return getCss(this.name, 'paddingBlock');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                paddingBlock: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPaddingBlock = function (value) {\n        this.paddingBlock = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"paddingBlockEnd\", {\n        get: function () {\n            return getCss(this.name, 'paddingBlockEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                paddingBlockEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPaddingBlockEnd = function (value) {\n        this.paddingBlockEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"paddingBlockStart\", {\n        get: function () {\n            return getCss(this.name, 'paddingBlockStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                paddingBlockStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPaddingBlockStart = function (value) {\n        this.paddingBlockStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"paddingBottom\", {\n        get: function () {\n            return getCss(this.name, 'paddingBottom');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                paddingBottom: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPaddingBottom = function (value) {\n        this.paddingBottom = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"paddingInline\", {\n        get: function () {\n            return getCss(this.name, 'paddingInline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                paddingInline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPaddingInline = function (value) {\n        this.paddingInline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"paddingInlineEnd\", {\n        get: function () {\n            return getCss(this.name, 'paddingInlineEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                paddingInlineEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPaddingInlineEnd = function (value) {\n        this.paddingInlineEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"paddingInlineStart\", {\n        get: function () {\n            return getCss(this.name, 'paddingInlineStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                paddingInlineStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPaddingInlineStart = function (value) {\n        this.paddingInlineStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"paddingLeft\", {\n        get: function () {\n            return getCss(this.name, 'paddingLeft');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                paddingLeft: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPaddingLeft = function (value) {\n        this.paddingLeft = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"paddingRight\", {\n        get: function () {\n            return getCss(this.name, 'paddingRight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                paddingRight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPaddingRight = function (value) {\n        this.paddingRight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"paddingTop\", {\n        get: function () {\n            return getCss(this.name, 'paddingTop');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                paddingTop: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPaddingTop = function (value) {\n        this.paddingTop = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"page\", {\n        get: function () {\n            return getCss(this.name, 'page');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                page: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPage = function (value) {\n        this.page = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"pageBreakAfter\", {\n        get: function () {\n            return getCss(this.name, 'pageBreakAfter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                pageBreakAfter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPageBreakAfter = function (value) {\n        this.pageBreakAfter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"pageBreakBefore\", {\n        get: function () {\n            return getCss(this.name, 'pageBreakBefore');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                pageBreakBefore: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPageBreakBefore = function (value) {\n        this.pageBreakBefore = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"pageBreakInside\", {\n        get: function () {\n            return getCss(this.name, 'pageBreakInside');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                pageBreakInside: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPageBreakInside = function (value) {\n        this.pageBreakInside = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"pageOrientation\", {\n        get: function () {\n            return getCss(this.name, 'pageOrientation');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                pageOrientation: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPageOrientation = function (value) {\n        this.pageOrientation = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"paintOrder\", {\n        get: function () {\n            return getCss(this.name, 'paintOrder');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                paintOrder: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPaintOrder = function (value) {\n        this.paintOrder = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"perspective\", {\n        get: function () {\n            return getCss(this.name, 'perspective');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                perspective: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPerspective = function (value) {\n        this.perspective = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"perspectiveOrigin\", {\n        get: function () {\n            return getCss(this.name, 'perspectiveOrigin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                perspectiveOrigin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPerspectiveOrigin = function (value) {\n        this.perspectiveOrigin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"placeContent\", {\n        get: function () {\n            return getCss(this.name, 'placeContent');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                placeContent: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPlaceContent = function (value) {\n        this.placeContent = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"placeItems\", {\n        get: function () {\n            return getCss(this.name, 'placeItems');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                placeItems: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPlaceItems = function (value) {\n        this.placeItems = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"placeSelf\", {\n        get: function () {\n            return getCss(this.name, 'placeSelf');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                placeSelf: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPlaceSelf = function (value) {\n        this.placeSelf = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"pointerEvents\", {\n        get: function () {\n            return getCss(this.name, 'pointerEvents');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                pointerEvents: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPointerEvents = function (value) {\n        this.pointerEvents = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"position\", {\n        get: function () {\n            return getCss(this.name, 'position');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                position: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPosition = function (value) {\n        this.position = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"prefix\", {\n        get: function () {\n            return getCss(this.name, 'prefix');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                prefix: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setPrefix = function (value) {\n        this.prefix = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"quotes\", {\n        get: function () {\n            return getCss(this.name, 'quotes');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                quotes: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setQuotes = function (value) {\n        this.quotes = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"r\", {\n        get: function () {\n            return getCss(this.name, 'r');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                r: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setR = function (value) {\n        this.r = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"range\", {\n        get: function () {\n            return getCss(this.name, 'range');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                range: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setRange = function (value) {\n        this.range = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"resize\", {\n        get: function () {\n            return getCss(this.name, 'resize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                resize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setResize = function (value) {\n        this.resize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"right\", {\n        get: function () {\n            return getCss(this.name, 'right');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                right: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setRight = function (value) {\n        this.right = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"rotate\", {\n        get: function () {\n            return getCss(this.name, 'rotate');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                rotate: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setRotate = function (value) {\n        this.rotate = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"rowGap\", {\n        get: function () {\n            return getCss(this.name, 'rowGap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                rowGap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setRowGap = function (value) {\n        this.rowGap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"rubyPosition\", {\n        get: function () {\n            return getCss(this.name, 'rubyPosition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                rubyPosition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setRubyPosition = function (value) {\n        this.rubyPosition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"rx\", {\n        get: function () {\n            return getCss(this.name, 'rx');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                rx: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setRx = function (value) {\n        this.rx = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"ry\", {\n        get: function () {\n            return getCss(this.name, 'ry');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                ry: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setRy = function (value) {\n        this.ry = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scale\", {\n        get: function () {\n            return getCss(this.name, 'scale');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scale: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScale = function (value) {\n        this.scale = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollBehavior\", {\n        get: function () {\n            return getCss(this.name, 'scrollBehavior');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollBehavior: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollBehavior = function (value) {\n        this.scrollBehavior = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollMargin\", {\n        get: function () {\n            return getCss(this.name, 'scrollMargin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollMargin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollMargin = function (value) {\n        this.scrollMargin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollMarginBlock\", {\n        get: function () {\n            return getCss(this.name, 'scrollMarginBlock');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollMarginBlock: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollMarginBlock = function (value) {\n        this.scrollMarginBlock = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollMarginBlockEnd\", {\n        get: function () {\n            return getCss(this.name, 'scrollMarginBlockEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollMarginBlockEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollMarginBlockEnd = function (value) {\n        this.scrollMarginBlockEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollMarginBlockStart\", {\n        get: function () {\n            return getCss(this.name, 'scrollMarginBlockStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollMarginBlockStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollMarginBlockStart = function (value) {\n        this.scrollMarginBlockStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollMarginBottom\", {\n        get: function () {\n            return getCss(this.name, 'scrollMarginBottom');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollMarginBottom: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollMarginBottom = function (value) {\n        this.scrollMarginBottom = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollMarginInline\", {\n        get: function () {\n            return getCss(this.name, 'scrollMarginInline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollMarginInline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollMarginInline = function (value) {\n        this.scrollMarginInline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollMarginInlineEnd\", {\n        get: function () {\n            return getCss(this.name, 'scrollMarginInlineEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollMarginInlineEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollMarginInlineEnd = function (value) {\n        this.scrollMarginInlineEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollMarginInlineStart\", {\n        get: function () {\n            return getCss(this.name, 'scrollMarginInlineStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollMarginInlineStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollMarginInlineStart = function (value) {\n        this.scrollMarginInlineStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollMarginLeft\", {\n        get: function () {\n            return getCss(this.name, 'scrollMarginLeft');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollMarginLeft: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollMarginLeft = function (value) {\n        this.scrollMarginLeft = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollMarginRight\", {\n        get: function () {\n            return getCss(this.name, 'scrollMarginRight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollMarginRight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollMarginRight = function (value) {\n        this.scrollMarginRight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollMarginTop\", {\n        get: function () {\n            return getCss(this.name, 'scrollMarginTop');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollMarginTop: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollMarginTop = function (value) {\n        this.scrollMarginTop = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollPadding\", {\n        get: function () {\n            return getCss(this.name, 'scrollPadding');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollPadding: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollPadding = function (value) {\n        this.scrollPadding = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollPaddingBlock\", {\n        get: function () {\n            return getCss(this.name, 'scrollPaddingBlock');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollPaddingBlock: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollPaddingBlock = function (value) {\n        this.scrollPaddingBlock = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollPaddingBlockEnd\", {\n        get: function () {\n            return getCss(this.name, 'scrollPaddingBlockEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollPaddingBlockEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollPaddingBlockEnd = function (value) {\n        this.scrollPaddingBlockEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollPaddingBlockStart\", {\n        get: function () {\n            return getCss(this.name, 'scrollPaddingBlockStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollPaddingBlockStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollPaddingBlockStart = function (value) {\n        this.scrollPaddingBlockStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollPaddingBottom\", {\n        get: function () {\n            return getCss(this.name, 'scrollPaddingBottom');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollPaddingBottom: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollPaddingBottom = function (value) {\n        this.scrollPaddingBottom = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollPaddingInline\", {\n        get: function () {\n            return getCss(this.name, 'scrollPaddingInline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollPaddingInline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollPaddingInline = function (value) {\n        this.scrollPaddingInline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollPaddingInlineEnd\", {\n        get: function () {\n            return getCss(this.name, 'scrollPaddingInlineEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollPaddingInlineEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollPaddingInlineEnd = function (value) {\n        this.scrollPaddingInlineEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollPaddingInlineStart\", {\n        get: function () {\n            return getCss(this.name, 'scrollPaddingInlineStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollPaddingInlineStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollPaddingInlineStart = function (value) {\n        this.scrollPaddingInlineStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollPaddingLeft\", {\n        get: function () {\n            return getCss(this.name, 'scrollPaddingLeft');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollPaddingLeft: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollPaddingLeft = function (value) {\n        this.scrollPaddingLeft = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollPaddingRight\", {\n        get: function () {\n            return getCss(this.name, 'scrollPaddingRight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollPaddingRight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollPaddingRight = function (value) {\n        this.scrollPaddingRight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollPaddingTop\", {\n        get: function () {\n            return getCss(this.name, 'scrollPaddingTop');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollPaddingTop: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollPaddingTop = function (value) {\n        this.scrollPaddingTop = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollSnapAlign\", {\n        get: function () {\n            return getCss(this.name, 'scrollSnapAlign');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollSnapAlign: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollSnapAlign = function (value) {\n        this.scrollSnapAlign = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollSnapStop\", {\n        get: function () {\n            return getCss(this.name, 'scrollSnapStop');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollSnapStop: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollSnapStop = function (value) {\n        this.scrollSnapStop = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollSnapType\", {\n        get: function () {\n            return getCss(this.name, 'scrollSnapType');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollSnapType: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollSnapType = function (value) {\n        this.scrollSnapType = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollTimeline\", {\n        get: function () {\n            return getCss(this.name, 'scrollTimeline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollTimeline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollTimeline = function (value) {\n        this.scrollTimeline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollTimelineAxis\", {\n        get: function () {\n            return getCss(this.name, 'scrollTimelineAxis');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollTimelineAxis: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollTimelineAxis = function (value) {\n        this.scrollTimelineAxis = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollTimelineName\", {\n        get: function () {\n            return getCss(this.name, 'scrollTimelineName');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollTimelineName: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollTimelineName = function (value) {\n        this.scrollTimelineName = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"scrollbarGutter\", {\n        get: function () {\n            return getCss(this.name, 'scrollbarGutter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                scrollbarGutter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setScrollbarGutter = function (value) {\n        this.scrollbarGutter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"shapeImageThreshold\", {\n        get: function () {\n            return getCss(this.name, 'shapeImageThreshold');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                shapeImageThreshold: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setShapeImageThreshold = function (value) {\n        this.shapeImageThreshold = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"shapeMargin\", {\n        get: function () {\n            return getCss(this.name, 'shapeMargin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                shapeMargin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setShapeMargin = function (value) {\n        this.shapeMargin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"shapeOutside\", {\n        get: function () {\n            return getCss(this.name, 'shapeOutside');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                shapeOutside: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setShapeOutside = function (value) {\n        this.shapeOutside = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"shapeRendering\", {\n        get: function () {\n            return getCss(this.name, 'shapeRendering');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                shapeRendering: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setShapeRendering = function (value) {\n        this.shapeRendering = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"size\", {\n        get: function () {\n            return getCss(this.name, 'size');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                size: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setSize = function (value) {\n        this.size = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"sizeAdjust\", {\n        get: function () {\n            return getCss(this.name, 'sizeAdjust');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                sizeAdjust: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setSizeAdjust = function (value) {\n        this.sizeAdjust = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"speak\", {\n        get: function () {\n            return getCss(this.name, 'speak');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                speak: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setSpeak = function (value) {\n        this.speak = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"speakAs\", {\n        get: function () {\n            return getCss(this.name, 'speakAs');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                speakAs: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setSpeakAs = function (value) {\n        this.speakAs = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"src\", {\n        get: function () {\n            return getCss(this.name, 'src');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                src: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setSrc = function (value) {\n        this.src = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"stopColor\", {\n        get: function () {\n            return getCss(this.name, 'stopColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                stopColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setStopColor = function (value) {\n        this.stopColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"stopOpacity\", {\n        get: function () {\n            return getCss(this.name, 'stopOpacity');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                stopOpacity: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setStopOpacity = function (value) {\n        this.stopOpacity = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"stroke\", {\n        get: function () {\n            return getCss(this.name, 'stroke');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                stroke: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setStroke = function (value) {\n        this.stroke = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"strokeDasharray\", {\n        get: function () {\n            return getCss(this.name, 'strokeDasharray');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                strokeDasharray: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setStrokeDasharray = function (value) {\n        this.strokeDasharray = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"strokeDashoffset\", {\n        get: function () {\n            return getCss(this.name, 'strokeDashoffset');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                strokeDashoffset: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setStrokeDashoffset = function (value) {\n        this.strokeDashoffset = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"strokeLinecap\", {\n        get: function () {\n            return getCss(this.name, 'strokeLinecap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                strokeLinecap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setStrokeLinecap = function (value) {\n        this.strokeLinecap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"strokeLinejoin\", {\n        get: function () {\n            return getCss(this.name, 'strokeLinejoin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                strokeLinejoin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setStrokeLinejoin = function (value) {\n        this.strokeLinejoin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"strokeMiterlimit\", {\n        get: function () {\n            return getCss(this.name, 'strokeMiterlimit');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                strokeMiterlimit: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setStrokeMiterlimit = function (value) {\n        this.strokeMiterlimit = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"strokeOpacity\", {\n        get: function () {\n            return getCss(this.name, 'strokeOpacity');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                strokeOpacity: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setStrokeOpacity = function (value) {\n        this.strokeOpacity = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"strokeWidth\", {\n        get: function () {\n            return getCss(this.name, 'strokeWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                strokeWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setStrokeWidth = function (value) {\n        this.strokeWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"suffix\", {\n        get: function () {\n            return getCss(this.name, 'suffix');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                suffix: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setSuffix = function (value) {\n        this.suffix = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"symbols\", {\n        get: function () {\n            return getCss(this.name, 'symbols');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                symbols: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setSymbols = function (value) {\n        this.symbols = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"syntax\", {\n        get: function () {\n            return getCss(this.name, 'syntax');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                syntax: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setSyntax = function (value) {\n        this.syntax = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"system\", {\n        get: function () {\n            return getCss(this.name, 'system');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                system: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setSystem = function (value) {\n        this.system = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"tabSize\", {\n        get: function () {\n            return getCss(this.name, 'tabSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                tabSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTabSize = function (value) {\n        this.tabSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"tableLayout\", {\n        get: function () {\n            return getCss(this.name, 'tableLayout');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                tableLayout: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTableLayout = function (value) {\n        this.tableLayout = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textAlign\", {\n        get: function () {\n            return getCss(this.name, 'textAlign');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textAlign: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextAlign = function (value) {\n        this.textAlign = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textAlignLast\", {\n        get: function () {\n            return getCss(this.name, 'textAlignLast');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textAlignLast: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextAlignLast = function (value) {\n        this.textAlignLast = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textAnchor\", {\n        get: function () {\n            return getCss(this.name, 'textAnchor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textAnchor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextAnchor = function (value) {\n        this.textAnchor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textCombineUpright\", {\n        get: function () {\n            return getCss(this.name, 'textCombineUpright');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textCombineUpright: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextCombineUpright = function (value) {\n        this.textCombineUpright = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textDecoration\", {\n        get: function () {\n            return getCss(this.name, 'textDecoration');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textDecoration: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextDecoration = function (value) {\n        this.textDecoration = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textDecorationColor\", {\n        get: function () {\n            return getCss(this.name, 'textDecorationColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textDecorationColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextDecorationColor = function (value) {\n        this.textDecorationColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textDecorationLine\", {\n        get: function () {\n            return getCss(this.name, 'textDecorationLine');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textDecorationLine: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextDecorationLine = function (value) {\n        this.textDecorationLine = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textDecorationSkipInk\", {\n        get: function () {\n            return getCss(this.name, 'textDecorationSkipInk');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textDecorationSkipInk: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextDecorationSkipInk = function (value) {\n        this.textDecorationSkipInk = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textDecorationStyle\", {\n        get: function () {\n            return getCss(this.name, 'textDecorationStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textDecorationStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextDecorationStyle = function (value) {\n        this.textDecorationStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textDecorationThickness\", {\n        get: function () {\n            return getCss(this.name, 'textDecorationThickness');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textDecorationThickness: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextDecorationThickness = function (value) {\n        this.textDecorationThickness = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textEmphasis\", {\n        get: function () {\n            return getCss(this.name, 'textEmphasis');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textEmphasis: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextEmphasis = function (value) {\n        this.textEmphasis = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textEmphasisColor\", {\n        get: function () {\n            return getCss(this.name, 'textEmphasisColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textEmphasisColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextEmphasisColor = function (value) {\n        this.textEmphasisColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textEmphasisPosition\", {\n        get: function () {\n            return getCss(this.name, 'textEmphasisPosition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textEmphasisPosition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextEmphasisPosition = function (value) {\n        this.textEmphasisPosition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textEmphasisStyle\", {\n        get: function () {\n            return getCss(this.name, 'textEmphasisStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textEmphasisStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextEmphasisStyle = function (value) {\n        this.textEmphasisStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textIndent\", {\n        get: function () {\n            return getCss(this.name, 'textIndent');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textIndent: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextIndent = function (value) {\n        this.textIndent = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textOrientation\", {\n        get: function () {\n            return getCss(this.name, 'textOrientation');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textOrientation: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextOrientation = function (value) {\n        this.textOrientation = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textOverflow\", {\n        get: function () {\n            return getCss(this.name, 'textOverflow');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textOverflow: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextOverflow = function (value) {\n        this.textOverflow = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textRendering\", {\n        get: function () {\n            return getCss(this.name, 'textRendering');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textRendering: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextRendering = function (value) {\n        this.textRendering = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textShadow\", {\n        get: function () {\n            return getCss(this.name, 'textShadow');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textShadow: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextShadow = function (value) {\n        this.textShadow = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textSizeAdjust\", {\n        get: function () {\n            return getCss(this.name, 'textSizeAdjust');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textSizeAdjust: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextSizeAdjust = function (value) {\n        this.textSizeAdjust = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textTransform\", {\n        get: function () {\n            return getCss(this.name, 'textTransform');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textTransform: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextTransform = function (value) {\n        this.textTransform = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textUnderlineOffset\", {\n        get: function () {\n            return getCss(this.name, 'textUnderlineOffset');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textUnderlineOffset: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextUnderlineOffset = function (value) {\n        this.textUnderlineOffset = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textUnderlinePosition\", {\n        get: function () {\n            return getCss(this.name, 'textUnderlinePosition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textUnderlinePosition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextUnderlinePosition = function (value) {\n        this.textUnderlinePosition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"textWrap\", {\n        get: function () {\n            return getCss(this.name, 'textWrap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                textWrap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTextWrap = function (value) {\n        this.textWrap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"timelineScope\", {\n        get: function () {\n            return getCss(this.name, 'timelineScope');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                timelineScope: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTimelineScope = function (value) {\n        this.timelineScope = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"top\", {\n        get: function () {\n            return getCss(this.name, 'top');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                top: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTop = function (value) {\n        this.top = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"touchAction\", {\n        get: function () {\n            return getCss(this.name, 'touchAction');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                touchAction: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTouchAction = function (value) {\n        this.touchAction = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"transform\", {\n        get: function () {\n            return getCss(this.name, 'transform');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                transform: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTransform = function (value) {\n        this.transform = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"transformBox\", {\n        get: function () {\n            return getCss(this.name, 'transformBox');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                transformBox: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTransformBox = function (value) {\n        this.transformBox = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"transformOrigin\", {\n        get: function () {\n            return getCss(this.name, 'transformOrigin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                transformOrigin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTransformOrigin = function (value) {\n        this.transformOrigin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"transformStyle\", {\n        get: function () {\n            return getCss(this.name, 'transformStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                transformStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTransformStyle = function (value) {\n        this.transformStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"transition\", {\n        get: function () {\n            return getCss(this.name, 'transition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                transition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTransition = function (value) {\n        this.transition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"transitionBehavior\", {\n        get: function () {\n            return getCss(this.name, 'transitionBehavior');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                transitionBehavior: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTransitionBehavior = function (value) {\n        this.transitionBehavior = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"transitionDelay\", {\n        get: function () {\n            return getCss(this.name, 'transitionDelay');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                transitionDelay: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTransitionDelay = function (value) {\n        this.transitionDelay = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"transitionDuration\", {\n        get: function () {\n            return getCss(this.name, 'transitionDuration');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                transitionDuration: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTransitionDuration = function (value) {\n        this.transitionDuration = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"transitionProperty\", {\n        get: function () {\n            return getCss(this.name, 'transitionProperty');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                transitionProperty: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTransitionProperty = function (value) {\n        this.transitionProperty = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"transitionTimingFunction\", {\n        get: function () {\n            return getCss(this.name, 'transitionTimingFunction');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                transitionTimingFunction: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTransitionTimingFunction = function (value) {\n        this.transitionTimingFunction = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"translate\", {\n        get: function () {\n            return getCss(this.name, 'translate');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                translate: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setTranslate = function (value) {\n        this.translate = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"unicodeBidi\", {\n        get: function () {\n            return getCss(this.name, 'unicodeBidi');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                unicodeBidi: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setUnicodeBidi = function (value) {\n        this.unicodeBidi = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"unicodeRange\", {\n        get: function () {\n            return getCss(this.name, 'unicodeRange');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                unicodeRange: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setUnicodeRange = function (value) {\n        this.unicodeRange = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"userSelect\", {\n        get: function () {\n            return getCss(this.name, 'userSelect');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                userSelect: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setUserSelect = function (value) {\n        this.userSelect = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"vectorEffect\", {\n        get: function () {\n            return getCss(this.name, 'vectorEffect');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                vectorEffect: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setVectorEffect = function (value) {\n        this.vectorEffect = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"verticalAlign\", {\n        get: function () {\n            return getCss(this.name, 'verticalAlign');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                verticalAlign: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setVerticalAlign = function (value) {\n        this.verticalAlign = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"viewTimeline\", {\n        get: function () {\n            return getCss(this.name, 'viewTimeline');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                viewTimeline: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setViewTimeline = function (value) {\n        this.viewTimeline = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"viewTimelineAxis\", {\n        get: function () {\n            return getCss(this.name, 'viewTimelineAxis');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                viewTimelineAxis: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setViewTimelineAxis = function (value) {\n        this.viewTimelineAxis = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"viewTimelineInset\", {\n        get: function () {\n            return getCss(this.name, 'viewTimelineInset');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                viewTimelineInset: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setViewTimelineInset = function (value) {\n        this.viewTimelineInset = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"viewTimelineName\", {\n        get: function () {\n            return getCss(this.name, 'viewTimelineName');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                viewTimelineName: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setViewTimelineName = function (value) {\n        this.viewTimelineName = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"viewTransitionName\", {\n        get: function () {\n            return getCss(this.name, 'viewTransitionName');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                viewTransitionName: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setViewTransitionName = function (value) {\n        this.viewTransitionName = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"visibility\", {\n        get: function () {\n            return getCss(this.name, 'visibility');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                visibility: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setVisibility = function (value) {\n        this.visibility = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAlignContent\", {\n        get: function () {\n            return getCss(this.name, 'webkitAlignContent');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAlignContent: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAlignContent = function (value) {\n        this.webkitAlignContent = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAlignItems\", {\n        get: function () {\n            return getCss(this.name, 'webkitAlignItems');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAlignItems: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAlignItems = function (value) {\n        this.webkitAlignItems = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAlignSelf\", {\n        get: function () {\n            return getCss(this.name, 'webkitAlignSelf');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAlignSelf: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAlignSelf = function (value) {\n        this.webkitAlignSelf = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAnimation\", {\n        get: function () {\n            return getCss(this.name, 'webkitAnimation');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAnimation: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAnimation = function (value) {\n        this.webkitAnimation = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAnimationDelay\", {\n        get: function () {\n            return getCss(this.name, 'webkitAnimationDelay');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAnimationDelay: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAnimationDelay = function (value) {\n        this.webkitAnimationDelay = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAnimationDirection\", {\n        get: function () {\n            return getCss(this.name, 'webkitAnimationDirection');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAnimationDirection: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAnimationDirection = function (value) {\n        this.webkitAnimationDirection = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAnimationDuration\", {\n        get: function () {\n            return getCss(this.name, 'webkitAnimationDuration');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAnimationDuration: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAnimationDuration = function (value) {\n        this.webkitAnimationDuration = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAnimationFillMode\", {\n        get: function () {\n            return getCss(this.name, 'webkitAnimationFillMode');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAnimationFillMode: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAnimationFillMode = function (value) {\n        this.webkitAnimationFillMode = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAnimationIterationCount\", {\n        get: function () {\n            return getCss(this.name, 'webkitAnimationIterationCount');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAnimationIterationCount: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAnimationIterationCount = function (value) {\n        this.webkitAnimationIterationCount = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAnimationName\", {\n        get: function () {\n            return getCss(this.name, 'webkitAnimationName');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAnimationName: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAnimationName = function (value) {\n        this.webkitAnimationName = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAnimationPlayState\", {\n        get: function () {\n            return getCss(this.name, 'webkitAnimationPlayState');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAnimationPlayState: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAnimationPlayState = function (value) {\n        this.webkitAnimationPlayState = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAnimationTimingFunction\", {\n        get: function () {\n            return getCss(this.name, 'webkitAnimationTimingFunction');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAnimationTimingFunction: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAnimationTimingFunction = function (value) {\n        this.webkitAnimationTimingFunction = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAppRegion\", {\n        get: function () {\n            return getCss(this.name, 'webkitAppRegion');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAppRegion: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAppRegion = function (value) {\n        this.webkitAppRegion = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitAppearance\", {\n        get: function () {\n            return getCss(this.name, 'webkitAppearance');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitAppearance: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitAppearance = function (value) {\n        this.webkitAppearance = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBackfaceVisibility\", {\n        get: function () {\n            return getCss(this.name, 'webkitBackfaceVisibility');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBackfaceVisibility: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBackfaceVisibility = function (value) {\n        this.webkitBackfaceVisibility = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBackgroundClip\", {\n        get: function () {\n            return getCss(this.name, 'webkitBackgroundClip');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBackgroundClip: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBackgroundClip = function (value) {\n        this.webkitBackgroundClip = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBackgroundOrigin\", {\n        get: function () {\n            return getCss(this.name, 'webkitBackgroundOrigin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBackgroundOrigin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBackgroundOrigin = function (value) {\n        this.webkitBackgroundOrigin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBackgroundSize\", {\n        get: function () {\n            return getCss(this.name, 'webkitBackgroundSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBackgroundSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBackgroundSize = function (value) {\n        this.webkitBackgroundSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderAfter\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderAfter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderAfter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderAfter = function (value) {\n        this.webkitBorderAfter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderAfterColor\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderAfterColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderAfterColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderAfterColor = function (value) {\n        this.webkitBorderAfterColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderAfterStyle\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderAfterStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderAfterStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderAfterStyle = function (value) {\n        this.webkitBorderAfterStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderAfterWidth\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderAfterWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderAfterWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderAfterWidth = function (value) {\n        this.webkitBorderAfterWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderBefore\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderBefore');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderBefore: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderBefore = function (value) {\n        this.webkitBorderBefore = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderBeforeColor\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderBeforeColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderBeforeColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderBeforeColor = function (value) {\n        this.webkitBorderBeforeColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderBeforeStyle\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderBeforeStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderBeforeStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderBeforeStyle = function (value) {\n        this.webkitBorderBeforeStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderBeforeWidth\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderBeforeWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderBeforeWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderBeforeWidth = function (value) {\n        this.webkitBorderBeforeWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderBottomLeftRadius\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderBottomLeftRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderBottomLeftRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderBottomLeftRadius = function (value) {\n        this.webkitBorderBottomLeftRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderBottomRightRadius\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderBottomRightRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderBottomRightRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderBottomRightRadius = function (value) {\n        this.webkitBorderBottomRightRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderEnd\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderEnd = function (value) {\n        this.webkitBorderEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderEndColor\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderEndColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderEndColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderEndColor = function (value) {\n        this.webkitBorderEndColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderEndStyle\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderEndStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderEndStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderEndStyle = function (value) {\n        this.webkitBorderEndStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderEndWidth\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderEndWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderEndWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderEndWidth = function (value) {\n        this.webkitBorderEndWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderHorizontalSpacing\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderHorizontalSpacing');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderHorizontalSpacing: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderHorizontalSpacing = function (value) {\n        this.webkitBorderHorizontalSpacing = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderImage\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderImage');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderImage: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderImage = function (value) {\n        this.webkitBorderImage = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderRadius\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderRadius = function (value) {\n        this.webkitBorderRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderStart\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderStart = function (value) {\n        this.webkitBorderStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderStartColor\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderStartColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderStartColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderStartColor = function (value) {\n        this.webkitBorderStartColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderStartStyle\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderStartStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderStartStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderStartStyle = function (value) {\n        this.webkitBorderStartStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderStartWidth\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderStartWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderStartWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderStartWidth = function (value) {\n        this.webkitBorderStartWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderTopLeftRadius\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderTopLeftRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderTopLeftRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderTopLeftRadius = function (value) {\n        this.webkitBorderTopLeftRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderTopRightRadius\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderTopRightRadius');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderTopRightRadius: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderTopRightRadius = function (value) {\n        this.webkitBorderTopRightRadius = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBorderVerticalSpacing\", {\n        get: function () {\n            return getCss(this.name, 'webkitBorderVerticalSpacing');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBorderVerticalSpacing: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBorderVerticalSpacing = function (value) {\n        this.webkitBorderVerticalSpacing = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBoxAlign\", {\n        get: function () {\n            return getCss(this.name, 'webkitBoxAlign');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBoxAlign: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBoxAlign = function (value) {\n        this.webkitBoxAlign = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBoxDecorationBreak\", {\n        get: function () {\n            return getCss(this.name, 'webkitBoxDecorationBreak');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBoxDecorationBreak: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBoxDecorationBreak = function (value) {\n        this.webkitBoxDecorationBreak = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBoxDirection\", {\n        get: function () {\n            return getCss(this.name, 'webkitBoxDirection');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBoxDirection: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBoxDirection = function (value) {\n        this.webkitBoxDirection = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBoxFlex\", {\n        get: function () {\n            return getCss(this.name, 'webkitBoxFlex');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBoxFlex: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBoxFlex = function (value) {\n        this.webkitBoxFlex = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBoxOrdinalGroup\", {\n        get: function () {\n            return getCss(this.name, 'webkitBoxOrdinalGroup');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBoxOrdinalGroup: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBoxOrdinalGroup = function (value) {\n        this.webkitBoxOrdinalGroup = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBoxOrient\", {\n        get: function () {\n            return getCss(this.name, 'webkitBoxOrient');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBoxOrient: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBoxOrient = function (value) {\n        this.webkitBoxOrient = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBoxPack\", {\n        get: function () {\n            return getCss(this.name, 'webkitBoxPack');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBoxPack: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBoxPack = function (value) {\n        this.webkitBoxPack = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBoxReflect\", {\n        get: function () {\n            return getCss(this.name, 'webkitBoxReflect');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBoxReflect: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBoxReflect = function (value) {\n        this.webkitBoxReflect = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBoxShadow\", {\n        get: function () {\n            return getCss(this.name, 'webkitBoxShadow');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBoxShadow: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBoxShadow = function (value) {\n        this.webkitBoxShadow = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitBoxSizing\", {\n        get: function () {\n            return getCss(this.name, 'webkitBoxSizing');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitBoxSizing: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitBoxSizing = function (value) {\n        this.webkitBoxSizing = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitClipPath\", {\n        get: function () {\n            return getCss(this.name, 'webkitClipPath');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitClipPath: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitClipPath = function (value) {\n        this.webkitClipPath = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumnBreakAfter\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumnBreakAfter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumnBreakAfter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumnBreakAfter = function (value) {\n        this.webkitColumnBreakAfter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumnBreakBefore\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumnBreakBefore');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumnBreakBefore: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumnBreakBefore = function (value) {\n        this.webkitColumnBreakBefore = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumnBreakInside\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumnBreakInside');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumnBreakInside: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumnBreakInside = function (value) {\n        this.webkitColumnBreakInside = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumnCount\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumnCount');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumnCount: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumnCount = function (value) {\n        this.webkitColumnCount = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumnGap\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumnGap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumnGap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumnGap = function (value) {\n        this.webkitColumnGap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumnRule\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumnRule');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumnRule: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumnRule = function (value) {\n        this.webkitColumnRule = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumnRuleColor\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumnRuleColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumnRuleColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumnRuleColor = function (value) {\n        this.webkitColumnRuleColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumnRuleStyle\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumnRuleStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumnRuleStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumnRuleStyle = function (value) {\n        this.webkitColumnRuleStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumnRuleWidth\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumnRuleWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumnRuleWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumnRuleWidth = function (value) {\n        this.webkitColumnRuleWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumnSpan\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumnSpan');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumnSpan: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumnSpan = function (value) {\n        this.webkitColumnSpan = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumnWidth\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumnWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumnWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumnWidth = function (value) {\n        this.webkitColumnWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitColumns\", {\n        get: function () {\n            return getCss(this.name, 'webkitColumns');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitColumns: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitColumns = function (value) {\n        this.webkitColumns = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitFilter\", {\n        get: function () {\n            return getCss(this.name, 'webkitFilter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitFilter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitFilter = function (value) {\n        this.webkitFilter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitFlex\", {\n        get: function () {\n            return getCss(this.name, 'webkitFlex');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitFlex: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitFlex = function (value) {\n        this.webkitFlex = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitFlexBasis\", {\n        get: function () {\n            return getCss(this.name, 'webkitFlexBasis');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitFlexBasis: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitFlexBasis = function (value) {\n        this.webkitFlexBasis = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitFlexDirection\", {\n        get: function () {\n            return getCss(this.name, 'webkitFlexDirection');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitFlexDirection: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitFlexDirection = function (value) {\n        this.webkitFlexDirection = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitFlexFlow\", {\n        get: function () {\n            return getCss(this.name, 'webkitFlexFlow');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitFlexFlow: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitFlexFlow = function (value) {\n        this.webkitFlexFlow = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitFlexGrow\", {\n        get: function () {\n            return getCss(this.name, 'webkitFlexGrow');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitFlexGrow: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitFlexGrow = function (value) {\n        this.webkitFlexGrow = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitFlexShrink\", {\n        get: function () {\n            return getCss(this.name, 'webkitFlexShrink');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitFlexShrink: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitFlexShrink = function (value) {\n        this.webkitFlexShrink = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitFlexWrap\", {\n        get: function () {\n            return getCss(this.name, 'webkitFlexWrap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitFlexWrap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitFlexWrap = function (value) {\n        this.webkitFlexWrap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitFontFeatureSettings\", {\n        get: function () {\n            return getCss(this.name, 'webkitFontFeatureSettings');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitFontFeatureSettings: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitFontFeatureSettings = function (value) {\n        this.webkitFontFeatureSettings = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitFontSmoothing\", {\n        get: function () {\n            return getCss(this.name, 'webkitFontSmoothing');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitFontSmoothing: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitFontSmoothing = function (value) {\n        this.webkitFontSmoothing = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitHyphenateCharacter\", {\n        get: function () {\n            return getCss(this.name, 'webkitHyphenateCharacter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitHyphenateCharacter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitHyphenateCharacter = function (value) {\n        this.webkitHyphenateCharacter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitJustifyContent\", {\n        get: function () {\n            return getCss(this.name, 'webkitJustifyContent');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitJustifyContent: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitJustifyContent = function (value) {\n        this.webkitJustifyContent = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitLineBreak\", {\n        get: function () {\n            return getCss(this.name, 'webkitLineBreak');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitLineBreak: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitLineBreak = function (value) {\n        this.webkitLineBreak = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitLineClamp\", {\n        get: function () {\n            return getCss(this.name, 'webkitLineClamp');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitLineClamp: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitLineClamp = function (value) {\n        this.webkitLineClamp = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitLocale\", {\n        get: function () {\n            return getCss(this.name, 'webkitLocale');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitLocale: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitLocale = function (value) {\n        this.webkitLocale = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitLogicalHeight\", {\n        get: function () {\n            return getCss(this.name, 'webkitLogicalHeight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitLogicalHeight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitLogicalHeight = function (value) {\n        this.webkitLogicalHeight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitLogicalWidth\", {\n        get: function () {\n            return getCss(this.name, 'webkitLogicalWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitLogicalWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitLogicalWidth = function (value) {\n        this.webkitLogicalWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMarginAfter\", {\n        get: function () {\n            return getCss(this.name, 'webkitMarginAfter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMarginAfter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMarginAfter = function (value) {\n        this.webkitMarginAfter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMarginBefore\", {\n        get: function () {\n            return getCss(this.name, 'webkitMarginBefore');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMarginBefore: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMarginBefore = function (value) {\n        this.webkitMarginBefore = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMarginEnd\", {\n        get: function () {\n            return getCss(this.name, 'webkitMarginEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMarginEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMarginEnd = function (value) {\n        this.webkitMarginEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMarginStart\", {\n        get: function () {\n            return getCss(this.name, 'webkitMarginStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMarginStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMarginStart = function (value) {\n        this.webkitMarginStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMask\", {\n        get: function () {\n            return getCss(this.name, 'webkitMask');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMask: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMask = function (value) {\n        this.webkitMask = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskBoxImage\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskBoxImage');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskBoxImage: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskBoxImage = function (value) {\n        this.webkitMaskBoxImage = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskBoxImageOutset\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskBoxImageOutset');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskBoxImageOutset: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskBoxImageOutset = function (value) {\n        this.webkitMaskBoxImageOutset = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskBoxImageRepeat\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskBoxImageRepeat');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskBoxImageRepeat: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskBoxImageRepeat = function (value) {\n        this.webkitMaskBoxImageRepeat = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskBoxImageSlice\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskBoxImageSlice');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskBoxImageSlice: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskBoxImageSlice = function (value) {\n        this.webkitMaskBoxImageSlice = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskBoxImageSource\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskBoxImageSource');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskBoxImageSource: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskBoxImageSource = function (value) {\n        this.webkitMaskBoxImageSource = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskBoxImageWidth\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskBoxImageWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskBoxImageWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskBoxImageWidth = function (value) {\n        this.webkitMaskBoxImageWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskClip\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskClip');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskClip: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskClip = function (value) {\n        this.webkitMaskClip = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskComposite\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskComposite');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskComposite: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskComposite = function (value) {\n        this.webkitMaskComposite = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskImage\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskImage');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskImage: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskImage = function (value) {\n        this.webkitMaskImage = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskOrigin\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskOrigin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskOrigin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskOrigin = function (value) {\n        this.webkitMaskOrigin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskPosition\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskPosition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskPosition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskPosition = function (value) {\n        this.webkitMaskPosition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskPositionX\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskPositionX');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskPositionX: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskPositionX = function (value) {\n        this.webkitMaskPositionX = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskPositionY\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskPositionY');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskPositionY: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskPositionY = function (value) {\n        this.webkitMaskPositionY = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskRepeat\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskRepeat');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskRepeat: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskRepeat = function (value) {\n        this.webkitMaskRepeat = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskRepeatX\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskRepeatX');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskRepeatX: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskRepeatX = function (value) {\n        this.webkitMaskRepeatX = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskRepeatY\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskRepeatY');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskRepeatY: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskRepeatY = function (value) {\n        this.webkitMaskRepeatY = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaskSize\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaskSize');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaskSize: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaskSize = function (value) {\n        this.webkitMaskSize = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaxLogicalHeight\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaxLogicalHeight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaxLogicalHeight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaxLogicalHeight = function (value) {\n        this.webkitMaxLogicalHeight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMaxLogicalWidth\", {\n        get: function () {\n            return getCss(this.name, 'webkitMaxLogicalWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMaxLogicalWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMaxLogicalWidth = function (value) {\n        this.webkitMaxLogicalWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMinLogicalHeight\", {\n        get: function () {\n            return getCss(this.name, 'webkitMinLogicalHeight');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMinLogicalHeight: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMinLogicalHeight = function (value) {\n        this.webkitMinLogicalHeight = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitMinLogicalWidth\", {\n        get: function () {\n            return getCss(this.name, 'webkitMinLogicalWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitMinLogicalWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitMinLogicalWidth = function (value) {\n        this.webkitMinLogicalWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitOpacity\", {\n        get: function () {\n            return getCss(this.name, 'webkitOpacity');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitOpacity: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitOpacity = function (value) {\n        this.webkitOpacity = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitOrder\", {\n        get: function () {\n            return getCss(this.name, 'webkitOrder');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitOrder: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitOrder = function (value) {\n        this.webkitOrder = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitPaddingAfter\", {\n        get: function () {\n            return getCss(this.name, 'webkitPaddingAfter');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitPaddingAfter: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitPaddingAfter = function (value) {\n        this.webkitPaddingAfter = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitPaddingBefore\", {\n        get: function () {\n            return getCss(this.name, 'webkitPaddingBefore');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitPaddingBefore: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitPaddingBefore = function (value) {\n        this.webkitPaddingBefore = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitPaddingEnd\", {\n        get: function () {\n            return getCss(this.name, 'webkitPaddingEnd');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitPaddingEnd: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitPaddingEnd = function (value) {\n        this.webkitPaddingEnd = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitPaddingStart\", {\n        get: function () {\n            return getCss(this.name, 'webkitPaddingStart');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitPaddingStart: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitPaddingStart = function (value) {\n        this.webkitPaddingStart = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitPerspective\", {\n        get: function () {\n            return getCss(this.name, 'webkitPerspective');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitPerspective: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitPerspective = function (value) {\n        this.webkitPerspective = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitPerspectiveOrigin\", {\n        get: function () {\n            return getCss(this.name, 'webkitPerspectiveOrigin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitPerspectiveOrigin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitPerspectiveOrigin = function (value) {\n        this.webkitPerspectiveOrigin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitPerspectiveOriginX\", {\n        get: function () {\n            return getCss(this.name, 'webkitPerspectiveOriginX');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitPerspectiveOriginX: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitPerspectiveOriginX = function (value) {\n        this.webkitPerspectiveOriginX = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitPerspectiveOriginY\", {\n        get: function () {\n            return getCss(this.name, 'webkitPerspectiveOriginY');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitPerspectiveOriginY: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitPerspectiveOriginY = function (value) {\n        this.webkitPerspectiveOriginY = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitPrintColorAdjust\", {\n        get: function () {\n            return getCss(this.name, 'webkitPrintColorAdjust');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitPrintColorAdjust: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitPrintColorAdjust = function (value) {\n        this.webkitPrintColorAdjust = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitRtlOrdering\", {\n        get: function () {\n            return getCss(this.name, 'webkitRtlOrdering');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitRtlOrdering: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitRtlOrdering = function (value) {\n        this.webkitRtlOrdering = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitRubyPosition\", {\n        get: function () {\n            return getCss(this.name, 'webkitRubyPosition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitRubyPosition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitRubyPosition = function (value) {\n        this.webkitRubyPosition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitShapeImageThreshold\", {\n        get: function () {\n            return getCss(this.name, 'webkitShapeImageThreshold');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitShapeImageThreshold: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitShapeImageThreshold = function (value) {\n        this.webkitShapeImageThreshold = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitShapeMargin\", {\n        get: function () {\n            return getCss(this.name, 'webkitShapeMargin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitShapeMargin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitShapeMargin = function (value) {\n        this.webkitShapeMargin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitShapeOutside\", {\n        get: function () {\n            return getCss(this.name, 'webkitShapeOutside');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitShapeOutside: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitShapeOutside = function (value) {\n        this.webkitShapeOutside = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTapHighlightColor\", {\n        get: function () {\n            return getCss(this.name, 'webkitTapHighlightColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTapHighlightColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTapHighlightColor = function (value) {\n        this.webkitTapHighlightColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextCombine\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextCombine');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextCombine: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextCombine = function (value) {\n        this.webkitTextCombine = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextDecorationsInEffect\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextDecorationsInEffect');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextDecorationsInEffect: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextDecorationsInEffect = function (value) {\n        this.webkitTextDecorationsInEffect = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextEmphasis\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextEmphasis');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextEmphasis: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextEmphasis = function (value) {\n        this.webkitTextEmphasis = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextEmphasisColor\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextEmphasisColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextEmphasisColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextEmphasisColor = function (value) {\n        this.webkitTextEmphasisColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextEmphasisPosition\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextEmphasisPosition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextEmphasisPosition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextEmphasisPosition = function (value) {\n        this.webkitTextEmphasisPosition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextEmphasisStyle\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextEmphasisStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextEmphasisStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextEmphasisStyle = function (value) {\n        this.webkitTextEmphasisStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextFillColor\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextFillColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextFillColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextFillColor = function (value) {\n        this.webkitTextFillColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextOrientation\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextOrientation');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextOrientation: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextOrientation = function (value) {\n        this.webkitTextOrientation = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextSecurity\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextSecurity');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextSecurity: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextSecurity = function (value) {\n        this.webkitTextSecurity = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextSizeAdjust\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextSizeAdjust');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextSizeAdjust: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextSizeAdjust = function (value) {\n        this.webkitTextSizeAdjust = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextStroke\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextStroke');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextStroke: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextStroke = function (value) {\n        this.webkitTextStroke = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextStrokeColor\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextStrokeColor');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextStrokeColor: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextStrokeColor = function (value) {\n        this.webkitTextStrokeColor = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTextStrokeWidth\", {\n        get: function () {\n            return getCss(this.name, 'webkitTextStrokeWidth');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTextStrokeWidth: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTextStrokeWidth = function (value) {\n        this.webkitTextStrokeWidth = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTransform\", {\n        get: function () {\n            return getCss(this.name, 'webkitTransform');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTransform: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTransform = function (value) {\n        this.webkitTransform = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTransformOrigin\", {\n        get: function () {\n            return getCss(this.name, 'webkitTransformOrigin');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTransformOrigin: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTransformOrigin = function (value) {\n        this.webkitTransformOrigin = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTransformOriginX\", {\n        get: function () {\n            return getCss(this.name, 'webkitTransformOriginX');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTransformOriginX: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTransformOriginX = function (value) {\n        this.webkitTransformOriginX = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTransformOriginY\", {\n        get: function () {\n            return getCss(this.name, 'webkitTransformOriginY');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTransformOriginY: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTransformOriginY = function (value) {\n        this.webkitTransformOriginY = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTransformOriginZ\", {\n        get: function () {\n            return getCss(this.name, 'webkitTransformOriginZ');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTransformOriginZ: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTransformOriginZ = function (value) {\n        this.webkitTransformOriginZ = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTransformStyle\", {\n        get: function () {\n            return getCss(this.name, 'webkitTransformStyle');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTransformStyle: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTransformStyle = function (value) {\n        this.webkitTransformStyle = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTransition\", {\n        get: function () {\n            return getCss(this.name, 'webkitTransition');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTransition: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTransition = function (value) {\n        this.webkitTransition = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTransitionDelay\", {\n        get: function () {\n            return getCss(this.name, 'webkitTransitionDelay');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTransitionDelay: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTransitionDelay = function (value) {\n        this.webkitTransitionDelay = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTransitionDuration\", {\n        get: function () {\n            return getCss(this.name, 'webkitTransitionDuration');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTransitionDuration: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTransitionDuration = function (value) {\n        this.webkitTransitionDuration = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTransitionProperty\", {\n        get: function () {\n            return getCss(this.name, 'webkitTransitionProperty');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTransitionProperty: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTransitionProperty = function (value) {\n        this.webkitTransitionProperty = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitTransitionTimingFunction\", {\n        get: function () {\n            return getCss(this.name, 'webkitTransitionTimingFunction');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitTransitionTimingFunction: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitTransitionTimingFunction = function (value) {\n        this.webkitTransitionTimingFunction = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitUserDrag\", {\n        get: function () {\n            return getCss(this.name, 'webkitUserDrag');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitUserDrag: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitUserDrag = function (value) {\n        this.webkitUserDrag = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitUserModify\", {\n        get: function () {\n            return getCss(this.name, 'webkitUserModify');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitUserModify: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitUserModify = function (value) {\n        this.webkitUserModify = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitUserSelect\", {\n        get: function () {\n            return getCss(this.name, 'webkitUserSelect');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitUserSelect: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitUserSelect = function (value) {\n        this.webkitUserSelect = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"webkitWritingMode\", {\n        get: function () {\n            return getCss(this.name, 'webkitWritingMode');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                webkitWritingMode: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWebkitWritingMode = function (value) {\n        this.webkitWritingMode = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"whiteSpace\", {\n        get: function () {\n            return getCss(this.name, 'whiteSpace');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                whiteSpace: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWhiteSpace = function (value) {\n        this.whiteSpace = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"whiteSpaceCollapse\", {\n        get: function () {\n            return getCss(this.name, 'whiteSpaceCollapse');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                whiteSpaceCollapse: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWhiteSpaceCollapse = function (value) {\n        this.whiteSpaceCollapse = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"widows\", {\n        get: function () {\n            return getCss(this.name, 'widows');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                widows: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWidows = function (value) {\n        this.widows = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"width\", {\n        get: function () {\n            return getCss(this.name, 'width');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                width: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWidth = function (value) {\n        this.width = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"willChange\", {\n        get: function () {\n            return getCss(this.name, 'willChange');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                willChange: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWillChange = function (value) {\n        this.willChange = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"wordBreak\", {\n        get: function () {\n            return getCss(this.name, 'wordBreak');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                wordBreak: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWordBreak = function (value) {\n        this.wordBreak = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"wordSpacing\", {\n        get: function () {\n            return getCss(this.name, 'wordSpacing');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                wordSpacing: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWordSpacing = function (value) {\n        this.wordSpacing = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"wordWrap\", {\n        get: function () {\n            return getCss(this.name, 'wordWrap');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                wordWrap: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWordWrap = function (value) {\n        this.wordWrap = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"writingMode\", {\n        get: function () {\n            return getCss(this.name, 'writingMode');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                writingMode: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setWritingMode = function (value) {\n        this.writingMode = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"x\", {\n        get: function () {\n            return getCss(this.name, 'x');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                x: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setX = function (value) {\n        this.x = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"y\", {\n        get: function () {\n            return getCss(this.name, 'y');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                y: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setY = function (value) {\n        this.y = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"zIndex\", {\n        get: function () {\n            return getCss(this.name, 'zIndex');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                zIndex: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setZIndex = function (value) {\n        this.zIndex = value;\n        return this;\n    };\n    Object.defineProperty(Style.prototype, \"zoom\", {\n        get: function () {\n            return getCss(this.name, 'zoom');\n        },\n        set: function (value) {\n            setCss(this.name, {\n                zoom: value\n            });\n            this._updated();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Style.prototype.setZoom = function (value) {\n        this.zoom = value;\n        return this;\n    };\n    Style.prototype.variable = function (name, value) {\n        var _a;\n        if (value === void 0) { value = null; }\n        var vname = name.startsWith('--') ? name : '--' + name;\n        if (value) {\n            setCss(this.name, (_a = {},\n                _a[vname] = value,\n                _a));\n            this._updated();\n        }\n        else {\n            return getCss(this.name, vname);\n        }\n        return this;\n    };\n    Style.prototype._updated = function () {\n        this.emit('update');\n    };\n    /**\n     *\n     * @param {props} props additional properties to add into the mix\n     * @returns {Style}\n     */\n    Style.prototype.extends = function (props, override) {\n        if (override === void 0) { override = true; }\n        return Style.extends(this, props, this.name, override);\n    };\n    Style.trimRules = function (rules) {\n        return trimRules(rules);\n    };\n    Style.register = function (name, props) {\n        var s = new Style(name);\n        s.set(props);\n        return s;\n    };\n    Style.fromElement = function (element, name) {\n        if (name === void 0) { name = null; }\n        var styles = getComputedStyle(element);\n        var csss = {};\n        for (var _i = 0, styles_1 = styles; _i < styles_1.length; _i++) {\n            var property = styles_1[_i];\n            var value = styles.getPropertyValue(property);\n            csss[property] = value;\n        }\n        return Style.register(name, csss);\n    };\n    Style.fromWidget = function (widget, name) {\n        if (name === void 0) { name = null; }\n        return Style.fromElement((0, elman_1.findEl)(widget.id)[0], name);\n    };\n    Style.from = function (target, name) {\n        if (name === void 0) { name = null; }\n        if ((0, type_1.isHTMLElement)(target)) {\n            return Style.fromElement(target, name);\n        }\n        else if ((0, type_1.isWidget)(target)) {\n            return Style.fromWidget(target, name);\n        }\n        else {\n            throw new Error('Only HTMLElements and Widgets are allowed for style copying.');\n        }\n    };\n    Style.copy = function (target, name, mode, style, update) {\n        if (name === void 0) { name = null; }\n        if (mode === void 0) { mode = \"all\"; }\n        if (style === void 0) { style = null; }\n        if (update === void 0) { update = true; }\n        if (mode == \"all\" && target instanceof Style) {\n            var newStyle_1 = style || new Style(name || (0, id_1.default)(5));\n            newStyle_1.set(target.all);\n            if (update)\n                target.on('update', function () { return newStyle_1.set(target.all); });\n            return newStyle_1;\n        }\n        else {\n            var all = __assign({}, (getCss(target)));\n            return Style.register(name || (0, id_1.default)(5), all);\n        }\n    };\n    Style.extends = function (target, props, name, override) {\n        if (name === void 0) { name = null; }\n        if (override === void 0) { override = true; }\n        var style = new Style(name);\n        Style.copy(target, name, 'all', style, override);\n        if (!override)\n            target.on('update', function () {\n                var p = __assign(__assign({}, target.all), props);\n                style.set(p);\n            });\n        style.set(props);\n        return style;\n    };\n    Style.calc = function () {\n        var string = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            string[_i] = arguments[_i];\n        }\n        return 'calc(' + string.join(' ') + ')';\n    };\n    ;\n    Style.var = function (string) { return 'var(--' + voca_1.default.kebabCase(string) + ')'; };\n    ;\n    Style.double = function (string) { return cssProperty([string, string]); };\n    ;\n    Style.linearGradient = function () {\n        var colors = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            colors[_i] = arguments[_i];\n        }\n        return \"linear-gradient(\".concat(colors.map(function (color) { return cssProperty(color); }).join(','), \")\");\n    };\n    ;\n    Style.radialGradient = function () {\n        var colors = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            colors[_i] = arguments[_i];\n        }\n        return \"radial-gradient(\".concat(colors.map(function (color) { return cssProperty(color); }).join(','), \")\");\n    };\n    ;\n    Style.deg = function (int) { return int + 'deg'; };\n    ;\n    Style.em = function (int) { return int + 'em'; };\n    ;\n    Style.rem = function (int) { return int + 'rem'; };\n    ;\n    Style.px = function (int) { return int + 'px'; };\n    ;\n    Style.p = function (int) { return int + '%'; };\n    ;\n    Style.INHERIT = 'inherit';\n    Style.AUTO = 'auto';\n    Style.FULL = '100%';\n    Style.FULLWIDTH = '100vw';\n    Style.FULLHEIGHT = '100dvh';\n    Style.WRAP = 'wrap';\n    Style.NONE = 'none';\n    Style.BLOCK = 'block';\n    Style.FLEX = 'flex';\n    Style.GRID = 'grid';\n    Style.NOWRAP = 'nowrap';\n    Style.INITIAL = 'initial';\n    Style.UNSET = 'unset';\n    Style.CLIP = 'clip';\n    Style.HIDDEN = 'hidden';\n    Style.VISIBLE = 'visible';\n    Style.UNIT = '16px';\n    Style.HALFUNIT = '8px';\n    Style.ONEANDHALFUNIT = '24px';\n    Style.TWOUNITS = '32px';\n    Style.THREEUNITS = '48px';\n    Style.FOURUNITS = '64px';\n    Style.FIVEUNITS = '80px';\n    Style.BULKUNIT = '100px';\n    Style.GRADIENT = {\n        LEFT: 'to left',\n        RIGHT: 'to right',\n        TOP: 'to top',\n        BOTTOM: 'to bottom',\n    };\n    return Style;\n}(eventtarget_1.WidgetEventTarget));\nexports[\"default\"] = Style;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/components/Style.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/data/Controller.ts":
/*!*******************************************************!*\
  !*** ./node_modules/rayous/client/data/Controller.ts ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ArrayController = void 0;\nvar Controller = /** @class */ (function () {\n    function Controller(val) {\n        this.taken = [];\n        this.changeListeners = [];\n        this.value = val;\n        this.type = typeof val;\n    }\n    Controller.prototype.take = function (taker) {\n        this.taken.push(taker);\n    };\n    Controller.prototype.isTakenBy = function (taker) {\n        return this.taken.indexOf(taker) > -1;\n    };\n    Controller.prototype.set = function (newValue, doNoyNotify) {\n        if (doNoyNotify === void 0) { doNoyNotify = false; }\n        this.value = newValue;\n        if (doNoyNotify !== true)\n            this.notifyChangeListeners(typeof doNoyNotify == \"function\" ? doNoyNotify : false);\n    };\n    Controller.prototype.get = function () {\n        return this.value;\n    };\n    Controller.prototype.onChange = function (callback) {\n        this.changeListeners.push(callback);\n    };\n    Controller.prototype.notifyChangeListeners = function (notify) {\n        var _this = this;\n        if (notify === void 0) { notify = false; }\n        var ignoreIndex = typeof notify == \"function\" ? this.changeListeners.indexOf(notify) : -1;\n        this.changeListeners.forEach(function (callback, index) {\n            if (index == ignoreIndex)\n                return;\n            callback(_this.value);\n        });\n    };\n    return Controller;\n}());\nvar ArrayController = /** @class */ (function (_super) {\n    __extends(ArrayController, _super);\n    function ArrayController() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ArrayController.prototype.push = function (item) {\n        this.value.push(item);\n        this.notifyChangeListeners();\n        return this;\n    };\n    ArrayController.prototype.unshift = function (item) {\n        this.value.unshift(item);\n        this.notifyChangeListeners();\n        return this;\n    };\n    ArrayController.prototype.pop = function () {\n        var popped = this.value.pop();\n        this.notifyChangeListeners();\n        return popped;\n    };\n    ArrayController.prototype.shift = function () {\n        var popped = this.value.shift();\n        this.notifyChangeListeners();\n        return popped;\n    };\n    ArrayController.prototype.forEach = function (callback) {\n        this.value.forEach(callback);\n        return this;\n    };\n    ArrayController.prototype.setArray = function (array) {\n        this.set(array);\n        return this;\n    };\n    return ArrayController;\n}(Controller));\nexports.ArrayController = ArrayController;\nexports[\"default\"] = Controller;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/data/Controller.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/data/Store.ts":
/*!**************************************************!*\
  !*** ./node_modules/rayous/client/data/Store.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar eventtarget_1 = __webpack_require__(/*! ../utils/eventtarget */ \"./node_modules/rayous/client/utils/eventtarget.ts\");\nfunction _inheritStore(store, parentStore) {\n    var stores = parentStore.getStores();\n    for (var i in stores) {\n        store.setStore(stores[i], i);\n    }\n}\nvar Store = /** @class */ (function (_super) {\n    __extends(Store, _super);\n    function Store(state) {\n        if (state === void 0) { state = {}; }\n        var _this = _super.call(this) || this;\n        _this.stores = {\n            state: {}\n        };\n        _this.setStore(state);\n        return _this;\n    }\n    Store.prototype.set = function (key, value, store) {\n        if (store === void 0) { store = 'state'; }\n        if (!this.stores[store])\n            this.stores[store] = {};\n        this.stores[store][key] = value;\n        this.emit('change');\n    };\n    Store.prototype.get = function (key, store) {\n        if (store === void 0) { store = 'state'; }\n        return this.stores[store][key];\n    };\n    Store.prototype.getStore = function (store, id) {\n        if (store === void 0) { store = 'state'; }\n        if (id === void 0) { id = null; }\n        var ideed = id ? this.stores[id] || {} : {};\n        var s = __assign({}, this.stores[store]);\n        return s;\n    };\n    Store.prototype.setStore = function (state, store) {\n        if (store === void 0) { store = 'state'; }\n        if (state)\n            for (var i in state) {\n                this.set(i, state[i], store);\n            }\n    };\n    Store.prototype.getStores = function () {\n        return this.stores;\n    };\n    Store.prototype.inherit = function (store) {\n        var _this = this;\n        store.on('change', function () {\n            _inheritStore(_this, store);\n        });\n        _inheritStore(this, store);\n    };\n    return Store;\n}(eventtarget_1.WidgetEventTarget));\nexports[\"default\"] = Store;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/data/Store.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/extra.ts":
/*!*********************************************!*\
  !*** ./node_modules/rayous/client/extra.ts ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WidgetEventTarget = exports.options = exports.ComponentStyles = exports.componentEvents = exports.asyncComponent = exports.onComponent = exports.typeref = exports.ref = exports.Ref = exports.getComponentExports = exports.buildComponent = exports.uiwidget = exports.TableController = exports.CheckboxController = exports.SelectController = exports.EntryController = exports.voca = exports.anime = exports.mergeOptions = exports.Style = exports.Controller = exports.ListBuilder = exports.ArrayController = void 0;\nvar Style_1 = __importDefault(__webpack_require__(/*! ./components/Style */ \"./node_modules/rayous/client/components/Style.ts\"));\nexports.Style = Style_1.default;\nvar Controller_1 = __importStar(__webpack_require__(/*! ./data/Controller */ \"./node_modules/rayous/client/data/Controller.ts\"));\nexports.Controller = Controller_1.default;\nObject.defineProperty(exports, \"ArrayController\", ({ enumerable: true, get: function () { return Controller_1.ArrayController; } }));\nvar anime_1 = __importDefault(__webpack_require__(/*! ./modules/anime */ \"./node_modules/rayous/client/modules/anime.js\"));\nexports.anime = anime_1.default;\nvar voca_1 = __importDefault(__webpack_require__(/*! ./modules/voca */ \"./node_modules/rayous/client/modules/voca.js\"));\nexports.voca = voca_1.default;\nvar options_1 = __webpack_require__(/*! ./utils/options */ \"./node_modules/rayous/client/utils/options.ts\");\nObject.defineProperty(exports, \"mergeOptions\", ({ enumerable: true, get: function () { return options_1.mergeOptions; } }));\nvar ListBuilder_1 = __importDefault(__webpack_require__(/*! ./widgets/list/ListBuilder */ \"./node_modules/rayous/client/widgets/list/ListBuilder.ts\"));\nexports.ListBuilder = ListBuilder_1.default;\nvar InputWrapper_1 = __webpack_require__(/*! ./widgets/entry/InputWrapper */ \"./node_modules/rayous/client/widgets/entry/InputWrapper.ts\");\nObject.defineProperty(exports, \"EntryController\", ({ enumerable: true, get: function () { return InputWrapper_1.EntryController; } }));\nvar SelectBox_1 = __webpack_require__(/*! ./widgets/entry/SelectBox */ \"./node_modules/rayous/client/widgets/entry/SelectBox.ts\");\nObject.defineProperty(exports, \"SelectController\", ({ enumerable: true, get: function () { return SelectBox_1.SelectController; } }));\nvar Checkbox_1 = __webpack_require__(/*! ./widgets/buttons/Checkbox */ \"./node_modules/rayous/client/widgets/buttons/Checkbox.ts\");\nObject.defineProperty(exports, \"CheckboxController\", ({ enumerable: true, get: function () { return Checkbox_1.CheckboxController; } }));\nvar Table_1 = __webpack_require__(/*! ./widgets/list/Table */ \"./node_modules/rayous/client/widgets/list/Table.ts\");\nObject.defineProperty(exports, \"TableController\", ({ enumerable: true, get: function () { return Table_1.TableController; } }));\nvar Widget_1 = __webpack_require__(/*! ./widgets/main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\");\nObject.defineProperty(exports, \"uiwidget\", ({ enumerable: true, get: function () { return Widget_1.uiwidget; } }));\nvar Component_1 = __webpack_require__(/*! ./widgets/main/Component */ \"./node_modules/rayous/client/widgets/main/Component.ts\");\nObject.defineProperty(exports, \"buildComponent\", ({ enumerable: true, get: function () { return Component_1.buildComponent; } }));\nvar extra_1 = __webpack_require__(/*! ./utils/extra */ \"./node_modules/rayous/client/utils/extra.ts\");\nObject.defineProperty(exports, \"getComponentExports\", ({ enumerable: true, get: function () { return extra_1.getComponentExports; } }));\nvar Component_2 = __webpack_require__(/*! ./widgets/main/Component */ \"./node_modules/rayous/client/widgets/main/Component.ts\");\nObject.defineProperty(exports, \"Ref\", ({ enumerable: true, get: function () { return Component_2.Ref; } }));\nObject.defineProperty(exports, \"ref\", ({ enumerable: true, get: function () { return Component_2.ref; } }));\nObject.defineProperty(exports, \"typeref\", ({ enumerable: true, get: function () { return Component_2.typeref; } }));\nObject.defineProperty(exports, \"onComponent\", ({ enumerable: true, get: function () { return Component_2.onComponent; } }));\nObject.defineProperty(exports, \"asyncComponent\", ({ enumerable: true, get: function () { return Component_2.asyncComponent; } }));\nObject.defineProperty(exports, \"componentEvents\", ({ enumerable: true, get: function () { return Component_2.componentEvents; } }));\nObject.defineProperty(exports, \"ComponentStyles\", ({ enumerable: true, get: function () { return Component_2.ComponentStyles; } }));\nvar options_2 = __webpack_require__(/*! ./utils/options */ \"./node_modules/rayous/client/utils/options.ts\");\nObject.defineProperty(exports, \"options\", ({ enumerable: true, get: function () { return options_2.options; } }));\nvar eventtarget_1 = __webpack_require__(/*! ./utils/eventtarget */ \"./node_modules/rayous/client/utils/eventtarget.ts\");\nObject.defineProperty(exports, \"WidgetEventTarget\", ({ enumerable: true, get: function () { return eventtarget_1.WidgetEventTarget; } }));\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/extra.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/index.ts":
/*!*********************************************!*\
  !*** ./node_modules/rayous/client/index.ts ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TableRow = exports.Table = exports.Grid = exports.Audio = exports.Video = exports.Span = exports.SelectableOption = exports.Center = exports.Column = exports.Row = exports.Selectbox = exports.Container = exports.Radio = exports.Checkbox = exports.LayoutBuilder = exports.InputWrapper = exports.Canvas = exports.Image = exports.Button = exports.Link = exports.ListItem = exports.List = exports.Widget = exports.Text = exports.Component = void 0;\nvar Widget_1 = __importDefault(__webpack_require__(/*! ./widgets/main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nexports.Widget = Widget_1.default;\nvar Component_1 = __importDefault(__webpack_require__(/*! ./widgets/main/Component */ \"./node_modules/rayous/client/widgets/main/Component.ts\"));\nexports.Component = Component_1.default;\nvar Text_1 = __importDefault(__webpack_require__(/*! ./widgets/main/Text */ \"./node_modules/rayous/client/widgets/main/Text.ts\"));\nexports.Text = Text_1.default;\nvar List_1 = __importStar(__webpack_require__(/*! ./widgets/list/List */ \"./node_modules/rayous/client/widgets/list/List.ts\"));\nexports.List = List_1.default;\nObject.defineProperty(exports, \"ListItem\", ({ enumerable: true, get: function () { return List_1.ListItem; } }));\nvar Button_1 = __importDefault(__webpack_require__(/*! ./widgets/buttons/Button */ \"./node_modules/rayous/client/widgets/buttons/Button.ts\"));\nexports.Button = Button_1.default;\nvar Link_1 = __importDefault(__webpack_require__(/*! ./widgets/main/Link */ \"./node_modules/rayous/client/widgets/main/Link.ts\"));\nexports.Link = Link_1.default;\nvar Image_1 = __importDefault(__webpack_require__(/*! ./widgets/main/Image */ \"./node_modules/rayous/client/widgets/main/Image.ts\"));\nexports.Image = Image_1.default;\nvar Canvas_1 = __importDefault(__webpack_require__(/*! ./widgets/canvas/Canvas */ \"./node_modules/rayous/client/widgets/canvas/Canvas.ts\"));\nexports.Canvas = Canvas_1.default;\nvar InputWrapper_1 = __importDefault(__webpack_require__(/*! ./widgets/entry/InputWrapper */ \"./node_modules/rayous/client/widgets/entry/InputWrapper.ts\"));\nexports.InputWrapper = InputWrapper_1.default;\nvar LayoutBuilder_1 = __importDefault(__webpack_require__(/*! ./widgets/layout/LayoutBuilder */ \"./node_modules/rayous/client/widgets/layout/LayoutBuilder.ts\"));\nexports.LayoutBuilder = LayoutBuilder_1.default;\nvar Checkbox_1 = __importDefault(__webpack_require__(/*! ./widgets/buttons/Checkbox */ \"./node_modules/rayous/client/widgets/buttons/Checkbox.ts\"));\nexports.Checkbox = Checkbox_1.default;\nvar Radio_1 = __importDefault(__webpack_require__(/*! ./widgets/buttons/Radio */ \"./node_modules/rayous/client/widgets/buttons/Radio.ts\"));\nexports.Radio = Radio_1.default;\nvar Container_1 = __importDefault(__webpack_require__(/*! ./widgets/containers/Container */ \"./node_modules/rayous/client/widgets/containers/Container.ts\"));\nexports.Container = Container_1.default;\nvar SelectBox_1 = __importStar(__webpack_require__(/*! ./widgets/entry/SelectBox */ \"./node_modules/rayous/client/widgets/entry/SelectBox.ts\"));\nexports.Selectbox = SelectBox_1.default;\nObject.defineProperty(exports, \"SelectableOption\", ({ enumerable: true, get: function () { return SelectBox_1.SelectableOption; } }));\nvar DirectedContainer_1 = __webpack_require__(/*! ./widgets/containers/DirectedContainer */ \"./node_modules/rayous/client/widgets/containers/DirectedContainer.ts\");\nObject.defineProperty(exports, \"Center\", ({ enumerable: true, get: function () { return DirectedContainer_1.Center; } }));\nObject.defineProperty(exports, \"Column\", ({ enumerable: true, get: function () { return DirectedContainer_1.Column; } }));\nObject.defineProperty(exports, \"Row\", ({ enumerable: true, get: function () { return DirectedContainer_1.Row; } }));\nvar Span_1 = __importDefault(__webpack_require__(/*! ./widgets/main/Span */ \"./node_modules/rayous/client/widgets/main/Span.ts\"));\nexports.Span = Span_1.default;\nvar Video_1 = __importDefault(__webpack_require__(/*! ./widgets/media/Video */ \"./node_modules/rayous/client/widgets/media/Video.ts\"));\nexports.Video = Video_1.default;\nvar Audio_1 = __importDefault(__webpack_require__(/*! ./widgets/media/Audio */ \"./node_modules/rayous/client/widgets/media/Audio.ts\"));\nexports.Audio = Audio_1.default;\nvar Grid_1 = __importDefault(__webpack_require__(/*! ./widgets/containers/Grid */ \"./node_modules/rayous/client/widgets/containers/Grid.ts\"));\nexports.Grid = Grid_1.default;\nvar Table_1 = __webpack_require__(/*! ./widgets/list/Table */ \"./node_modules/rayous/client/widgets/list/Table.ts\");\nObject.defineProperty(exports, \"Table\", ({ enumerable: true, get: function () { return Table_1.Table; } }));\nObject.defineProperty(exports, \"TableRow\", ({ enumerable: true, get: function () { return Table_1.TableRow; } }));\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/index.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/utils/dom.ts":
/*!*************************************************!*\
  !*** ./node_modules/rayous/client/utils/dom.ts ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../widgets/main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar elman_1 = __webpack_require__(/*! ./elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar type_1 = __webpack_require__(/*! ./type */ \"./node_modules/rayous/client/utils/type.ts\");\nvar doAll = function (all, cb) {\n    var response = [];\n    all.forEach(function (element) {\n        var r = cb(element);\n        if (r)\n            response.push(r);\n    });\n    response = response.filter(function (item) { return !(item instanceof Dom); });\n    if (response.length) {\n        response = response.shift();\n    }\n    else {\n        response = all;\n    }\n    return Array.isArray(response) ? all : response;\n};\nvar Dom = /** @class */ (function () {\n    function Dom(element, classes, attributes) {\n        if (classes === void 0) { classes = null; }\n        if (attributes === void 0) { attributes = null; }\n        var _this = this;\n        this.elements = [];\n        if (element instanceof HTMLElement) {\n            this.elements.push(element);\n        }\n        else {\n            var el = document.querySelectorAll(element);\n            el.forEach(function (el) { return _this.elements.push(el); });\n        }\n        if (classes) {\n            this.addClass(classes);\n        }\n        if (attributes) {\n            this.attr(attributes);\n        }\n    }\n    Dom.prototype.at = function (index) {\n        return this.elements.at(index);\n    };\n    Dom.prototype.push = function (child) {\n        if (child instanceof Widget_1.default) {\n            this.elements.push((0, elman_1.findEl)(child.id));\n        }\n        else {\n            this.elements.push(child);\n        }\n        return this;\n    };\n    Dom.prototype.unshift = function (child) {\n        if (child instanceof Widget_1.default) {\n            this.elements.unshift((0, elman_1.findEl)(child.id));\n        }\n        else {\n            this.elements.unshift(child);\n        }\n        return this;\n    };\n    Dom.prototype.shift = function () {\n        return this.elements.shift();\n    };\n    Dom.prototype.pop = function () {\n        return this.elements.pop();\n    };\n    Dom.prototype.forEach = function (callback) {\n        this.elements.forEach(callback);\n        return this;\n    };\n    Object.defineProperty(Dom.prototype, \"length\", {\n        get: function () {\n            return this.elements.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Dom.prototype.addClass = function (classes) {\n        return doAll(this, function (el) { return (0, elman_1.setClasses)(el, classes, 'add'); });\n    };\n    Dom.prototype.removeClass = function (classes) {\n        return doAll(this, function (el) { return (0, elman_1.setClasses)(el, classes, 'remove'); });\n    };\n    Dom.prototype.toggleClass = function (classes) {\n        return doAll(this, function (el) { return (0, elman_1.setClasses)(el, classes, 'toggle'); });\n    };\n    Dom.prototype.hasClass = function (classes) {\n        return this.elements.at(0).classList.contains(classes);\n    };\n    Dom.prototype.attr = function (attr) {\n        if (typeof attr == 'object')\n            doAll(this, function (el) { return (0, elman_1.setAttributeMap)(el, attr); });\n        return typeof attr == \"string\" ? this.elements.at(0).attributes[attr].value : this;\n    };\n    Dom.prototype.getAttr = function (attr) {\n        return this.elements.at(0).attributes[attr].value;\n    };\n    Dom.prototype.prop = function (attr) {\n        if (typeof attr == 'object')\n            doAll(this, function (el) { return (0, elman_1.setObjectProps)(el, attr); });\n        return typeof attr == \"string\" ? this.elements.at(0)[attr] : this;\n    };\n    Dom.prototype.getProp = function (attr) {\n        return this.elements.at(0)[attr];\n    };\n    Dom.prototype.html = function (html) {\n        if (html)\n            this.elements.at(0).innerHTML = html;\n        return this.elements.at(0).innerHTML;\n    };\n    Dom.prototype.width = function (width) {\n        if (width === void 0) { width = null; }\n        if (width)\n            doAll(this, function (el) { return el.style.width = typeof width == \"number\" ? width + 'px' : width; });\n        return width ? this : this.at(0).getBoundingClientRect().width;\n    };\n    Dom.prototype.height = function (height) {\n        if (height === void 0) { height = null; }\n        if (height)\n            doAll(this, function (el) { return el.style.height = typeof height == \"number\" ? height + 'px' : height; });\n        return height ? this : this.at(0).getBoundingClientRect().height;\n    };\n    Dom.prototype.text = function (text) {\n        if (typeof text == \"string\")\n            this.elements.at(0).innerText = text;\n        return this.elements.at(0).innerText;\n    };\n    Dom.prototype.append = function (element) {\n        var _this = this;\n        if (element instanceof Dom) {\n            element.forEach(function (element) { return _this.at(0).appendChild(element); });\n        }\n        else {\n            this.at(0).appendChild(element);\n        }\n        return this;\n    };\n    Dom.prototype.appendTo = function (element) {\n        return doAll(this, function (el) { return element.appendChild(el); });\n    };\n    Dom.prototype.prepend = function (element) {\n        var _this = this;\n        if (element instanceof Dom) {\n            element.forEach(function (element) { return _this.at(0).insertBefore(element, _this.at(0).firstChild); });\n        }\n        else {\n            this.at(0).insertBefore(element, this.at(0).firstChild);\n        }\n        return this;\n    };\n    Dom.prototype.prependTo = function (element) {\n        return doAll(this, function (el) { return element.insertBefore(el, element.firstChild); });\n    };\n    Dom.prototype.css = function (values, value) {\n        return doAll(this, function (el) { return (0, elman_1.setCss)(el, values, value); });\n    };\n    Dom.prototype.remove = function () {\n        return doAll(this, function (el) { return el.remove(); });\n    };\n    Dom.prototype.empty = function () {\n        return doAll(this, function (el) { return (0, elman_1.emptyElement)(el); });\n    };\n    Dom.prototype.children = function () {\n        return Dom.from(this.at(0).children.length ? this.at(0).children : []);\n    };\n    Dom.prototype.siblings = function () {\n        return Dom.from((0, elman_1.siblings)(this.at(0)));\n    };\n    Dom.prototype.parent = function () {\n        return this.at(0).parentNode ? new Dom(this.at(0).parentNode) : null;\n    };\n    Dom.prototype.closest = function (selector) {\n        return new Dom(this.at(0).closest(selector));\n    };\n    Dom.prototype.find = function (arg) {\n        if (typeof arg === 'string') {\n            return Dom.from(Array.from(this.at(0).querySelectorAll(arg)));\n        }\n        else if (typeof arg === 'function') {\n            return Array.prototype.find.call(this, arg);\n        }\n        return undefined;\n    };\n    Dom.prototype.on = function (event, callback) {\n        doAll(this, function (el) {\n            if (!el.domEventListeners)\n                el.domEventListeners = [];\n            el.domEventListeners.push({ event: event, callback: callback });\n            el.addEventListener(event, callback);\n        });\n        return this;\n    };\n    Dom.prototype.is = function (selector) {\n        var element = this.elements.at(0);\n        if ('matches' in element) {\n            return element.matches(selector);\n        }\n        else if ('msMatchesSelector' in element && typeof element.msMatchesSelector === \"function\") {\n            return element.msMatchesSelector(selector);\n        }\n        else if ('webkitMatchesSelector' in element && typeof element.msMatchesSelector === \"function\") {\n            return element.webkitMatchesSelector(selector);\n        }\n        else if ('mozMatchesSelector' in element && typeof element.msMatchesSelector === \"function\") {\n            return element.mozMatchesSelector(selector);\n        }\n        else {\n            var matches = document.querySelectorAll(selector);\n            return Array.from(matches).indexOf(element) !== -1;\n        }\n    };\n    Dom.prototype.off = function (name, callback) {\n        if (callback === void 0) { callback = null; }\n        doAll(this, function (el) {\n            if (!el.domEventListeners)\n                el.domEventListeners = [];\n            el.domEventListeners.forEach(function (event) {\n                if (callback) {\n                    if (event.event === name && event.callback == callback)\n                        el.removeEventListener(name, callback);\n                }\n                else {\n                    if (event.event === name)\n                        el.removeEventListener(name, event.callback);\n                }\n            });\n            el.domEventListeners = el.domEventListeners.filter(function (event) {\n                if (callback) {\n                    return event.event !== name && event.callback !== callback;\n                }\n                else {\n                    return event.event !== name;\n                }\n            });\n        });\n        return this;\n    };\n    Dom.prototype.trigger = function (event, data) {\n        doAll(this, function (el) {\n            el.dispatchEvent(new Event(event, data));\n        });\n        return this;\n    };\n    Dom.prototype.show = function () {\n        return doAll(this, function (el) {\n            el.style.display = '';\n        });\n    };\n    Dom.prototype.hide = function () {\n        return doAll(this, function (el) {\n            el.style.display = 'none';\n        });\n    };\n    Dom.prototype.toggle = function () {\n        return doAll(this, function (el) {\n            el.style.display = el.style.display === 'none' ? '' : 'none';\n        });\n    };\n    Dom.prototype.enable = function () {\n        return doAll(this, function (el) {\n            if ((0, type_1.isHTMLElement)(el)) {\n                el.disabled = false;\n                el.setAttribute('disabled', 'false');\n            }\n        });\n    };\n    Dom.prototype.disable = function () {\n        return doAll(this, function (el) {\n            if ((0, type_1.isHTMLElement)(el)) {\n                el.disabled = true;\n                el.setAttribute('disabled', 'true');\n            }\n        });\n    };\n    Dom.from = function (elements) {\n        var e = new Dom(Array.from(elements).shift());\n        Array.from(elements).forEach(function (el) { return e.push(el); });\n        return e;\n    };\n    Dom.create = function (element, classes, attr) {\n        if (classes === void 0) { classes = \"\"; }\n        if (attr === void 0) { attr = {}; }\n        return new Dom((0, elman_1.createElement)(element, classes, attr));\n    };\n    return Dom;\n}());\nexports[\"default\"] = Dom;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/utils/dom.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/utils/elman.ts":
/*!***************************************************!*\
  !*** ./node_modules/rayous/client/utils/elman.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.siblings = exports.emptyElement = exports.setCss = exports.setClasses = exports.setObjectProps = exports.setAttributeMap = exports.createElement = exports.GUIDOMTREE = exports.findEl = exports.registerElement = void 0;\nvar elementList = {};\nexports.GUIDOMTREE = elementList;\nvar specificTypes = 'large|transparent|outline'.split('|');\nvar typedElements = 'button|input'.split('|');\nfunction registerElement(element, id) {\n    elementList[id] = element;\n}\nexports.registerElement = registerElement;\nfunction findEl(id) {\n    return elementList[id];\n}\nexports.findEl = findEl;\nfunction createElement(element, classes, attr) {\n    var el = document.createElement(element);\n    if (attr)\n        setAttributeMap(el, attr);\n    if (classes)\n        setClasses(el, classes);\n    return el;\n}\nexports.createElement = createElement;\nfunction setAttributeMap(element, attr) {\n    for (var i in attr) {\n        if (attr[i])\n            element.setAttribute(i, attr[i].toString());\n        else if (attr[i] == false)\n            element.removeAttribute(i);\n    }\n}\nexports.setAttributeMap = setAttributeMap;\nfunction setObjectProps(element, attr) {\n    for (var i in attr) {\n        element[i] = attr[i];\n    }\n}\nexports.setObjectProps = setObjectProps;\nfunction setClasses(element, classes, type) {\n    if (type === void 0) { type = 'add'; }\n    if (!classes.trim())\n        return;\n    var classNames = classes.trim().match(' ') ? classes.trim().split(' ') : [classes.trim()];\n    classNames.forEach(function (className) { return element\n        .classList[type](className); });\n}\nexports.setClasses = setClasses;\nfunction setCss(element, values, value) {\n    if (value === void 0) { value = null; }\n    if (typeof values === 'string') {\n        if (value === null) {\n            return window.getComputedStyle(element).getPropertyValue(values);\n        }\n        else {\n            if (typeof value == 'number')\n                value = value + 'px';\n            element.style[values] = value;\n        }\n    }\n    else if (typeof values === 'object') {\n        for (var prop in values) {\n            var value_1 = values[prop];\n            if (!prop.startsWith('--') && typeof value_1 == 'number')\n                value_1 = value_1 + 'px';\n            if (prop in element.style)\n                element.style[prop] = value_1;\n            else\n                element.style.setProperty(prop, value_1);\n        }\n    }\n}\nexports.setCss = setCss;\nfunction emptyElement(element) {\n    while (element.firstChild) {\n        element.removeChild(element.firstChild);\n    }\n}\nexports.emptyElement = emptyElement;\nfunction siblings(element) {\n    var _a;\n    return Array.from(((_a = element.parentNode) === null || _a === void 0 ? void 0 : _a.children) || []).filter(function (child) { return child !== element; }).map(function (el) { return el; });\n}\nexports.siblings = siblings;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/utils/elman.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/utils/events.ts":
/*!****************************************************!*\
  !*** ./node_modules/rayous/client/utils/events.ts ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getEventName = exports.createEventData = exports.onTextInput = exports.onHold = void 0;\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../widgets/main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar elman_1 = __webpack_require__(/*! ./elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nfunction createEventData(e, name, widget) {\n    var _a, _b;\n    if (widget === void 0) { widget = null; }\n    return {\n        prevent: function () { return e.preventDefault(); },\n        stop: function () { return e.stopPropagation(); },\n        key: { code: e.keyCode, name: e.code, output: e.key, ctrl: e.ctrlKey, shift: e.shiftKey, alt: e.altKey, meta: e.metaKey },\n        pos: { x: e.clientX, y: e.clientY },\n        offset: { x: e.offsetX, y: e.offsetY },\n        name: name,\n        data: e.data || ((_a = e.originalEvent) === null || _a === void 0 ? void 0 : _a.data),\n        dataTransfer: e.dataTransfer || ((_b = e.originalEvent) === null || _b === void 0 ? void 0 : _b.dataTransfer),\n        target: widget || e.target ? Widget_1.default.from(e.target) : null,\n        original: e\n    };\n}\nexports.createEventData = createEventData;\nfunction getEventName(event) {\n    if (event === \"tap\")\n        return \"click\";\n    if (event === \"hover\")\n        return \"mouseenter\";\n    if (event === \"doubleTap\")\n        return \"dblclick\";\n    if (event === \"focusIn\")\n        return \"focus\";\n    if (event === \"focusOut\")\n        return \"blur\";\n    return event;\n}\nexports.getEventName = getEventName;\nfunction onHold(widget, callback, duration) {\n    var holdEvent = \"hold\";\n    var eventName = getEventName(holdEvent);\n    var startHoldTimer = function (e) {\n        if (widget.is('disabled'))\n            return;\n        callback.__holdTimer = setTimeout(function () {\n            var data = createEventData(e, holdEvent);\n            callback.call(widget, data, {});\n            widget.emit(eventName, createEventData({}, holdEvent));\n            widget.is('held', true);\n        }, duration);\n    };\n    var cancelHoldTimer = function () {\n        setTimeout(function () { return widget.is('held', false); }, 10);\n        clearTimeout(callback.__holdTimer);\n    };\n    widget.__events__.push({ event: eventName, callback: callback });\n    (0, elman_1.findEl)(widget.id).on(\"mousedown\", startHoldTimer);\n    (0, elman_1.findEl)(widget.id).on(\"mouseup\", cancelHoldTimer);\n    return widget;\n}\nexports.onHold = onHold;\nfunction onTextInput(widget, callback) {\n    var eventName = getEventName('textinput');\n    var input = function (e) {\n        var data = createEventData(e, eventName);\n        callback.call(widget, data, {});\n        widget.emit(eventName, createEventData({}, eventName));\n    };\n    (0, elman_1.findEl)(widget.id).on(\"input\", input);\n    (0, elman_1.findEl)(widget.id).on(\"change\", input);\n}\nexports.onTextInput = onTextInput;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/utils/events.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/utils/eventtarget.ts":
/*!*********************************************************!*\
  !*** ./node_modules/rayous/client/utils/eventtarget.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WidgetEventTarget = void 0;\n;\nvar WidgetEventTarget = /** @class */ (function () {\n    function WidgetEventTarget() {\n        this._events = [];\n        this._eventEmitMethod = \"normal\";\n        this._events = [];\n        if ('afterConstruct' in this && typeof this.afterConstruct == \"function\") {\n            this.afterConstruct();\n        }\n    }\n    WidgetEventTarget.prototype.on = function (event, eventCallback) {\n        var _this = this;\n        var events = [];\n        if (Array.isArray(event))\n            events.push.apply(events, event);\n        else\n            events.push(event);\n        events.forEach(function (event) {\n            _this._events.push({ event: event, eventCallback: eventCallback });\n            // this.addEventListener(event, eventCallback as EventListenerOrEventListenerObject);\n        });\n        return this;\n    };\n    WidgetEventTarget.prototype.once = function (event, eventCallback) {\n        var _this = this;\n        var events = [];\n        if (Array.isArray(event))\n            events.push.apply(events, event);\n        else\n            events.push(event);\n        events.forEach(function (event) {\n            var foundEvent = _this._events.find(function (e) { return (e.event == event && e.eventCallback.toString() == eventCallback.toString()); });\n            if (!foundEvent)\n                _this._events.push({ event: event, eventCallback: eventCallback });\n        });\n        return this;\n    };\n    WidgetEventTarget.prototype.off = function (event, eventCallback) {\n        var _this = this;\n        var events = [];\n        if (Array.isArray(event))\n            events.push.apply(events, event);\n        else\n            events.push(event);\n        events.forEach(function (event) {\n            if (eventCallback) {\n                var foundEvent = _this._events.find(function (e) { return (e.event == event && e.eventCallback == eventCallback); });\n                if (foundEvent) {\n                    _this._events.splice(_this._events.indexOf(foundEvent));\n                }\n            }\n            else {\n                _this._events.filter(function (e) { return e.event == event; }).forEach(function (foundEvent) {\n                    _this._events.splice(_this._events.indexOf(foundEvent));\n                });\n            }\n        });\n        return this;\n    };\n    WidgetEventTarget.prototype.emit = function (event, eventData, init, raw) {\n        var _this = this;\n        if (raw == null)\n            raw = this._eventEmitMethod == \"raw\";\n        var data = eventData || null;\n        var events = [];\n        if (Array.isArray(event))\n            events.push.apply(events, event);\n        else\n            events.push(event);\n        events.forEach(function (event) {\n            _this._events.filter(function (e) { return e.event == event; })\n                .forEach(function (event) {\n                var eventInstance = eventData instanceof CustomEvent ? eventData : new CustomEvent(event.event, __assign(__assign({}, init), { detail: data }));\n                event.eventCallback(raw ? data : eventInstance, raw ? undefined : data);\n            });\n        });\n        return this;\n    };\n    return WidgetEventTarget;\n}());\nexports.WidgetEventTarget = WidgetEventTarget;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/utils/eventtarget.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/utils/extra.ts":
/*!***************************************************!*\
  !*** ./node_modules/rayous/client/utils/extra.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getComponentExports = void 0;\nfunction getComponentExports() {\n    // @ts-ignore\n    return window.__rayous_exports;\n}\nexports.getComponentExports = getComponentExports;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/utils/extra.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/utils/id.ts":
/*!************************************************!*\
  !*** ./node_modules/rayous/client/utils/id.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar elman_1 = __webpack_require__(/*! ./elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nfunction generateRandomID(length) {\n    if (length === void 0) { length = 12; }\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    var randomID = '';\n    for (var i = 0; i < length; i++) {\n        var randomIndex = Math.floor(Math.random() * charactersLength);\n        randomID += characters.charAt(randomIndex);\n    }\n    return elman_1.GUIDOMTREE[randomID] ? generateRandomID(length) : randomID;\n}\nexports[\"default\"] = generateRandomID;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/utils/id.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/utils/misc.ts":
/*!**************************************************!*\
  !*** ./node_modules/rayous/client/utils/misc.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.resolveSubchild = exports.filteredChildren = exports.htmlPseudos = void 0;\nvar WidgetProps_1 = __webpack_require__(/*! ../widgets/_ghost/WidgetProps */ \"./node_modules/rayous/client/widgets/_ghost/WidgetProps.ts\");\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../widgets/main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar htmlPseudos = [\n    '::after',\n    '::before',\n    '::first-letter',\n    '::first-line',\n    '::selection',\n    '::placeholder',\n    '::marker',\n    ':hover',\n    ':active',\n    ':focus',\n    ':visited',\n    ':link',\n    ':target',\n    ':first-child',\n    ':last-child',\n    ':nth-child(n)',\n    ':nth-of-type(n)',\n    ':not(selector)',\n    ':checked',\n];\nexports.htmlPseudos = htmlPseudos;\nfunction filteredChildren(children, makeOne, giveNull) {\n    if (makeOne === void 0) { makeOne = false; }\n    if (giveNull === void 0) { giveNull = false; }\n    var filtered = Array.isArray(children) ? children : ((children instanceof Widget_1.default ? children\n        .toArray() : children.elements)\n        .filter(function (element) { return element.GUIWIDGET; })\n        .map(function (element) { return element.GUIWIDGET; }));\n    var isOne = filtered.length == 1 && makeOne;\n    if (isOne) {\n        filtered[0].toArray = function () { return WidgetProps_1.WidgetList.from([filtered[0]]); };\n    }\n    else {\n        filtered.toArray = function () { return WidgetProps_1.WidgetList.from(__spreadArray([], filtered, true)); };\n    }\n    var toGive = isOne ? filtered[0] : (filtered.length ? filtered : (giveNull ? null : filtered));\n    if (Array.isArray(toGive) && !makeOne) {\n        return WidgetProps_1.WidgetList.from(toGive);\n    }\n    return makeOne && Array.isArray(toGive) ? toGive[0] : toGive;\n}\nexports.filteredChildren = filteredChildren;\nfunction resolveSubchild(element, child) {\n    if (child === void 0) { child = null; }\n    var el = element;\n    if (child && el.find(child) instanceof Widget_1.default)\n        el = el.find(child);\n    return el;\n}\nexports.resolveSubchild = resolveSubchild;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/utils/misc.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/utils/options.ts":
/*!*****************************************************!*\
  !*** ./node_modules/rayous/client/utils/options.ts ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeOptions = exports.options = void 0;\n/**\n * Represents a configuration object for the Widget class.\n * @class\n */\nvar options = /** @class */ (function () {\n    function options() {\n        /**\n       * Configuration options for the HTML element of the widget.\n       * @type {elementOptions | null}\n       */\n        this.element = {};\n        /**\n       * The CSS class name for the widget.\n       * @type {string | null}\n       */\n        this.class = \"\";\n        /**\n         * Inline styles for the widget.\n         *\n         * @type {Style | Record<string, any> | null}\n         */\n        this.style = {};\n        /**\n         * Position settings for the widget.\n         *\n         * @type {attrNullable | null}\n         */\n        this.position = {};\n        this.size = {};\n        this.attr = {};\n        this.props = {};\n        this.children = [];\n        this.private = false;\n        this.reset = false;\n        this.value = \"\";\n        this.icon = \"\";\n        this.accepts = true;\n        this.store = null;\n        this.name = null;\n        this.inheritStore = false;\n        this.events = {};\n        this._setters = [];\n        this.holdDuration = 1000;\n        this.build = function () { };\n        this.onClick = function () { };\n        this.onHold = function () { };\n        this.onContextmenu = function () { };\n        this.onMouseEnter = function () { };\n        this.onMouseMove = function () { };\n        this.onMouseDown = function () { };\n        this.onKeyDown = function () { };\n        this.onKeyUp = function () { };\n        this.onKey = function () { };\n        this.onChange = function () { };\n        this.onMount = function () { };\n    }\n    return options;\n}());\nexports.options = options;\n;\nfunction getDefaults(opts) {\n    var defaults = {\n        element: {\n            name: \"div\",\n            html: null,\n            raw: null,\n            selector: null\n        },\n        class: \"widget\",\n        style: {},\n        position: {\n            type: 'default',\n            centered: false,\n            top: null,\n            left: null,\n            bottom: null,\n            right: null\n        },\n        size: {\n            width: null,\n            height: null\n        },\n        private: false,\n        reset: false,\n        value: null,\n        icon: null,\n        children: [],\n        accepts: true,\n        events: {},\n        type: []\n    };\n    return __assign(__assign({}, defaults), opts);\n}\nexports[\"default\"] = getDefaults;\nvar mergableOptions = 'class|type|_setters|children'.split('|');\nvar mergeSeparator = {\n    class: ' '\n};\nfunction _merge(defaults, options) {\n    var _a;\n    var o = __assign({}, defaults);\n    for (var i in options) {\n        if (o[i]) {\n            if (typeof o[i] == typeof options[i]) {\n                if (typeof o[i] == 'object') {\n                    if (Array.isArray(o[i])) {\n                        if (mergableOptions.includes(i))\n                            (_a = o[i]).push.apply(_a, options[i]);\n                        else\n                            o[i] = options[i];\n                    }\n                    else {\n                        mergeOptions(o[i], options[i]);\n                    }\n                }\n                else if (mergableOptions.includes(i)) {\n                    o[i] += (mergeSeparator[i] || \"\") + options[i];\n                }\n                else {\n                    o[i] = options[i];\n                }\n            }\n            else {\n                o[i] = options[i];\n            }\n        }\n        else {\n            o[i] = options[i];\n        }\n    }\n    return o;\n}\nfunction mergeOptions(defaults, options) {\n    // if(!options){\n    // \treturn function(target: any, extended?: any){\n    // \t\ttarget._on_init = target.constructor;\n    // \t\ttarget.constructor = function(options: T){\n    // \t\t\tthis._on_init(options);\n    // \t\t}\n    // \t};\n    // } else {\n    // \treturn _merge(defaults as Record<string, any>, options as Record<string, any>);\n    // }\n    return _merge(defaults, options);\n}\nexports.mergeOptions = mergeOptions;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/utils/options.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/utils/type.ts":
/*!**************************************************!*\
  !*** ./node_modules/rayous/client/utils/type.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isHTMLElement = exports.isWidget = exports.isPosition = void 0;\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../widgets/main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nfunction isPosition(pos) {\n    return pos == \"absolute\"\n        || pos == \"relative\"\n        || pos == \"static\"\n        || pos == \"fixed\"\n        || pos == \"inherit\"\n        || pos == \"sticky\";\n}\nexports.isPosition = isPosition;\nfunction isWidget(thing) {\n    return thing instanceof Widget_1.default;\n}\nexports.isWidget = isWidget;\nfunction isHTMLElement(thing) {\n    return thing instanceof HTMLElement;\n}\nexports.isHTMLElement = isHTMLElement;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/utils/type.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/utils/widgetmodel.ts":
/*!*********************************************************!*\
  !*** ./node_modules/rayous/client/utils/widgetmodel.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createWidgetModel = void 0;\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../widgets/main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __webpack_require__(/*! ./options */ \"./node_modules/rayous/client/utils/options.ts\");\nfunction determineType(thing) {\n    return thing instanceof Widget_1.default ? 'widget' : typeof thing;\n}\nfunction getSelectorContent(selector) {\n    var parts = selector.split('.');\n    var element = parts[0];\n    var classes = parts.slice(1).join(' ').trim();\n    var id = null;\n    if (element.match('#')) {\n        id = element.split('#')[1];\n        element = element.split('#')[0];\n    }\n    return { element: element, classes: classes, id: id };\n}\n// @ts-ignore\nfunction modelToWidget(model) {\n    if (model instanceof Widget_1.default)\n        return model;\n    if (typeof model == \"string\")\n        model = { selector: model };\n    var el = getSelectorContent(model.selector);\n    var config = __assign(__assign({}, model.options), { element: { name: el.element }, class: el.classes, attr: model.attributes, children: model.children ? model.children.map(modelToWidget) : [], model: model });\n    if (el.id)\n        config.id = el.id;\n    var widget = new Widget_1.default(config);\n    if (model.text)\n        widget.text(model.text);\n    if (model.html)\n        widget.html(model.html);\n    if (model.child)\n        widget.add(modelToWidget(model.child));\n    return widget;\n}\nfunction determineValue(valueRaw, widget, option) {\n    var value = { type: typeof valueRaw, value: valueRaw, option: option, widget: widget };\n    return value;\n}\nfunction resolveValue(valueRaw, value) {\n    var _value = { type: typeof valueRaw, value: valueRaw };\n    if (typeof valueRaw == \"string\" && valueRaw.match(/\\$\\(/)) {\n        _value.value = valueRaw.replace(/\\$\\(([\\w]+)\\)/g, value.type == \"list\" ? (function (a, name) { return value.value[name]; }) : value.value);\n        _value.type = 'string';\n    }\n    else if (typeof valueRaw == \"string\" && valueRaw.startsWith('$')) {\n        _value.value = value.type == \"list\" ? value.value[valueRaw.split('$')[1]] : value.value;\n        _value.type = typeof value;\n    }\n    if (_value.value instanceof Widget_1.default) {\n        return _value;\n    }\n    if (typeof _value.value == \"function\") {\n        var v = _value.value(value.widget, value.option);\n        return resolveValue(v, value);\n    }\n    if (typeof _value.value == \"object\" && typeof _value.value.selector == \"string\") {\n        if (_value.value.attributes)\n            for (var i in _value.value.attributes)\n                _value.value.attributes[i] = resolveValue(_value.value.attributes[i], value).value;\n        for (var i in _value.value)\n            _value.value[i] = resolveValue(_value.value[i], value).value;\n        _value.value = modelToWidget(_value.value);\n    }\n    return _value;\n}\nfunction actionCase(actions, widget, value) {\n    var _loop_1 = function (action) {\n        var act = typeof actions[action] == \"object\" ?\n            (Array.isArray(actions[action]) ? __spreadArray([], actions[action], true) : __assign({}, actions[action])) : actions[action];\n        var actionValue = resolveValue(act, value);\n        if (action == 'empty' && actionValue.value == true) {\n            widget.remove('*');\n        }\n        else if (action == 'append') {\n            widget.add(actionValue.value);\n        }\n        else if (action == 'prepend') {\n            widget.addBefore(actionValue.value);\n        }\n        else if (action == 'text') {\n            widget.text(actionValue.value);\n        }\n        else {\n            var w_1 = widget;\n            var args = typeof actionValue.value == \"object\" && actionValue.value.arguments ? actionValue.value.arguments : [actionValue.value];\n            if (typeof actionValue.value == \"object\" && actionValue.value.resolve) {\n                for (var i in actionValue.value) {\n                    actionValue.value[i] = resolveValue(actionValue.value[i], value).value;\n                }\n            }\n            if (typeof actionValue.value == \"function\" && action.startsWith('on')) {\n                w_1.on(action.split('on')[1].toLowerCase(), function (e) {\n                    var data = [];\n                    for (var _i = 1; _i < arguments.length; _i++) {\n                        data[_i - 1] = arguments[_i];\n                    }\n                    actionValue.value.apply(actionValue, __spreadArray([w_1, e], data, false));\n                });\n            }\n            else if (typeof w_1[action] == \"function\")\n                w_1[action].apply(w_1, args);\n            else if (action in w_1) {\n                w_1[action] = actionValue.value;\n            }\n        }\n    };\n    for (var action in actions) {\n        _loop_1(action);\n    }\n}\nfunction selectorCase(selectors, widget, value, option) {\n    for (var i in selectors) {\n        var item = i == 'this' ? widget : widget.find(i);\n        if (item) {\n            var v = value;\n            actionCase(selectors[i], item, v);\n        }\n    }\n}\nfunction typeCase(widget, option, valueRaw) {\n    var value = determineValue(valueRaw, widget, option);\n    var type = determineType(value.value);\n    if ('any' in option)\n        selectorCase(option.any, widget, value, option);\n    if (type in option)\n        selectorCase(option[type], widget, value, option);\n    else if ('else' in option)\n        selectorCase(option.else, widget, value, option);\n}\nfunction createWidgetModel(model, _options, widget) {\n    if (widget === void 0) { widget = (Widget_1.default); }\n    var classGenerated = /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1(options) {\n            if (options === void 0) { options = _options; }\n            var _this = this;\n            var wo = {};\n            if (model.widgetOptions) {\n                for (var i in model.widgetOptions)\n                    wo[i] = resolveValue(model.widgetOptions[i], { type: \"list\", value: options }).value;\n            }\n            var config = (0, options_1.mergeOptions)(__assign(__assign({}, wo), { element: { name: getSelectorContent(model.selector).element }, class: getSelectorContent(model.selector).classes, children: model.children ? model.children.map(modelToWidget) : [], _setters: Object.keys(options) }), options);\n            if (getSelectorContent(model.selector).id)\n                config.id = getSelectorContent(model.selector).id;\n            _this = _super.call(this, config) || this;\n            _this.options = {};\n            return _this;\n        }\n        return class_1;\n    }(widget));\n    if (typeof model._onMount == \"function\")\n        classGenerated.prototype._onMount = model._onMount;\n    if (typeof model._optionChange == \"function\")\n        classGenerated.prototype._optionChange = model._optionChange;\n    function generateClassOptions(model) {\n        var _loop_2 = function () {\n            var option = model.options[i];\n            classGenerated.prototype.__defineSetter__(i, function (value) {\n                // @ts-ignore\n                var that = this;\n                if (option.type == \"array\") {\n                    var items = value;\n                    var _loop_3 = function (i_1) {\n                        if (typeof items[i_1] == 'function') {\n                            items[i_1](function (item) {\n                                typeCase(that, option[i_1], item);\n                            });\n                        }\n                    };\n                    for (var i_1 in option) {\n                        _loop_3(i_1);\n                    }\n                }\n                else {\n                    typeCase(that, option, value);\n                }\n            });\n        };\n        for (var i in model.options) {\n            _loop_2();\n        }\n    }\n    generateClassOptions(model);\n    return classGenerated;\n}\nexports.createWidgetModel = createWidgetModel;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/utils/widgetmodel.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/_ghost/WidgetProps.ts":
/*!******************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/_ghost/WidgetProps.ts ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WidgetList = void 0;\nvar Animate_1 = __webpack_require__(/*! ../../components/Animate */ \"./node_modules/rayous/client/components/Animate.ts\");\nvar Style_1 = __importDefault(__webpack_require__(/*! ../../components/Style */ \"./node_modules/rayous/client/components/Style.ts\"));\nvar Store_1 = __importDefault(__webpack_require__(/*! ../../data/Store */ \"./node_modules/rayous/client/data/Store.ts\"));\nvar dom_1 = __importDefault(__webpack_require__(/*! ../../utils/dom */ \"./node_modules/rayous/client/utils/dom.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar events_1 = __webpack_require__(/*! ../../utils/events */ \"./node_modules/rayous/client/utils/events.ts\");\nvar misc_1 = __webpack_require__(/*! ../../utils/misc */ \"./node_modules/rayous/client/utils/misc.ts\");\nvar type_1 = __webpack_require__(/*! ../../utils/type */ \"./node_modules/rayous/client/utils/type.ts\");\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nfunction registerEvent(widget, event, callback) {\n    event = (0, events_1.getEventName)(event);\n    if (event == 'hold') {\n        return (0, events_1.onHold)(widget, callback, widget.options.holdDuration);\n    }\n    if (event == 'textinput') {\n        return (0, events_1.onTextInput)(widget, callback);\n    }\n    widget.__events__.push({ event: event, callback: callback });\n    (0, elman_1.findEl)(widget.id).on(event, function (e, args) {\n        if (widget.is('disabled'))\n            return;\n        if (event == 'click' && widget.is('held'))\n            return;\n        var data = (0, events_1.createEventData)(e, event, widget);\n        return callback.call(widget, data, args);\n    });\n}\nfunction mounted(parent, child) {\n    if (typeof child._onMount == \"function\")\n        child._onMount(parent);\n    child === null || child === void 0 ? void 0 : child.emit('mount', { parent: parent });\n}\nvar WidgetProps = /** @class */ (function () {\n    function WidgetProps() {\n        this.tree = [];\n        this._id = null;\n        this.id = null;\n        this.accepts = true;\n        this.private = false;\n        this.sealed = false;\n        this.options = {};\n        this.__generated = false;\n        this.store = new Store_1.default({});\n        this.__events__ = [];\n    }\n    Object.defineProperty(WidgetProps.prototype, \"style\", {\n        /**\n         * returns all the applied styles\n         * @returns {Style | styleProps}\n         */\n        get: function () {\n            return (0, elman_1.findEl)(this.id).at(0).WIDGET_STYLE || (0, elman_1.findEl)(this.id).at(0).GUISTYLE || (0, elman_1.findEl)(this.id).at(0).style;\n        },\n        /**\n         * The style setter stylezes the style\n         * @example\n         * widget.style = { display: 'block' }\n         * // You can change it later on\n         * widget.style = { display: 'none' }\n         */\n        set: function (style) {\n            var _this = this;\n            var _setCss = function (style) {\n                if (!(0, elman_1.findEl)(_this.id).at(0).GUISTYLE)\n                    (0, elman_1.findEl)(_this.id).at(0).GUISTYLE = style;\n                else\n                    (0, elman_1.findEl)(_this.id).at(0).GUISTYLE = __assign(__assign({}, (0, elman_1.findEl)(_this.id).at(0).GUISTYLE), style);\n                (0, elman_1.findEl)(_this.id).css(style);\n            };\n            if (style instanceof Style_1.default) {\n                (0, elman_1.findEl)(this.id).at(0).WIDGET_STYLE = style;\n                _setCss(style.all);\n                style.on('update', function () {\n                    _setCss(style.all);\n                });\n            }\n            else {\n                if (style)\n                    _setCss(style);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WidgetProps.prototype, \"padding\", {\n        /**\n         * sets the padding of an element\n         * @example\n         * widget.padding = '10'\n         * widget.padding = '10 10'\n         */\n        set: function (value) {\n            (0, elman_1.findEl)(this.id).css({ \"padding\": value });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WidgetProps.prototype, \"margin\", {\n        /**\n         * sets the margin of an element\n         * @example\n         * widget.margin = '10'\n         * widget.margin = '10 10'\n         */\n        set: function (value) {\n            (0, elman_1.findEl)(this.id).css({ \"margin\": value });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WidgetProps.prototype, \"name\", {\n        /**\n         * Sets the name attribute of an element\n         * @example\n         * new Widget({ name: \"radio-button-1\" })\n         * // or\n         * widget.name = 'radio-button-2'\n         */\n        set: function (value) {\n            (0, elman_1.findEl)(this.id).attr({ \"name\": value });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * The setOptions method changes the default widget options into the given options\n     * @param {options} options the options to replace the default widget options\n     * @returns {Widget}\n     */\n    WidgetProps.prototype.setOptions = function (options) { };\n    WidgetProps.prototype._optionChange = function (options) { };\n    WidgetProps.prototype.addHTMLElement = function (child, subchild) {\n        var hadGUI = child.GUIWIDGET;\n        var elt = this.add(hadGUI ? child.GUIWIDGET : Widget_1.default.from(child), subchild);\n        if (!hadGUI)\n            elt.stripElement();\n        return elt;\n    };\n    WidgetProps.prototype.addWidget = function (child, subchild) {\n        if (this.accepts === false)\n            return this;\n        if (this.sealed === true)\n            return this;\n        if ((0, type_1.isWidget)(child)) {\n            var l = (0, misc_1.resolveSubchild)((0, elman_1.findEl)(this.id), subchild);\n            if (child.is('prefix')) {\n                l.prepend((0, elman_1.findEl)(child.id));\n            }\n            else {\n                l.append((0, elman_1.findEl)(child.id));\n            }\n            mounted(this, child);\n        }\n        return this;\n    };\n    /**\n     * Adds a child to the widget, optionally within a specified subchild.\n     *\n     * @param {child} child - The child element or widget to be added.\n     * @param {string|null} [subchild=null] - The subchild selector inside the widget (default is null).\n     *\n     * @returns {Widget} - Returns the class itself for method chaining.\n     *\n     * If a subchild is specified, the child is placed inside the subchild within the widget.\n     *\n     * @example\n     * const widget = new Widget();\n     * const childElement = document.createElement('div');\n     * const childWidget = new Widget();\n     *\n     * // Add a child element directly to the widget\n     * widget.add(childElement);\n     *\n     * // Add a child widget directly to the widget\n     * widget.add(childWidget);\n     *\n     * // Add a child element within a subchild\n     * widget.add(childElement, 'subchild');\n     *\n     * // Add a child widget within a subchild\n     * widget.add(childWidget, 'subchild');\n     */\n    WidgetProps.prototype.add = function (child, subchild) {\n        if (subchild === void 0) { subchild = null; }\n        if ((0, type_1.isWidget)(child)) {\n            this.addWidget(child, subchild);\n        }\n        else if ((0, type_1.isHTMLElement)(child)) {\n            this.addHTMLElement(child, subchild);\n        }\n        else if (typeof child == \"string\") {\n            (0, elman_1.findEl)(this.id).at(0).append(new window.Text(child));\n        }\n        else {\n            console.log(child, ' was given');\n            throw new Error('Only Widgets or HTMLElements Allowed, The given child was logged.');\n        }\n        return this;\n    };\n    /**\n     * This is exactly like the add method but it instead adds it at the start instead of bottom\n     * @param {child} child the child to be added\n     * @param {string|null} subchild the subchild selector.\n     * @returns {Widget}\n     */\n    WidgetProps.prototype.addBefore = function (child, subchild) {\n        if (subchild === void 0) { subchild = null; }\n        child.is('prefix', true);\n        this.add(child, subchild);\n        child.is('prefix', false);\n        return this;\n    };\n    /**\n * Adds multiple children to the widget, optionally specifying a subchild.\n * If the last argument is a string, it is treated as a subchild and used for all children.\n * @param {...Array<string | child>} children - An array of children to add, which can be of type `child` or a string subchild.\n * @returns {Widget} - Returns the class itself for method chaining.\n * @example\n * const widget = new Widget();\n * const child1 = new Widget();\n * const child2 = new Widget();\n *\n * // Adding multiple children without specifying a subchild\n * widget.addAll(child1, child2);\n *\n * // Adding multiple children with a subchild\n * widget.addAll(child1, child2, 'subchild');\n *\n * // Adding multiple children with the last argument as a subchild\n * widget.addAll(child1, child2, 'commonSubchild');\n */\n    WidgetProps.prototype.addAll = function () {\n        var _this = this;\n        var children = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            children[_i] = arguments[_i];\n        }\n        var subchild = \"\";\n        var last = children[children.length - 1];\n        if (typeof last == 'string') {\n            subchild = children.pop();\n        }\n        children.forEach(function (child) { return _this.add(child, subchild); });\n        return this;\n    };\n    WidgetProps.prototype.addWrappedElement = function (elt, elementText, where, subchild) {\n        if (subchild === void 0) { subchild = null; }\n        var el = (0, misc_1.resolveSubchild)((0, elman_1.findEl)(this.id), subchild);\n        var _a = elementText.split(' '), cssClass = _a[0], element = _a[1];\n        if (!elt) {\n            el.find('.' + cssClass).remove();\n            return this;\n        }\n        if (!element)\n            element = 'div';\n        var additionEl;\n        if (elt instanceof Widget_1.default) {\n            additionEl = (0, elman_1.findEl)(elt.id);\n        }\n        else if (elt instanceof HTMLElement) {\n            additionEl = new dom_1.default(elt);\n        }\n        else {\n            throw new Error(\"Unexpected Element: not HTMLElement nor Widget\");\n        }\n        var h = document.createElement(element);\n        h.className = cssClass;\n        h.append(additionEl.at(0));\n        if (where == 'before')\n            el.prepend(h);\n        else\n            el.append(h);\n        if ((0, type_1.isWidget)(elt)) {\n            mounted(this, elt);\n        }\n        return this;\n    };\n    /**\n     * Removes a child from the widget. If a subchild is specified, it removes the child inside the subchild.\n     * @param {child | string | null} [child=null] - The child or a subchild to remove (default is null).\n     * @param {string | null} [subchild=null] - The subchild within which to remove the child (default is null).\n     * @returns {Widget} - Returns the class itself for method chaining.\n     * @example\n     * const widget = new Widget();\n     * const child = new Widget();\n     *\n     * // Remove a specific child from the widget\n     * widget.remove(child);\n     *\n     * // Remove all children inside a subchild\n     * widget.remove(null, '.subchild');\n     *\n     * // Remove all children within the widget\n     * widget.remove('*');\n     */\n    WidgetProps.prototype.remove = function (child, subchild) {\n        var _a;\n        if (child === void 0) { child = null; }\n        if (subchild === void 0) { subchild = null; }\n        if (this.sealed === true)\n            return this;\n        if (!child)\n            (0, misc_1.resolveSubchild)((0, elman_1.findEl)(this.id), subchild).remove();\n        else if (child == '*')\n            (_a = (0, misc_1.resolveSubchild)((0, elman_1.findEl)(this.id), subchild)) === null || _a === void 0 ? void 0 : _a.empty();\n        else\n            child.remove();\n        return this;\n    };\n    /**\n     * Checks the HTML state or custom pseudo-class of the widget.\n     *\n     * @param {string} state - The name of the HTML state or custom pseudo-class to check.\n     * @param {boolean | null} [is=null] - If provided, sets the state to `true` or `false` (default is null).\n     *\n     * @returns {boolean | null} - Returns `true` if the state is active or `false` if not. If `is` is provided, returns null.\n     *\n     * The `state` parameter can be the name of an HTML state, such as `:checked`, or a custom pseudo-class defined in `htmlPseudos`.\n     * If `is` is a boolean value, it sets or removes the state. If `is` is not provided, it checks if the state is active.\n     *\n     * @example\n     * const widget = new Widget();\n     *\n     * // Check if the widget is disabled\n     * const isDisabled = widget.is('disabled');\n     *\n     * // Set the :checked state to true\n     * widget.is(':checked', true);\n     *\n     * // Check if the :focus state is active\n     * const hasFocus = widget.is(':focus');\n     */\n    WidgetProps.prototype.is = function (state, is) {\n        if (is === void 0) { is = null; }\n        var stateName = ':' + state;\n        if (is === true || is === false) {\n            if (is === true)\n                (0, elman_1.findEl)(this.id).at(0)[stateName] = true;\n            else\n                delete (0, elman_1.findEl)(this.id).at(0)[stateName];\n            return true;\n        }\n        if (state == 'disabled') {\n            return (0, elman_1.findEl)(this.id).hasClass('disabled') && (0, elman_1.findEl)(this.id).is(':disabled');\n        }\n        else {\n            return misc_1.htmlPseudos.indexOf(stateName) == -1 ? (0, elman_1.findEl)(this.id).at(0)[stateName] : (0, elman_1.findEl)(this.id).is(stateName);\n        }\n    };\n    /**\n     * Retrieves all child widgets or elements within the widget or a specified subchild.\n     *\n     * @param {string | null} [subchild=null] - The subchild selector inside the widget (default is null).\n     *\n     * @returns {Widget[]} - An array of child widgets or elements.\n     *\n     * If a subchild is specified, this method retrieves child widgets or elements within that subchild.\n     * Otherwise, it retrieves all child widgets or elements within the widget.\n     *\n     * @example\n     * const widget = new Widget();\n     * const subchildWidget = new Widget({ class: 'subchild' });\n     * const childElement = document.createElement('div');\n     *\n     * // Add child widgets and elements to the widget\n     * widget.add(subchildWidget, 'subchild');\n     * widget.add(childElement);\n     *\n     * // Retrieve all children within the widget\n     * const allChildren = widget.children();\n     *\n     * // Retrieve children within the 'subchild'\n     * const subchildChildren = widget.children('.subchild');\n     */\n    WidgetProps.prototype.children = function (subchild) {\n        if (subchild === void 0) { subchild = null; }\n        return WidgetList.from((0, misc_1.filteredChildren)((0, misc_1.resolveSubchild)((0, elman_1.findEl)(this.id), subchild).children()));\n    };\n    /**\n     * Finds and retrieves a single child widget or element that matches the specified HTML selector within the widget or a subchild.\n     *\n     * @param {string} q - The HTML selector to search for within the widget or subchild.\n     * @param {string | null} [subchild=null] - The subchild selector inside the widget (default is null).\n     *\n     * @returns {Widget | null} - A single child widget or element that matches the selector or null if none is found.\n     *\n     * If `q` is set to '*', it retrieves all children within the widget or subchild.\n     *\n     * @example\n     * const widget = new Widgets();\n     * const childWidget = new Widget();\n     * const childElement = document.createElement('div');\n     *\n     * // Add child widgets and elements to the widget\n     * widget.add(childWidget);\n     * widget.add(childElement);\n     *\n     * // Find a child widget within the widget using a selector\n     * const foundWidget = widget.find('.some-class');\n     *\n     * // Find a child element within the widget using a selector\n     * const foundElement = widget.find('div');\n     *\n     * // Find all children within the widget\n     * const allChildren = widget.find('*');\n     */\n    WidgetProps.prototype.find = function (q, subchild) {\n        if (subchild === void 0) { subchild = null; }\n        return q == '*' ? this.children() : (0, misc_1.filteredChildren)((0, misc_1.resolveSubchild)((0, elman_1.findEl)(this.id), subchild).find(q), true);\n    };\n    /**\n     * Finds and retrieves an array of child widgets or elements that match the specified HTML selector within the widget or a subchild.\n     *\n     * @param {string} q - The HTML selector to search for within the widget or subchild.\n     * @param {string | null} [subchild=null] - The subchild selector inside the widget (default is null).\n     *\n     * @returns {Widget[]} - An array of child widgets or elements that match the selector.\n     *\n     * If `q` is set to '*', it retrieves all children within the widget or subchild.\n     *\n     * @example\n     * const widget = new Widget();\n     * const childWidget = new Widget();\n     * const childElement = document.createElement('div');\n     *\n     * // Add child widgets and elements to the widget\n     * widget.add(childWidget);\n     * widget.add(childElement);\n     *\n     * // Find all child widgets within the widget using a selector\n     * const foundWidgets = widget.findAll('.some-class');\n     *\n     * // Find all child elements within the widget using a selector\n     * const foundElements = widget.findAll('div');\n     *\n     * // Find all children within the widget\n     * const allChildren = widget.findAll('*');\n     */\n    WidgetProps.prototype.findAll = function (q, subchild) {\n        if (subchild === void 0) { subchild = null; }\n        return q == '*' ? this.children() : (0, misc_1.filteredChildren)((0, misc_1.resolveSubchild)((0, elman_1.findEl)(this.id), subchild).find(q));\n    };\n    /**\n     * Finds and retrieves the closest parent widget with the specified HTML selector.\n     *\n     * @param {string} q - The HTML selector to search for among the parent widgets.\n     *\n     * @returns {Widget | null} - The closest parent widget that matches the selector, or null if none is found.\n     *\n     * This method searches for the closest parent widget that matches the provided selector (`q`) among the ancestor widgets.\n     * If a matching parent widget is found, it is returned; otherwise, it returns null.\n     *\n     * @example\n     * const widget = new Widget();\n     * const childWidget = new Widget();\n     * const parentWidget = new Widget();\n     *\n     * // Add child widgets to the parent widget\n     * parentWidget.add(widget);\n     * widget.add(childWidget);\n     *\n     * // Find the closest parent widget that matches the selector\n     * const closestParent = childWidget.closest('.some-selector');\n     *\n     * // If no matching parent widget is found, it returns null\n     * const nonExistentParent = childWidget.closest('.non-existent-selector');\n     */\n    WidgetProps.prototype.closest = function (q) {\n        return (0, misc_1.filteredChildren)((0, elman_1.findEl)(this.id).closest(q), true, true);\n    };\n    /**\n     * Retrieves the parent widget, or the nearest parent widget with an actual Widget instance, based on the `container` parameter.\n     *\n     * @param {boolean} [container=false] - Determines whether to retrieve the parent widget (false) or the direct parent without searching for a Widget instance (true).\n     *\n     * @returns {Widget | null} - The parent widget, or the direct parent if `container` is set to true, or null if no parent is found.\n     *\n     * If `container` is true, this method retrieves the direct parent without checking for a Widget instance.\n     * If `container` is false (default), it searches for the nearest parent widget that has an actual Widget instance and returns that parent widget. If no parent widget is found, it returns null.\n     *\n     * @example\n     * const widget = new Widget();\n     * const parentWidget = new Widget();\n     *\n     * // Add the widget to the parent widget\n     * parentWidget.add(widget);\n     *\n     * // Retrieve the parent widget\n     * const parent = widget.parent();\n     *\n     * // Retrieve the direct parent without checking for a Widget instance\n     * const directParent = widget.parent(true);\n     *\n     * // If no parent widget is found, it returns null\n     * const nonExistentParent = parentWidget.parent();\n     */\n    WidgetProps.prototype.parent = function (container) {\n        if (container === void 0) { container = false; }\n        var parent = (0, elman_1.findEl)(this.id).parent();\n        if (!parent && !this.private)\n            return Widget_1.default.from(document.body);\n        if (container)\n            return this.container();\n        if (!parent.at(0))\n            return null;\n        while (!parent.at(0).GUIWIDGET) {\n            parent = parent.parent();\n        }\n        if (!parent.at(0).GUIWIDGET)\n            return Widget_1.default.from(parent.at(0));\n        return parent.at(0).GUIWIDGET;\n    };\n    /**\n     * Retrieves the direct parent widget, without searching for a Widget instance.\n     *\n     * @returns {Widget | null} - The direct parent widget, or null if no parent is found.\n     *\n     * This method retrieves the direct parent widget without checking for a Widget instance. It returns the parent widget or null if no parent widget is found.\n     *\n     * @example\n     * const widget = new Widget();\n     * const parentWidget = new Widget();\n     *\n     * // Add the widget to the parent widget\n     * parentWidget.add(widget);\n     *\n     * // Retrieve the direct parent without checking for a Widget instance\n     * const directParent = widget.container();\n     *\n     * // If no parent widget is found, it returns null\n     * const nonExistentParent = parentWidget.container();\n     */\n    WidgetProps.prototype.container = function () {\n        var parent = (0, elman_1.findEl)(this.id).parent();\n        return Widget_1.default.from(parent.at(0));\n    };\n    /**\n     * Sets the attributes of the widget element.\n     *\n     * @param {attr | string} props - The attributes to be set in the format {attribute: value} or a single attribute as a string.\n     *\n     * @returns {Widget} - The updated widget with the specified attributes applied.\n     *\n     * This method sets the specified attributes for the widget element. You can provide attributes as an object in the format {attribute: value} or a single attribute as a string. The method updates the widget element with the new attributes and returns the modified widget.\n     *\n     * @example\n     * const widget = new Widget();\n     *\n     * // Set multiple attributes using an object\n     * widget.attr({ id: 'my-widget', class: 'custom-widget' });\n     *\n     * // Set a single attribute as a string\n     * widget.attr('data-custom', 'value');\n     */\n    WidgetProps.prototype.attr = function (props) {\n        if (this.sealed === true)\n            return this;\n        if (typeof props == \"object\")\n            (0, elman_1.findEl)(this.id).attr(props);\n        return typeof props == \"string\" ? (0, elman_1.findEl)(this.id).attr(props) : this;\n    };\n    /**\n     * Sets the properties of the widget element directly.\n     *\n     * @param {attr | string} props - The properties to be set in the format {property: value} or a single property as a string.\n     *\n     * @returns {Widget} - The updated widget with the specified properties applied.\n     *\n     * This method sets the specified properties for the widget element directly. You can provide properties as an object in the format {property: value} or a single property as a string. The method updates the widget element with the new properties and returns the modified widget.\n     *\n     * @example\n     * const widget = new Widget();\n     *\n     * // Set multiple properties using an object\n     * widget.prop({ disabled: true, tabIndex: 2 });\n     *\n     * // Set a single property as a string\n     * widget.prop('value', 'custom-value');\n     */\n    WidgetProps.prototype.prop = function (props) {\n        if (this.sealed === true)\n            return this;\n        if (typeof props == \"object\")\n            (0, elman_1.findEl)(this.id).prop(props);\n        return typeof props == \"string\" ? (0, elman_1.findEl)(this.id).prop(props) : this;\n    };\n    /**\n     * Sets CSS styles for the widget element.\n     *\n     * @param {attr} props - The CSS styles to be applied as an object {styleName: value}.\n     *\n     * @returns {Widget} - The updated widget with the specified CSS styles applied.\n     *\n     * This method sets the specified CSS styles for the widget element. You can provide styles as an object in the format {styleName: value}. The method updates the widget element with the new styles and returns the modified widget.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.css({ color: 'red', fontSize: '16px' });\n     */\n    WidgetProps.prototype.css = function (props) {\n        if (this.sealed === true)\n            return this;\n        if (typeof props == \"object\")\n            (0, elman_1.findEl)(this.id).css(props);\n        return typeof props == \"string\" ? (0, elman_1.findEl)(this.id).css(props) : this;\n    };\n    /**\n     * Retrieves the value of a specific CSS style property for the widget element.\n     *\n     * @param {string} prop - The name of the CSS style property to retrieve.\n     *\n     * @returns {string} - The value of the specified CSS style property.\n     *\n     * This method retrieves the value of the specified CSS style property for the widget element. If the property does not exist, it returns an empty string.\n     *\n     * @example\n     * const widget = new Widget();\n     * const fontSize = widget.styleProp('fontSize'); // Returns the font size as a string.\n     */\n    WidgetProps.prototype.styleProp = function (prop) {\n        if (typeof prop !== 'string')\n            return this;\n        return (0, elman_1.findEl)(this.id).css(prop);\n    };\n    /**\n     * Sets the text content for the widget element.\n     *\n     * @param {string} text - The text content to be set.\n     *\n     * @returns {Widget} - The updated widget with the specified text content applied.\n     *\n     * This method sets the text content for the widget element. It updates the text content and returns the modified widget.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.text('Hello, World!');\n     */\n    WidgetProps.prototype.text = function (text) {\n        if (this.sealed === true)\n            return this;\n        (0, elman_1.findEl)(this.id).text(text);\n        return text ? this : (0, elman_1.findEl)(this.id).text(text);\n    };\n    /**\n     * Sets the height of the widget element.\n     *\n     * @param {number | string | null} h - The height value to be set.\n     *\n     * @returns {Widget} - The updated widget with the specified height applied.\n     *\n     * This method sets the height of the widget element. You can provide the height value as a number or a string (e.g., '100px'). It updates the height and returns the modified widget.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.height(100); // Sets the height to 100 pixels.\n     */\n    WidgetProps.prototype.height = function (h) {\n        if (h === void 0) { h = null; }\n        if (this.sealed === true)\n            return this;\n        (0, elman_1.findEl)(this.id).height(h);\n        return h ? this : (0, elman_1.findEl)(this.id).height();\n    };\n    /**\n     * Sets the width of the widget element.\n     *\n     * @param {number | string | null} w - The width value to be set.\n     *\n     * @returns {Widget} - The updated widget with the specified width applied.\n     *\n     * This method sets the width of the widget element. You can provide the width value as a number or a string (e.g., '200px'). It updates the width and returns the modified widget.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.width(200); // Sets the width to 200 pixels.\n     */\n    WidgetProps.prototype.width = function (w) {\n        if (w === void 0) { w = null; }\n        if (this.sealed === true)\n            return this;\n        (0, elman_1.findEl)(this.id).width(w);\n        return w ? this : (0, elman_1.findEl)(this.id).width();\n    };\n    /**\n     * Sets the inner HTML content of the widget element.\n     *\n     * @param {string | null} text - The HTML content to be set. If null, the existing content is cleared.\n     *\n     * @returns {Widget} - The updated widget with the specified HTML content applied.\n     *\n     * This method sets the inner HTML content for the widget element. If you provide a string, it replaces the existing content. If you pass null, it clears the content. It updates the HTML content and returns the modified widget.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.html('<div>Hello, World!</div>'); // Sets the inner HTML content.\n     */\n    WidgetProps.prototype.html = function (text) {\n        if (text === void 0) { text = null; }\n        if (this.sealed === true)\n            return this;\n        (0, elman_1.findEl)(this.id).html(text);\n        return text ? this : (0, elman_1.findEl)(this.id).html();\n    };\n    /**\n     * Adds one or more CSS classes to the widget element.\n     *\n     * @param {string} classes - The CSS classes to add, separated by spaces.\n     *\n     * @returns {Widget} - The updated widget with the specified CSS classes added.\n     *\n     * This method adds one or more CSS classes to the widget element. You can specify multiple classes by separating them with spaces. It updates the element's classes and returns the modified widget.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.addClass('custom-class another-class');\n     */\n    WidgetProps.prototype.addClass = function (classes) {\n        (0, elman_1.findEl)(this.id).addClass(classes);\n        return this;\n    };\n    /**\n     * Checks if the widget element has the specified CSS classes.\n     *\n     * @param {string} classes - The CSS classes to check, separated by spaces.\n     *\n     * @returns {boolean} - `true` if all specified classes are present, `false` otherwise.\n     *\n     * This method checks if the widget element has all the specified CSS classes. If all classes are present, it returns `true`. Otherwise, it returns `false`.\n     *\n     * @example\n     * const widget = new Widget();\n     * const hasClass = widget.hasClass('custom-class');\n     */\n    WidgetProps.prototype.hasClass = function (classes) {\n        return (0, elman_1.findEl)(this.id).hasClass(classes);\n    };\n    /**\n     * Removes one or more CSS classes from the widget element.\n     *\n     * @param {string} classes - The CSS classes to remove, separated by spaces.\n     *\n     * @returns {Widget} - The updated widget with the specified CSS classes removed.\n     *\n     * This method removes one or more CSS classes from the widget element. You can specify multiple classes by separating them with spaces. It updates the element's classes and returns the modified widget.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.removeClass('custom-class another-class');\n     */\n    WidgetProps.prototype.removeClass = function (classes) {\n        (0, elman_1.findEl)(this.id).removeClass(classes);\n        return this;\n    };\n    /**\n     * Toggles one or more CSS classes on the widget element.\n     *\n     * @param {string} classes - The CSS classes to toggle, separated by spaces.\n     *\n     * @returns {Widget} - The updated widget with the specified CSS classes toggled.\n     *\n     * This method toggles one or more CSS classes on the widget element. It adds classes if they are not present and removes them if they are already present. It updates the element's classes and returns the modified widget.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.toggleClass('custom-class another-class');\n     */\n    WidgetProps.prototype.toggleClass = function (classes) {\n        (0, elman_1.findEl)(this.id).toggleClass(classes);\n        return this;\n    };\n    WidgetProps.prototype.rect = function () {\n        return (0, elman_1.findEl)(this.id).at(0).getBoundingClientRect();\n    };\n    WidgetProps.prototype.focus = function () {\n        (0, elman_1.findEl)(this.id).focus();\n        return this;\n    };\n    WidgetProps.prototype.click = function () {\n        (0, elman_1.findEl)(this.id).click();\n        return this;\n    };\n    WidgetProps.prototype.toHTMLElement = function (parent, direction) {\n        if (direction === void 0) { direction = null; }\n        if (this.sealed === true)\n            return this;\n        return this.toWidget(Widget_1.default.from(parent), direction);\n    };\n    WidgetProps.prototype.toWidget = function (parent, direction) {\n        if (direction === void 0) { direction = null; }\n        if (this.sealed === true)\n            return this;\n        // if(parent.options.shareState) this.setState(parent.state);\n        if (direction == 'before')\n            parent.addBefore(this);\n        else\n            parent.add(this);\n        return this;\n    };\n    /**\n     * Appends the widget to a parent element in the specified direction.\n     *\n     * @param {child} parent - The parent element to append the widget to.\n     * @param {string | null} direction - The optional direction ('before' or 'after') to insert the widget within the parent.\n     *\n     * @returns {Widget} - The updated widget appended to the parent element.\n     *\n     * This method appends the widget to a parent element, either as a child or before/after other elements within the parent. The direction parameter determines the placement of the widget relative to existing elements. It returns the modified widget.\n     *\n     * @throws {Error} - Throws an error if the parent is not a valid Widget or HTMLElement.\n     *\n     * @example\n     * const widget = new Widget();\n     * const parent = new Widget();\n     * widget.to(parent, 'before'); // Appends the widget before the parent's children.\n     */\n    WidgetProps.prototype.to = function (parent, direction) {\n        if (direction === void 0) { direction = null; }\n        if ((0, type_1.isWidget)(parent)) {\n            this.toWidget(parent, direction);\n        }\n        else if ((0, type_1.isHTMLElement)(parent)) {\n            this.toHTMLElement(parent, direction);\n        }\n        else {\n            throw new Error('Only Widgets or HTMLElements Allowed');\n        }\n        return this;\n    };\n    /**\n     * Registers event listeners for the widget.\n     *\n     * @param {string | string[]} event - The event(s) to listen for.\n     * @param {Function} callback - The function to call when the event occurs.\n     *\n     * @returns {Widget} - The widget with event listeners registered.\n     *\n     * This method registers event listeners for the widget to respond to the specified event(s). You can specify a single event or an array of events. When the event occurs, the provided callback function is executed.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.on('click', () => console.log('Widget clicked!'));\n     */\n    WidgetProps.prototype.on = function (event, callback) {\n        var _this = this;\n        if (Array.isArray(event)) {\n            event.forEach(function (event) { return registerEvent(_this, event, callback); });\n        }\n        else {\n            registerEvent(this, event, callback);\n        }\n        return this;\n    };\n    /**\n     * Removes event listeners from the widget.\n     *\n     * @param {string | string[]} event - The event(s) to remove listeners from.\n     * @param {Function | null} callback - The optional callback function to remove. If null, all listeners for the event(s) are removed.\n     *\n     * @returns {Widget} - The widget with event listeners removed.\n     *\n     * This method removes event listeners from the widget for the specified event(s). You can specify a single event or an array of events. You can also provide an optional callback function to remove specific listeners. If no callback is provided, all listeners for the event(s) are removed.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.off('click'); // Removes all click event listeners.\n     */\n    WidgetProps.prototype.off = function (event, callback) {\n        var _this = this;\n        if (callback === void 0) { callback = null; }\n        if (Array.isArray(event)) {\n            event.forEach(function (event) { return (0, elman_1.findEl)(_this.id).off(event, callback); });\n        }\n        else {\n            (0, elman_1.findEl)(this.id).off(event, callback);\n        }\n        return this;\n    };\n    /**\n     * Triggers a custom event on the widget.\n     *\n     * @param {string} event - The name of the custom event to trigger.\n     * @param {any} data - The optional data to pass with the event.\n     *\n     * @returns {Widget} - The widget with the custom event triggered.\n     *\n     * This method triggers a custom event on the widget. You can specify the event name and provide optional data to pass with the event. Event listeners registered for this event will be notified.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.emit('customEvent', { message: 'Hello, World!' });\n     */\n    WidgetProps.prototype.emit = function (event, data) {\n        (0, elman_1.findEl)(this.id).trigger(event, data);\n        return this;\n    };\n    /**\n     * Hides the widget with an optional animation effect.\n     *\n     * @param {number | null} time - The optional duration of the hide animation in milliseconds. If null, hides the widget without animation.\n     *\n     * @returns {Widget} - The widget with the hide operation performed.\n     *\n     * This method hides the widget. You can specify an optional duration for the hide animation. If no time is provided (null), the widget is hidden instantly. It returns the widget after the hide operation.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.hide(500); // Hides the widget with a 500ms animation.\n     */\n    WidgetProps.prototype.hide = function (time) {\n        (0, elman_1.findEl)(this.id).hide(time);\n        return this;\n    };\n    /**\n     * Shows the widget with an optional animation effect.\n     *\n     * @param {number | null} time - The optional duration of the show animation in milliseconds. If null, shows the widget without animation.\n     *\n     * @returns {Widget} - The widget with the show operation performed.\n     *\n     * This method shows the widget. You can specify an optional duration for the show animation. If no time is provided (null), the widget is shown instantly. It returns the widget after the show operation.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.show(500); // Shows the widget with a 500ms animation.\n     */\n    WidgetProps.prototype.show = function (time) {\n        (0, elman_1.findEl)(this.id).show(time);\n        return this;\n    };\n    /**\n     * Toggles the visibility of the widget with an optional animation effect.\n     *\n     * @param {number | null} time - The optional duration of the toggle animation in milliseconds. If null, toggles the visibility without animation.\n     *\n     * @returns {Widget} - The widget with the visibility toggle operation performed.\n     *\n     * This method toggles the visibility of the widget. You can specify an optional duration for the toggle animation. If no time is provided (null), the visibility is toggled instantly. It returns the widget after the toggle operation.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.toggle(500); // Toggles the visibility of the widget with a 500ms animation.\n     */\n    WidgetProps.prototype.toggle = function (time) {\n        (0, elman_1.findEl)(this.id).toggle(time);\n        return this;\n    };\n    WidgetProps.prototype.disable = function () {\n        (0, elman_1.findEl)(this.id).disable();\n        return this;\n    };\n    WidgetProps.prototype.enable = function () {\n        (0, elman_1.findEl)(this.id).enable();\n        return this;\n    };\n    WidgetProps.prototype.raw = function () {\n        if (this.sealed === true)\n            return this;\n        return this.private ? this : (0, elman_1.findEl)(this.id);\n    };\n    WidgetProps.prototype.toString = function () {\n        return (0, elman_1.findEl)(this.id).at(0).outerHTML;\n    };\n    WidgetProps.prototype.stripElement = function () {\n        return delete (0, elman_1.findEl)(this.id).at(0).GUIWIDGET;\n    };\n    WidgetProps.prototype.toArray = function () {\n        return [this];\n    };\n    Object.defineProperty(WidgetProps.prototype, \"animation\", {\n        /*\n            Animations\n        */\n        /**\n         * Set the animation for the widget.\n         *\n         * @param {animation} animation - The animation object to set for the widget.\n         *\n         * This method sets the animation for the widget. It defines the animation to be used when transitioning or animating the widget's state. The animation object should conform to a specific format, which may include properties like 'duration', 'easing', and others, depending on your implementation.\n         *\n         * @example\n         * const widget = new Widget();\n         * widget.animation = { duration: 500, easing: 'linear', width: [100, 200] }; // Set a custom animation for the widget.\n         */\n        set: function (animation) {\n            // (this.options as any)._animation = animation;\n            (0, Animate_1.animateWidget)(this, animation);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Alias for setting the animation for the widget.\n     *\n     * @param {animation} animation - The animation object to set for the widget.\n     *\n     * This method is an alias for setting the animation for the widget. It provides an alternative way to define the animation. It sets the animation object in the same manner as the `animation` method.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.setAnimation({ duration: 500, easing: 'linear', width: [100, 200] }); // Set a custom animation for the widget using setAnimation.\n     */\n    WidgetProps.prototype.setAnimation = function (animation) {\n        this.animation = animation;\n    };\n    /**\n     * Animates a group of child widgets with a specified animation.\n     *\n     * @param {string} children - A selector to identify child widgets to be animated.\n     * @param {animation} animation - The animation object to apply to the child widgets.\n     *\n     * @returns {Widget} - The parent widget with the animation applied to its child widgets.\n     *\n     * This method animates a group of child widgets with a specified animation. It selects child widgets using the provided selector and applies the animation to them.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.animate('.child-widget', { duration: 500, easing: 'linear' }); // Apply animation to child widgets with the class 'child-widget'.\n     */\n    WidgetProps.prototype.animate = function (children, animation) {\n        (0, Animate_1.animateWidgets)(this.findAll(children), animation);\n        return this;\n    };\n    // State Management\n    /**\n     * Get the state store for the widget.\n     *\n     * @param {string} store - The name of the state store to retrieve. Default is 'state'.\n     *\n     * @returns {Store} - The state store associated with the widget.\n     *\n     * This method retrieves the state store for the widget. You can specify the name of the store to retrieve. The default store is 'state'.\n     *\n     * @example\n     * const widget = new Widget();\n     * const stateStore = widget.getStore('customStore'); // Retrieve a custom state store.\n     */\n    WidgetProps.prototype.getStore = function (store) {\n        if (store === void 0) { store = 'state'; }\n        return this.store.getStore(store);\n    };\n    /**\n     * Set or update the state store with the provided properties.\n     *\n     * @param {Record<string, any>} props - The properties to set or update in the state store.\n     * @param {string} store - The name of the state store to set or update. Default is 'state'.\n     *\n     * This method sets or updates the state store associated with the widget with the provided properties. You can specify the name of the store to set or update. The default store is 'state'.\n     *\n     * @example\n     * const widget = new Widget();\n     * widget.setStore({ count: 10 }, 'customStore'); // Set or update properties in a custom state store.\n     */\n    WidgetProps.prototype.setStore = function (props, store) {\n        if (store === void 0) { store = 'state'; }\n        this.store.setStore(props, store);\n    };\n    WidgetProps.prototype._onMount = function (parent) {\n        if (parent instanceof Widget_1.default) {\n            if (this.options.inheritStore) {\n                this.store.inherit(parent.store);\n            }\n        }\n    };\n    /**\n     * Create a clone of the widget with optional customization.\n     *\n     * @param {Object} selectedOptions - Customization options for the clone.\n     * @param {boolean|\"options\"} selectedOptions.cloneChildren - Indicates whether to clone the children of the widget. If set to \"options,\" the widget's options will be cloned as well.\n     * @param {boolean} selectedOptions.cloneEvents - Indicates whether to clone the events bound to the widget.\n     *\n     * @returns {Widget} - A clone of the widget with the specified customizations.\n     *\n     * This method creates a clone of the widget, allowing for optional customization. You can choose to clone the widget's children and/or events. Use the `cloneChildren` option to specify whether to clone children or options (if set to \"options\"). The `cloneEvents` option allows you to specify whether to clone the events bound to the widget.\n     *\n     * @example\n     * const originalWidget = new Widget();\n     * const clonedWidget = originalWidget.clone({ cloneChildren: true, cloneEvents: false });\n     * // Create a clone of the original widget with children cloned and events not cloned.\n     */\n    WidgetProps.prototype.clone = function (selectedOptions) {\n        if (selectedOptions === void 0) { selectedOptions = {}; }\n        var options = __assign({ cloneChildren: true, cloneEvents: false }, selectedOptions);\n        var el = (0, elman_1.findEl)(this.id);\n        var cloned = el.clone(true, true);\n        var events = {};\n        if (options.cloneEvents) {\n            this.__events__.forEach(function (evt) {\n                events[evt.event] = evt.callback;\n            });\n        }\n        var opts = __assign(__assign(__assign({}, this.options), { children: [] }), options);\n        if (!Array.isArray(opts.children))\n            opts.children = [];\n        var children = options.cloneChildren == 'options' ? this.options.children : this.children();\n        if (children && options.cloneChildren) {\n            opts.children = children\n                .map(function (item) { return item.clone({ cloneChildren: options.cloneChildren, cloneEvents: options.cloneEvents }); })\n                .concat(opts.children);\n        }\n        return new (this.constructor || Widget_1.default)(__assign(__assign({ element: { raw: cloned[0] }, events: events }, opts), { private: this.private }));\n    };\n    WidgetProps.prototype.registerProxy = function (object, callback, set) {\n        if (set === void 0) { set = true; }\n        try {\n            return new Proxy(object, {\n                set: function (target, prop, value) {\n                    if (set)\n                        target[prop] = value;\n                    callback(target, prop, value);\n                    return true;\n                }\n            });\n        }\n        catch (e) {\n            return object;\n        }\n    };\n    WidgetProps.prototype.proxyCloner = function (object, object1) {\n        return this.registerProxy(object, function (target, prop, value) {\n            console.log(object, object1);\n            object1[prop] = value;\n        }, false);\n    };\n    Object.defineProperty(WidgetProps.prototype, \"$id\", {\n        set: function (id) { this._id = id, (0, elman_1.findEl)(this.id).attr({ 'id': id }); },\n        enumerable: false,\n        configurable: true\n    });\n    ;\n    return WidgetProps;\n}());\nvar WidgetList = /** @class */ (function (_super) {\n    __extends(WidgetList, _super);\n    function WidgetList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WidgetList.from = function (array) {\n        return new (WidgetList.bind.apply(WidgetList, __spreadArray([void 0], array, false)))();\n    };\n    WidgetList.prototype.add = function (child, subchild) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.add(child, subchild));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.to = function (child, subchild) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.to(child, subchild));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.remove = function (child, subchild) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.remove(child, subchild));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.is = function (state, is) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.is(state, is));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.attr = function (props) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.attr(props));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.disable = function () {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.disable());\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.enable = function () {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.enable());\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.prop = function (props) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.prop(props));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.addClass = function (classes) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.addClass(classes));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.hasClass = function (classes) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.hasClass(classes));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.removeClass = function (classes) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.removeClass(classes));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.toggleClass = function (classes) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.toggleClass(classes));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.text = function (text) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.text(text));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.height = function (h) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.height(h));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.width = function (w) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.width(w));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.on = function (event, callback) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.on(event, callback));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.off = function (event, callback) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.off(event, callback));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.emit = function (event, data) {\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.emit(event, data));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.hide = function (time) {\n        if (time === void 0) { time = null; }\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.hide(time));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.show = function (time) {\n        if (time === void 0) { time = null; }\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.show(time));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.toggle = function (time) {\n        if (time === void 0) { time = null; }\n        var responses = new WidgetList();\n        this.forEach(function (widget) {\n            if ((0, type_1.isWidget)(widget)) {\n                responses.push(widget.toggle(time));\n            }\n        });\n        return responses;\n    };\n    WidgetList.prototype.animate = function (animation) {\n        var widgets = this.filter(function (widget) { return (0, type_1.isWidget)(widget); });\n        (0, Animate_1.animateWidgets)(widgets, animation);\n        return this;\n    };\n    return WidgetList;\n}(Array));\nexports.WidgetList = WidgetList;\nexports[\"default\"] = WidgetProps;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/_ghost/WidgetProps.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/buttons/Button.ts":
/*!**************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/buttons/Button.ts ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar Text_1 = __importDefault(__webpack_require__(/*! ../main/Text */ \"./node_modules/rayous/client/widgets/main/Text.ts\"));\nvar Link_1 = __importDefault(__webpack_require__(/*! ../main/Link */ \"./node_modules/rayous/client/widgets/main/Link.ts\"));\nvar defaultButton = function (more, link) { return (0, options_1.default)({\n    element: { name: link ? 'a' : 'button' },\n    class: more ? 'button ' + more : 'button',\n    accepts: false,\n}); };\nvar Button = /** @class */ (function (_super) {\n    __extends(Button, _super);\n    function Button(selectedOptions, otheroptions) {\n        if (otheroptions === void 0) { otheroptions = null; }\n        var options = Text_1.default.resolveOptions(selectedOptions, otheroptions, defaultButton(null, (otheroptions === null || otheroptions === void 0 ? void 0 : otheroptions.url) || (selectedOptions === null || selectedOptions === void 0 ? void 0 : selectedOptions.url)));\n        return _super.call(this, options) || this;\n    }\n    return Button;\n}(Link_1.default));\nexports[\"default\"] = Button;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/buttons/Button.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/buttons/Checkbox.ts":
/*!****************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/buttons/Checkbox.ts ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CheckboxController = void 0;\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar Controller_1 = __importDefault(__webpack_require__(/*! ../../data/Controller */ \"./node_modules/rayous/client/data/Controller.ts\"));\nvar defaults = (0, options_1.default)({ element: { name: \"input\" }, class: 'checkbox', attr: { type: 'checkbox' } });\nvar CheckboxController = /** @class */ (function (_super) {\n    __extends(CheckboxController, _super);\n    function CheckboxController(val) {\n        return _super.call(this, val) || this;\n    }\n    return CheckboxController;\n}(Controller_1.default));\nexports.CheckboxController = CheckboxController;\n;\nvar Checkbox = /** @class */ (function (_super) {\n    __extends(Checkbox, _super);\n    function Checkbox(selectedOptions) {\n        var _this = this;\n        var options = __assign(__assign({}, defaults), selectedOptions);\n        _this = _super.call(this, options) || this;\n        if (options.controller) {\n            _this.setController(options.controller);\n        }\n        if (options.checked) {\n            _this.setChecked(true);\n        }\n        return _this;\n    }\n    Checkbox.prototype.isChecked = function () {\n        return (0, elman_1.findEl)(this.id).at(0).checked;\n    };\n    Checkbox.prototype.setChecked = function (checked) {\n        (0, elman_1.findEl)(this.id).at(0).checked = checked;\n        return this;\n    };\n    Checkbox.prototype.setController = function (controller) {\n        var _this = this;\n        if (this.__controller)\n            throw new Error('Checkbox already has a controller.');\n        if (controller instanceof CheckboxController) {\n            var change_1 = function (v) { return _this.isChecked() !== v ? _this.setChecked(v) : []; };\n            this.on('change', function () {\n                controller.set(_this.isChecked(), change_1);\n            });\n            controller.onChange(change_1);\n            this.__controller = controller;\n            this.setChecked(controller.get());\n        }\n    };\n    return Checkbox;\n}(Widget_1.default));\nexports[\"default\"] = Checkbox;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/buttons/Checkbox.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/buttons/Radio.ts":
/*!*************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/buttons/Radio.ts ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar Checkbox_1 = __importDefault(__webpack_require__(/*! ./Checkbox */ \"./node_modules/rayous/client/widgets/buttons/Checkbox.ts\"));\nvar defaults = (0, options_1.default)({ element: { name: \"input\" }, class: 'radio', attr: { type: 'radio' } });\nvar Radio = /** @class */ (function (_super) {\n    __extends(Radio, _super);\n    function Radio(options) {\n        return _super.call(this, __assign(__assign({}, defaults), options)) || this;\n    }\n    return Radio;\n}(Checkbox_1.default));\nexports[\"default\"] = Radio;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/buttons/Radio.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/canvas/Canvas.ts":
/*!*************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/canvas/Canvas.ts ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas(selectedOptions) {\n        return _super.call(this, __assign(__assign({}, ((0, options_1.default)({ element: { name: 'canvas' }, class: 'canas' }))), selectedOptions)) || this;\n    }\n    Canvas.prototype.getContext = function (dimensions) {\n        return (0, elman_1.findEl)(this.id)[0].getContext(dimensions);\n    };\n    return Canvas;\n}(Widget_1.default));\nexports[\"default\"] = Canvas;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/canvas/Canvas.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/containers/Container.ts":
/*!********************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/containers/Container.ts ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container(selectedOptions) {\n        return _super.call(this, __assign(__assign({}, ((0, options_1.default)({ element: { name: 'div' }, class: 'block' }))), selectedOptions)) || this;\n    }\n    return Container;\n}(Widget_1.default));\nexports[\"default\"] = Container;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/containers/Container.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/containers/DirectedContainer.ts":
/*!****************************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/containers/DirectedContainer.ts ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Center = exports.Row = exports.Column = void 0;\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar DirectedWidget = /** @class */ (function (_super) {\n    __extends(DirectedWidget, _super);\n    function DirectedWidget(selectedOptions, type) {\n        var _this = this;\n        var options = __assign(__assign(__assign({}, ((0, options_1.default)({\n            element: { name: 'div' },\n            style: {\n                display: 'flex',\n                flexWrap: 'nowrap',\n                flexDirection: type\n            },\n        }))), selectedOptions), { _setters: ['gap', 'crossAxisAlignment', 'mainAxisAlignment', 'wrap'] });\n        _this = _super.call(this, options) || this;\n        if (options.height) {\n            _this.height(options.height);\n        }\n        if (options.width) {\n            _this.width(options.width);\n        }\n        return _this;\n    }\n    Object.defineProperty(DirectedWidget.prototype, \"crossAxisAlignment\", {\n        set: function (value) {\n            (0, elman_1.findEl)(this.id).css({ \"align-items\": value });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DirectedWidget.prototype, \"mainAxisAlignment\", {\n        set: function (value) {\n            (0, elman_1.findEl)(this.id).css({ \"justify-content\": value });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DirectedWidget.prototype, \"gap\", {\n        set: function (value) {\n            (0, elman_1.findEl)(this.id).css({ \"gap\": value });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DirectedWidget.prototype, \"wrap\", {\n        set: function (value) {\n            (0, elman_1.findEl)(this.id).css({ \"flex-wrap\": value === true ? 'wrap' : value });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return DirectedWidget;\n}(Widget_1.default));\nvar Column = /** @class */ (function (_super) {\n    __extends(Column, _super);\n    function Column(selectedOptions) {\n        return _super.call(this, selectedOptions, 'column') || this;\n    }\n    return Column;\n}(DirectedWidget));\nexports.Column = Column;\nvar Row = /** @class */ (function (_super) {\n    __extends(Row, _super);\n    function Row(selectedOptions) {\n        return _super.call(this, selectedOptions, 'row') || this;\n    }\n    return Row;\n}(DirectedWidget));\nexports.Row = Row;\nvar Center = /** @class */ (function (_super) {\n    __extends(Center, _super);\n    function Center(selectedOptions) {\n        return _super.call(this, __assign({ crossAxisAlignment: 'center', mainAxisAlignment: 'center' }, selectedOptions), 'center') || this;\n    }\n    return Center;\n}(DirectedWidget));\nexports.Center = Center;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/containers/DirectedContainer.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/containers/Grid.ts":
/*!***************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/containers/Grid.ts ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar ListBuilder_1 = __importDefault(__webpack_require__(/*! ../list/ListBuilder */ \"./node_modules/rayous/client/widgets/list/ListBuilder.ts\"));\n// @ts-ignore\nvar macy_1 = __importDefault(__webpack_require__(/*! macy */ \"./node_modules/macy/dist/macy.js\"));\nvar defaultGrid = function () { return (0, options_1.default)({\n    element: { name: 'div', html: \"<div class=\\\"grid-wrapper\\\"></div>\" },\n    class: 'macy',\n    itemsStateName: '$items_grid',\n    template: function () { return new Widget_1.default(); },\n    items: [],\n    empty: true,\n    grid: {\n        trueOrder: false,\n        waitForImages: false,\n        useOwnImageLoader: false,\n        mobileFirst: true,\n        columns: 2,\n        margin: {\n            y: 16,\n            x: '1%',\n        },\n    }\n}); };\nfunction _initGrid(list, state) {\n    var _a;\n    if (state[list.options.itemsStateName] && Array.isArray(state[list.options.itemsStateName])) {\n        if (list.options.empty !== false)\n            list.empty();\n        state[list.options.itemsStateName].forEach(function (item, index) {\n            list.appendItem(item, index);\n        });\n        (_a = (0, elman_1.findEl)(list.id + '-grid')) === null || _a === void 0 ? void 0 : _a.reInit();\n    }\n}\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    function Grid(selectedOptions) {\n        var _this = this;\n        var options = __assign(__assign({}, defaultGrid()), selectedOptions);\n        _this = _super.call(this, options, _initGrid) || this;\n        if (options.grid) {\n            var macy = (0, macy_1.default)(__assign({ container: (0, elman_1.findEl)(_this.id).at(0) }, options.grid));\n            (0, elman_1.registerElement)(macy, _this.id + '-grid');\n        }\n        if (options.gridClass)\n            (0, elman_1.findEl)(_this.id).addClass(options.gridClass);\n        return _this;\n    }\n    Grid.prototype.gridClass = function (gridClass, gridReplacer) {\n        var _a;\n        var r = (gridReplacer ? gridReplacer + '-' : '') + 'grid-cols-([0-9]+)';\n        if (gridClass) {\n            (0, elman_1.findEl)(this.id).attr({\n                class: (0, elman_1.findEl)(this.id)\n                    .attr('class')\n                    .replace(new RegExp(r, 'g'), '') + ' ' + gridClass\n            });\n        }\n        return !gridClass ? (_a = (0, elman_1.findEl)(this.id).attr('class').match(new RegExp(r))) === null || _a === void 0 ? void 0 : _a[1] : this;\n    };\n    Grid.prototype._onUpdate = function (options) {\n        if (options.grid && (0, elman_1.findEl)(this.id + '-grid')) {\n            (0, elman_1.findEl)(this.id + '-grid').reInit();\n        }\n    };\n    Grid.prototype.appendItem = function (item, index) {\n        return this.add(this._fromTemplate(item, index));\n    };\n    Grid.prototype.onItems = function (event, handler) {\n        return this.onItems(event, handler);\n    };\n    Grid.prototype.empty = function () {\n        (0, elman_1.findEl)(this.id).empty();\n        return this;\n    };\n    return Grid;\n}(ListBuilder_1.default));\nexports[\"default\"] = Grid;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/containers/Grid.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/entry/InputWrapper.ts":
/*!******************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/entry/InputWrapper.ts ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EntryController = void 0;\nvar Controller_1 = __importDefault(__webpack_require__(/*! ../../data/Controller */ \"./node_modules/rayous/client/data/Controller.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar EntryController = /** @class */ (function (_super) {\n    __extends(EntryController, _super);\n    function EntryController(val) {\n        return _super.call(this, val) || this;\n    }\n    return EntryController;\n}(Controller_1.default));\nexports.EntryController = EntryController;\n;\nvar InputWrapper = /** @class */ (function (_super) {\n    __extends(InputWrapper, _super);\n    function InputWrapper(selectedOptions) {\n        var _this = this;\n        var options = __assign(__assign({}, ({ element: { name: selectedOptions.inputType == 'textarea' ? 'textarea' : 'input' }, attr: { type: 'text' }, class: \"input-wrapper\", _setters: ['inputType', 'title'] })), selectedOptions);\n        _this = _super.call(this, options) || this;\n        if (options.controller) {\n            _this.setController(options.controller);\n        }\n        if (options.required) {\n            (0, elman_1.findEl)(_this.id).attr({ required: true });\n        }\n        return _this;\n    }\n    InputWrapper.prototype.setController = function (controller) {\n        var _this = this;\n        if (this.__controller)\n            throw new Error('Input already is married to a controller.');\n        if (controller instanceof EntryController) {\n            var change_1 = function (v) { return _this.val() !== v ? _this.val(v) : []; };\n            this.on('textinput', function () {\n                controller.set(_this.val(), change_1);\n            });\n            controller.onChange(change_1);\n            this.__controller = controller;\n            this.val(controller.get());\n        }\n    };\n    InputWrapper.prototype.val = function (value) {\n        if (value === void 0) { value = null; }\n        if (value)\n            (0, elman_1.findEl)(this.id).at(0).value = value;\n        return (0, elman_1.findEl)(this.id).at(0).value;\n    };\n    Object.defineProperty(InputWrapper.prototype, \"inputType\", {\n        set: function (type) {\n            var _this = this;\n            if (type instanceof Controller_1.default)\n                type.onChange(function (change) {\n                    _this.inputType = change;\n                });\n            (0, elman_1.findEl)(this.id).attr({ 'type': type instanceof Controller_1.default ? type.get() : type.toString() });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputWrapper.prototype, \"title\", {\n        set: function (text) {\n            var _this = this;\n            if (text instanceof Controller_1.default)\n                text.onChange(function (change) {\n                    _this.title = change;\n                });\n            (0, elman_1.findEl)(this.id).attr({ 'placeholder': text instanceof Controller_1.default ? text.get() : text.toString() });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    InputWrapper.textArea = function (selectedOptions) {\n        return new InputWrapper(__assign(__assign({}, selectedOptions), { element: { name: 'textarea' } }));\n    };\n    return InputWrapper;\n}(Widget_1.default));\nexports[\"default\"] = InputWrapper;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/entry/InputWrapper.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/entry/SelectBox.ts":
/*!***************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/entry/SelectBox.ts ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SelectableOption = exports.SelectController = void 0;\nvar Controller_1 = __importDefault(__webpack_require__(/*! ../../data/Controller */ \"./node_modules/rayous/client/data/Controller.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar SelectController = /** @class */ (function (_super) {\n    __extends(SelectController, _super);\n    function SelectController(val) {\n        return _super.call(this, val) || this;\n    }\n    return SelectController;\n}(Controller_1.default));\nexports.SelectController = SelectController;\n;\nvar SelectableOption = /** @class */ (function (_super) {\n    __extends(SelectableOption, _super);\n    function SelectableOption(options) {\n        return _super.call(this, __assign({ element: { name: 'option' }, class: '', _setters: ['value', 'title', 'selected', 'disabled'] }, options)) || this;\n    }\n    Object.defineProperty(SelectableOption.prototype, \"selected\", {\n        set: function (value) {\n            (0, elman_1.findEl)(this.id).attr({ selected: value });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SelectableOption.prototype, \"disabled\", {\n        set: function (value) {\n            (0, elman_1.findEl)(this.id).attr({ disabled: value });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SelectableOption.prototype, \"value\", {\n        get: function () {\n            return this.options.value;\n        },\n        set: function (value) {\n            (0, elman_1.findEl)(this.id).attr({ value: value });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SelectableOption.prototype, \"title\", {\n        set: function (title) {\n            this.remove('*');\n            if (title instanceof Widget_1.default) {\n                this.add(title);\n            }\n            else {\n                title != null ? this.text(title.toString()) : null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return SelectableOption;\n}(Widget_1.default));\nexports.SelectableOption = SelectableOption;\nvar Selectbox = /** @class */ (function (_super) {\n    __extends(Selectbox, _super);\n    function Selectbox(selectedOptions) {\n        var _this = this;\n        var options = __assign(__assign({}, ({ element: { name: 'select' }, class: \"selectbox-wrapper\", _setters: ['selectableOptions', 'multiple'] })), selectedOptions);\n        _this = _super.call(this, options) || this;\n        if (options.controller) {\n            _this.setController(options.controller);\n        }\n        return _this;\n    }\n    Selectbox.prototype.setController = function (controller) {\n        var _this = this;\n        if (this.__controller)\n            throw new Error('Input already is married to a controller.');\n        if (controller instanceof SelectController) {\n            var change_1 = function (v) { return _this.val() !== v ? _this.val(v) : []; };\n            this.on('change', function () {\n                controller.set(_this.val(), change_1);\n            });\n            controller.onChange(change_1);\n            this.__controller = controller;\n            this.val(controller.get());\n        }\n    };\n    Object.defineProperty(Selectbox.prototype, \"multiple\", {\n        set: function (value) {\n            (0, elman_1.findEl)(this.id).attr({ multiple: value });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Selectbox.prototype, \"selectableOptions\", {\n        set: function (options) {\n            this.remove('*');\n            var widgetedOptions = options.map(function (item) {\n                if (item instanceof SelectableOption) {\n                    return item;\n                }\n                else {\n                    return new SelectableOption(item);\n                }\n            });\n            this.addAll.apply(this, widgetedOptions);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Selectbox.prototype.val = function (value) {\n        if (value === void 0) { value = null; }\n        if (value && typeof value == \"object\")\n            value = value.value;\n        if (value)\n            (0, elman_1.findEl)(this.id).at(0).value = value;\n        return (0, elman_1.findEl)(this.id).at(0).value;\n    };\n    return Selectbox;\n}(Widget_1.default));\nexports[\"default\"] = Selectbox;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/entry/SelectBox.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/layout/LayoutBuilder.ts":
/*!********************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/layout/LayoutBuilder.ts ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n;\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nfunction checkQuery(w, h, pw, ph, vw, vh, query) {\n    var cases = [];\n    if (query.match(/\\|\\||&&/)) {\n        cases.push.apply(cases, (query.split(/\\|\\||&&/).map(function (c) { return ({ case: c, true: false }); })));\n    }\n    else {\n        cases.push({ case: query, true: false });\n    }\n    if (!w || !h || !pw || !ph || !vw || !vh) { }\n    var overallResult = true;\n    cases.forEach(function (c) {\n        var query = c.case.trim();\n        var match = query.match(/(w|h|pw|ph|vw|vh)(\\s+|)(==|!=|>|<|>=|<=)(\\s+|)([0-9]+)/);\n        if (match) {\n            overallResult = overallResult && eval(\"var w = \".concat(w, \", h = \").concat(h, \", pw = \").concat(pw, \", ph = \").concat(ph, \", vw = \").concat(vw, \", vh = \").concat(vh, \";\\n\") + query);\n        }\n        else {\n            throw new Error(\"Invalid LayoutBuilder query: \".concat(query));\n        }\n    });\n    return overallResult;\n}\nvar handleResize = function (widget, options) {\n    if (widget.handlingResize)\n        return;\n    widget.handlingResize = true;\n    var parentWidth = widget.parent().width();\n    var parentHeight = widget.parent().height();\n    widget.emit('resize', { width: widget.width(), height: widget.height(), viewportWidth: window.innerWidth, viewportHeight: window.innerHeight });\n    if (options.queries) {\n        var prevChildren = Array.from(widget.children()).map(function (child) { return (0, elman_1.findEl)(child.id); });\n        prevChildren.forEach(function (child) { return child.remove(); });\n        var matchedQuery = Object.entries(options.queries).find(function (_a) {\n            var query = _a[0], builderFn = _a[1];\n            return checkQuery(widget.width(), widget.height(), parentWidth, parentHeight, window.innerWidth, window.innerHeight, query);\n        });\n        if (matchedQuery) {\n            var query = matchedQuery[0], builderFn = matchedQuery[1];\n            var newChildren = typeof builderFn == \"function\" ? builderFn(prevChildren.map(function (child) { return child.GUIWIDGET; })) : builderFn;\n            if (newChildren instanceof Widget_1.default) {\n                widget.add(newChildren);\n            }\n            else if (Array.isArray(newChildren)) {\n                newChildren.forEach(function (child) { return widget.add(child); });\n            }\n        }\n    }\n    widget.emit('layout:rebuild', { width: widget.width(), height: widget.height(), viewportWidth: window.innerWidth, viewportHeight: window.innerHeight });\n    delete widget.handlingResize;\n};\nvar LayoutBuilder = /** @class */ (function (_super) {\n    __extends(LayoutBuilder, _super);\n    function LayoutBuilder(selectedOptions) {\n        var options = __assign(__assign({}, ((0, options_1.default)({ element: { name: 'div' }, class: 'layout-builder' }))), selectedOptions);\n        return _super.call(this, options) || this;\n    }\n    LayoutBuilder.prototype._onMount = function (parent) {\n        var _this = this;\n        _super.prototype._onMount.call(this, parent);\n        window.addEventListener('resize', function () { return handleResize(_this, _this.options); });\n        handleResize(this, this.options);\n    };\n    return LayoutBuilder;\n}(Widget_1.default));\nexports[\"default\"] = LayoutBuilder;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/layout/LayoutBuilder.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/list/List.ts":
/*!*********************************************************!*\
  !*** ./node_modules/rayous/client/widgets/list/List.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ListItem = void 0;\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar ListBuilder_1 = __importDefault(__webpack_require__(/*! ./ListBuilder */ \"./node_modules/rayous/client/widgets/list/ListBuilder.ts\"));\nvar Text_1 = __importDefault(__webpack_require__(/*! ../main/Text */ \"./node_modules/rayous/client/widgets/main/Text.ts\"));\nvar defaultList = function () { return (0, options_1.default)({\n    element: { name: 'ul' },\n    items: [],\n    itemsStateName: '$items_list',\n    empty: true,\n    template: function (item) { return new ListItem(item); },\n}); };\nvar defaultListItem = function () { return (0, options_1.default)({\n    element: { name: 'li' },\n    title: new Text_1.default(''),\n    link: false,\n    _setters: ['url']\n}); };\nfunction _initList(list, state) {\n    if (state[list.options.itemsStateName] && Array.isArray(state[list.options.itemsStateName])) {\n        if (list.options.empty !== false)\n            list.empty();\n        state[list.options.itemsStateName].forEach(function (item, index) {\n            list.appendItem(item, index);\n        });\n    }\n}\nvar ListItem = /** @class */ (function (_super) {\n    __extends(ListItem, _super);\n    function ListItem(selectedOptions) {\n        var _this = this;\n        var options = __assign(__assign({}, defaultListItem()), selectedOptions);\n        var title = options.title, link = options.link;\n        if (link === true)\n            options.element.name = 'a';\n        _this = _super.call(this, options) || this;\n        if (title instanceof Widget_1.default)\n            _this.add(title);\n        else if (title != null)\n            _this.add(new Text_1.default(title));\n        return _this;\n    }\n    Object.defineProperty(ListItem.prototype, \"url\", {\n        set: function (link) {\n            (0, elman_1.findEl)(this.id).attr('href', link);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ListItem;\n}(Widget_1.default));\nexports.ListItem = ListItem;\nvar List = /** @class */ (function (_super) {\n    __extends(List, _super);\n    function List(selectedOptions) {\n        var options = __assign(__assign({}, defaultList()), selectedOptions);\n        return _super.call(this, options, _initList) || this;\n    }\n    List.prototype.appendItem = function (item, index) {\n        return this.add(this._fromTemplate(item, index));\n    };\n    List.prototype.onItems = function (event, handler) {\n        return this.onItems(event, handler);\n    };\n    List.prototype.empty = function () {\n        (0, elman_1.findEl)(this.id).empty();\n        return this;\n    };\n    return List;\n}(ListBuilder_1.default));\nexports[\"default\"] = List;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/list/List.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/list/ListBuilder.ts":
/*!****************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/list/ListBuilder.ts ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar Store_1 = __importDefault(__webpack_require__(/*! ../../data/Store */ \"./node_modules/rayous/client/data/Store.ts\"));\nvar Controller_1 = __importDefault(__webpack_require__(/*! ../../data/Controller */ \"./node_modules/rayous/client/data/Controller.ts\"));\nvar ListBuilder = /** @class */ (function (_super) {\n    __extends(ListBuilder, _super);\n    function ListBuilder(selectedOptions, _initList) {\n        var _this = this;\n        var options = __assign({}, selectedOptions);\n        _this = _super.call(this, options) || this;\n        _this.state = new Store_1.default({ items: [] });\n        _this.updateList(options);\n        _initList(_this, _this.getStore());\n        _this.on('state:change', function (e) {\n            _initList(_this, _this.getStore());\n        });\n        return _this;\n    }\n    ListBuilder.prototype._fromTemplate = function (item, index) {\n        if (!index)\n            index = this.getStore()[this.options.itemsStateName].length || 0;\n        var widget = this.options.template.call(this, item, index);\n        if (!(widget instanceof Widget_1.default))\n            throw new Error(\"ListBuilder requires for a widget as a template\");\n        return widget;\n    };\n    ListBuilder.prototype.updateList = function (newOptions) {\n        var _this = this;\n        var _a, _b;\n        if (Array.isArray(newOptions)) {\n            newOptions = { items: newOptions };\n        }\n        var options = __assign(__assign({}, this.options), newOptions);\n        if (options.items) {\n            var doItems_1 = function () {\n                var _a, _b;\n                if (options.items instanceof Controller_1.default) {\n                    if (!options.items.isTakenBy(_this)) {\n                        _this.setStore((_a = {}, _a[options.itemsStateName] = options.items.get(), _a));\n                        options.items.take(_this);\n                        options.items.onChange(function () {\n                            var _a;\n                            _this.setStore((_a = {}, _a[options.itemsStateName] = options.items.get(), _a));\n                        });\n                    }\n                }\n                else {\n                    _this.setStore((_b = {}, _b[options.itemsStateName] = options.items, _b));\n                }\n            };\n            if (options.items instanceof Promise) {\n                options.items.then(function (items) {\n                    options.items = items;\n                    doItems_1();\n                });\n            }\n            else {\n                doItems_1();\n            }\n        }\n        if (options.loader) {\n            _super.prototype.add.call(this, options.loader);\n        }\n        if (options.loading) {\n            (_a = options.loader) === null || _a === void 0 ? void 0 : _a.show();\n        }\n        else {\n            (_b = options.loader) === null || _b === void 0 ? void 0 : _b.hide();\n        }\n        if (typeof this._onUpdate == \"function\") {\n            this._onUpdate(options);\n        }\n        return this;\n    };\n    ListBuilder.prototype._onUpdate = function (any) { };\n    ListBuilder.prototype.addItem = function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        this.setStore({ items: __spreadArray([], items, true).concat(this.getStore()[this.options.itemsStateName]) });\n        return this;\n    };\n    ListBuilder.prototype.removeItems = function () {\n        var itemsToRemove = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            itemsToRemove[_i] = arguments[_i];\n        }\n        var currentItems = this.getStore()[this.options.itemsStateName];\n        var remain = currentItems.filter(function (item, index) {\n            var shouldRemove = false;\n            itemsToRemove.forEach(function (it) {\n                if (index == it.index) {\n                    shouldRemove = true;\n                    return;\n                }\n                var allPropertiesMatch = Object.keys(it).every(function (prop) { return item[prop] === it[prop]; });\n                if (allPropertiesMatch) {\n                    shouldRemove = true;\n                    return;\n                }\n            });\n            return !shouldRemove;\n        });\n        this.setStore({ items: remain });\n        return this;\n    };\n    ListBuilder.prototype.onItems = function (event, handler, subchild) {\n        this.children(subchild).forEach(function (child, index) {\n            child.on(event, function (e) {\n                handler(e, { child: child, index: index });\n            });\n        });\n        return this;\n    };\n    ListBuilder.prototype.empty = function () {\n        (0, elman_1.findEl)(this.id).empty();\n        return this;\n    };\n    return ListBuilder;\n}(Widget_1.default));\nexports[\"default\"] = ListBuilder;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/list/ListBuilder.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/list/Table.ts":
/*!**********************************************************!*\
  !*** ./node_modules/rayous/client/widgets/list/Table.ts ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Table = exports.TableRow = exports.TableController = void 0;\nvar Controller_1 = __importStar(__webpack_require__(/*! ../../data/Controller */ \"./node_modules/rayous/client/data/Controller.ts\"));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar ListBuilder_1 = __importDefault(__webpack_require__(/*! ./ListBuilder */ \"./node_modules/rayous/client/widgets/list/ListBuilder.ts\"));\nvar TableController = /** @class */ (function (_super) {\n    __extends(TableController, _super);\n    function TableController(_a) {\n        var _b = _a === void 0 ? { columns: [], items: [] } : _a, columns = _b.columns, items = _b.items;\n        var _this = _super.call(this, items) || this;\n        _this.items = [];\n        _this.columns = new Controller_1.ArrayController(columns);\n        return _this;\n    }\n    TableController.prototype.setColumns = function (columns) {\n        this.columns.set(columns);\n        return this;\n    };\n    TableController.prototype.addColumn = function (columns) {\n        this.columns.push(columns);\n        return this;\n    };\n    TableController.prototype.get = function () {\n        return this.transformItems(_super.prototype.get.call(this));\n    };\n    TableController.prototype.transformItems = function (items) {\n        var _this = this;\n        return items.map(function (item) { return _this.transformItem(item); });\n    };\n    TableController.prototype.transformItem = function (item) {\n        var transformedItem = this.columns.get().map(function (column) {\n            return item[column] !== undefined ? item[column] : null;\n        });\n        transformedItem.original = item;\n        return transformedItem;\n    };\n    return TableController;\n}(Controller_1.ArrayController));\nexports.TableController = TableController;\nvar defaultGrid = function () { return ({\n    element: { name: 'table' },\n    class: 'table',\n    itemsStateName: '$items_table',\n    template: function (item) { return new TableRow({ values: item, originalItem: item.original }); },\n    columns: [],\n    items: [],\n    empty: true\n}); };\nfunction _initTableColumns(table, columns) {\n    if (table.options.empty !== false)\n        table.find('thead').remove('*');\n    var tr = new Widget_1.default({ element: { name: 'tr' } });\n    columns.forEach(function (column) {\n        var widget = new Widget_1.default({ element: { name: 'th' } });\n        if (typeof column == 'string') {\n            widget.text(column);\n        }\n        else if (column instanceof Widget_1.default) {\n            widget.add(column);\n        }\n        tr.add(widget);\n    });\n    table.find('thead').add(tr);\n}\nfunction _initTable(table, state) {\n    if (state[table.options.itemsStateName] && Array.isArray(state[table.options.itemsStateName])) {\n        if (table.options.empty !== false)\n            table.find('tbody').remove('*');\n        state[table.options.itemsStateName].forEach(function (item, index) {\n            table.appendItem(item, index);\n        });\n    }\n    var columnsKey = table.options.itemsStateName + '_columns';\n    var columns = state[columnsKey];\n    function updateColumns(newColumns) {\n        var _a;\n        table.setStore((_a = {}, _a[columnsKey] = newColumns, _a));\n        _initTableColumns(table, newColumns);\n    }\n    if (!columns && table.options.columns) {\n        columns = table.options.columns;\n        if (columns instanceof TableController || columns instanceof Controller_1.default) {\n            var columnsToWatch_1 = columns instanceof TableController ? columns.columns : columns;\n            if (!columnsToWatch_1.isTakenBy(table)) {\n                columnsToWatch_1.take(table);\n                columnsToWatch_1.onChange(function () { return updateColumns(columnsToWatch_1.get()); });\n                updateColumns(columnsToWatch_1.get());\n            }\n        }\n        else {\n            updateColumns(columns);\n        }\n    }\n}\nfunction _initTableRow(row, options) {\n    if (options.values) {\n        options.values.forEach(function (col) {\n            if (!col)\n                return;\n            if (typeof col == \"function\")\n                col = col(options.originalItem, options.values);\n            var widget = new Widget_1.default({ element: { name: !(col instanceof Widget_1.default) && typeof col == 'object' && col.type ? col.type : 'td' } });\n            if (!(col instanceof Widget_1.default) && col !== null && typeof col == 'object' && col.value) {\n                col = col.value;\n            }\n            if (typeof col == 'string') {\n                widget.text(col);\n            }\n            else if (col instanceof Widget_1.default) {\n                widget.add(col);\n            }\n            row.add(widget);\n        });\n    }\n}\nvar TableRow = /** @class */ (function (_super) {\n    __extends(TableRow, _super);\n    function TableRow(options) {\n        var _this = _super.call(this, __assign({ element: { name: 'tr' } }, options)) || this;\n        _initTableRow(_this, options);\n        return _this;\n    }\n    TableRow.prototype._optionChange = function (options) {\n        _initTableRow(this, options);\n    };\n    return TableRow;\n}(Widget_1.default));\nexports.TableRow = TableRow;\nvar Table = /** @class */ (function (_super) {\n    __extends(Table, _super);\n    function Table(selectedOptions) {\n        var _a;\n        var _this = this;\n        var children = [new Widget_1.default({ element: { name: 'thead' } }), new Widget_1.default({ element: { name: 'tbody' } })];\n        if (Array.isArray(selectedOptions.children))\n            (_a = selectedOptions.children).unshift.apply(_a, children);\n        var options = __assign(__assign(__assign({}, defaultGrid()), { children: children }), selectedOptions);\n        if (options.controller) {\n            options.items = options.controller;\n            options.columns = options.controller;\n        }\n        _this = _super.call(this, options, _initTable) || this;\n        if (options.controller)\n            _this.controller = options.controller;\n        return _this;\n    }\n    Table.prototype.appendItem = function (item, index) {\n        return this.find('tbody').add(this._fromTemplate(item, index));\n    };\n    Table.prototype.onItems = function (event, handler) {\n        return this.onItems(event, handler);\n    };\n    return Table;\n}(ListBuilder_1.default));\nexports.Table = Table;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/list/Table.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/main/Component.ts":
/*!**************************************************************!*\
  !*** ./node_modules/rayous/client/widgets/main/Component.ts ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Ref = exports.ComponentStyles = exports.asyncComponent = exports.onComponent = exports.typeref = exports.ref = exports.buildComponent = exports.componentEvents = exports.makeComponent = exports.components = void 0;\nvar extra_1 = __webpack_require__(/*! ../../extra */ \"./node_modules/rayous/client/extra.ts\");\nvar eventtarget_1 = __webpack_require__(/*! ../../utils/eventtarget */ \"./node_modules/rayous/client/utils/eventtarget.ts\");\nvar id_1 = __importDefault(__webpack_require__(/*! ../../utils/id */ \"./node_modules/rayous/client/utils/id.ts\"));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ./Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nexports.components = [];\nfunction findComponent(component) {\n    return exports.components.find(function (c) { return c.component == component; });\n}\nfunction makeComponent(component, props, event) {\n    if (event === void 0) { event = true; }\n    var args = Array.isArray(props.args) ? props.args : [];\n    if (event)\n        component.emit('beforeBuildStart', { component: component, props: props });\n    // @ts-ignore\n    var widget = component.build.apply(component, __spreadArray([props], args, false));\n    if (event)\n        component.emit('afterBuild', { component: component, props: props });\n    if (!(widget instanceof Widget_1.default))\n        throw new TypeError('Component.build does not return a widget.');\n    component._currentWidget = widget;\n    component._buildProps = props;\n    return widget;\n}\nexports.makeComponent = makeComponent;\nvar componentEvents;\n(function (componentEvents) {\n    componentEvents[\"onBeforeInit\"] = \"beforeInit\";\n    componentEvents[\"onInitState\"] = \"initState\";\n    componentEvents[\"onBuildStart\"] = \"buildStart\";\n    componentEvents[\"onBuildEnd\"] = \"buildEnd\";\n    componentEvents[\"onRebuild\"] = \"rebuild\";\n})(componentEvents || (exports.componentEvents = componentEvents = {}));\nfunction getEventKeyByName(value) {\n    for (var key in componentEvents) {\n        if (componentEvents[key] === value) {\n            return key;\n        }\n    }\n    return undefined;\n}\nfunction buildComponent(component, props, from) {\n    if (from === void 0) { from = null; }\n    var _comp = new component(props);\n    _comp._beforeInit();\n    if (component.inheritState !== false && from)\n        _comp._inheritState(from);\n    _comp.emit('beforeInit', { component: component, props: props });\n    _comp.initState(props);\n    _comp.emit('initState', { component: component, props: props });\n    var widget = _comp.make(props);\n    _comp.emit('buildStart', { component: component, props: props, widget: widget });\n    widget.component = _comp;\n    _comp.afterBuild(__assign(__assign({}, props), { page: widget }));\n    _comp.emit('buildEnd', { component: component, props: props, widget: widget });\n    return widget;\n}\nexports.buildComponent = buildComponent;\n/**\n * A class decorator to define references before class initiation.\n */\nfunction ref(target, propertyKey) {\n    var key = \"\";\n    if (typeof propertyKey == \"object\")\n        key = propertyKey.name;\n    else\n        key = propertyKey;\n    Object.defineProperty(target, key, {\n        get: function () {\n            return this._data[key];\n        },\n        set: function (newValue) {\n            this._data[key] = newValue;\n            this.update();\n        }\n    });\n}\nexports.ref = ref;\nfunction typeref(type) {\n    return function (target, propertyKey) {\n        var key = \"\";\n        if (typeof propertyKey == \"object\")\n            key = propertyKey.name;\n        else\n            key = propertyKey;\n        Object.defineProperty(target, key, {\n            get: function () {\n                return this._data[key];\n            },\n            set: function (newValue) {\n                var _this = this;\n                var s = function () {\n                    _this._data[key] = newValue;\n                    _this.update();\n                };\n                if (type == \"array\" && Array.isArray(newValue)) {\n                    s();\n                }\n                else if (typeof newValue == type) {\n                    s();\n                }\n                else if (type == \"null\" && typeof newValue == \"undefined\") {\n                    s();\n                }\n                else {\n                    throw new TypeError(newValue + ' is not of type ' + type);\n                }\n            }\n        });\n    };\n}\nexports.typeref = typeref;\n/**\n * An event decorator to listen to class events before class initiaition.\n */\nfunction onComponent(target, propertyKey) {\n    var key = \"\";\n    if (typeof propertyKey == \"object\")\n        key = propertyKey.name;\n    else\n        key = propertyKey;\n    var eventKey = getEventKeyByName(key);\n    if (eventKey && !target.events) {\n        var prev_1 = target.afterConstruct;\n        var afterConstruct = function () {\n            // @ts-ignore\n            var that = this;\n            that.on(key, target[key]);\n            if (typeof prev_1 == \"function\")\n                prev_1.call(that);\n        };\n        target.afterConstruct = afterConstruct;\n    }\n}\nexports.onComponent = onComponent;\nfunction asyncComponent(options) {\n    return function (constructor, extended) {\n        constructor.prototype.buildAsync = constructor.prototype.build;\n        constructor.prototype.build = function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var mainWidget = new Widget_1.default({\n                children: [((_a = options === null || options === void 0 ? void 0 : options.loading) === null || _a === void 0 ? void 0 : _a.call(options)) || null]\n            });\n            this.buildAsync.apply(this, args).then(function (widget) {\n                var parent = mainWidget.parent(true);\n                if (!parent)\n                    mainWidget.remove('*');\n                widget.to(parent || mainWidget);\n                if (parent)\n                    mainWidget.remove();\n            });\n            return mainWidget;\n        };\n    };\n}\nexports.asyncComponent = asyncComponent;\nvar ComponentStyles = /** @class */ (function () {\n    function ComponentStyles(styles) {\n        this.styles = {};\n        this.id = (0, id_1.default)(6);\n        for (var i in styles) {\n            this.set(i, styles[i]);\n        }\n    }\n    ComponentStyles.prototype.set = function (name, styles) {\n        var n = this.id + '_' + name;\n        this.styles[n] = new extra_1.Style(n, styles);\n        return this;\n    };\n    ComponentStyles.prototype.get = function (name) {\n        var n = this.id + '_' + name;\n        return this.styles[n];\n    };\n    ComponentStyles.prototype.remove = function (name) {\n        var n = this.id + '_' + name;\n        delete this.styles[n];\n        return this;\n    };\n    ComponentStyles.prototype.change = function (name, styles) {\n        var n = this.id + '_' + name;\n        for (var i in styles) {\n            this.styles[n][i] = styles[i];\n        }\n        return this;\n    };\n    return ComponentStyles;\n}());\nexports.ComponentStyles = ComponentStyles;\nvar Component = /** @class */ (function (_super) {\n    __extends(Component, _super);\n    /**\n     * DO NOT OVERRIDE!!\n     *\n     * This function is not overridable, or in other words,\n     * this function is a core function to make the Component\n     * logic work, please don't touch it\n     */\n    function Component(props) {\n        var _this = _super.call(this) || this;\n        /**\n         * DO NOT OVERRIDE\n         * The eventEmitMethod tells the event emitter to emit the events as\n         * raw data instead of an event data.\n         */\n        _this._eventEmitMethod = \"raw\";\n        /**\n         * The data from Ref and Component::ref is stored here in the component.\n         */\n        _this._data = {};\n        exports.components.push({ component: _this });\n        _this._buildProps = props;\n        _this.id = (0, id_1.default)(12);\n        return _this;\n    }\n    Object.defineProperty(Component.prototype, \"_beforeInit\", {\n        /**\n         * DO NOT OVERRIDE!!\n         *\n         * This function is not overridable, or in other words,\n         * this function is a core function to make the Component\n         * logic work, please don't touch it\n         */\n        get: function () {\n            var _this = this;\n            return function () {\n                for (var i in _this) {\n                    if (_this[i] instanceof Ref) {\n                        _this.ref(i, _this[i].value);\n                    }\n                    if (typeof i == \"function\" && i in componentEvents) {\n                        _this.on(componentEvents[i], _this[i]);\n                    }\n                }\n            };\n        },\n        /**\n         * DO NOT OVERRIDE!!\n         *\n         * This function is not overridable, or in other words,\n         * this function is a core function to make the Component\n         * logic work, please don't touch it\n         */\n        set: function (value) { },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Component.prototype, \"_inheritState\", {\n        /**\n         * DO NOT OVERRIDE!!\n         *\n         * This function is not overridable, or in other words,\n         * this function is a core function to make the Component\n         * logic work, please don't touch it\n         */\n        get: function () {\n            var _this = this;\n            return function (component) {\n                for (var i in component) {\n                    if (!(i in Component.prototype)) {\n                        _this[i] = component[i];\n                    }\n                }\n                for (var i in component._data) {\n                    if (i in _this._data) {\n                        _this._data[i] = component._data[i];\n                    }\n                    else {\n                        _this.ref(i, component._data[i]);\n                    }\n                }\n            };\n        },\n        /**\n         * DO NOT OVERRIDE!!\n         *\n         * This function is not overridable, or in other words,\n         * this function is a core function to make the Component\n         * logic work, please don't touch it\n         */\n        set: function (value) { },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * initState runs right after a component is constructed\n     * and right before it's built.\n     * the job is done right after inheritance and before the build\n     * is done, it is also not expected to return anything useful\n     */\n    Component.prototype.initState = function (props) { };\n    /**\n     * build runs after initState, it has a little different buildProps,\n     * and it can be executed again when state changes, meant to be used as a basic\n     * template and be manipulated in the afterBuild section later on\n     */\n    Component.prototype.build = function (props) {\n        return new Widget_1.default({});\n    };\n    /**\n     * afterBuild, as the name suggests, runs after build, it's props has\n     * the previously built widget as a parameter, so you can use that\n     * to manipulate the previously built component from here.\n     *\n     * You can also use afterBuild for async requests using Controllers and\n     * such for stateful change.\n     */\n    Component.prototype.afterBuild = function (props) { };\n    /**\n     *\n     * Makes reference setters and getters for a data value\n     * that can be used to make a Stateful component.\n     *\n     * When a ref is changed, the entire Component is re-rendered\n     * with the new value.\n     *\n     * @param {string} property : property name\n     * @param {any} value : property initial value\n     * @returns {Component}\n     *\n     */\n    Component.prototype.ref = function (property, value) {\n        var _this = this;\n        if (value === void 0) { value = null; }\n        var that = this;\n        if (property in Component.prototype)\n            return this;\n        if (property in this) {\n            if (value == null && that[property] instanceof Ref)\n                value = that[property];\n            delete that[property];\n        }\n        Object.defineProperty(this, property, {\n            get: function () { return _this._data[property]; },\n            set: function (newValue) {\n                _this._data[property] = newValue;\n                _this.update();\n            },\n        });\n        this._data[property] = value;\n        return this;\n    };\n    Object.defineProperty(Component.prototype, \"make\", {\n        /**\n         * DO NOT OVERRIDE!!\n         *\n         * This function is not overridable, or in other words,\n         * this function is a core function to make the Component\n         * logic work, please don't touch it\n         */\n        get: function () {\n            var _this = this;\n            return function (props) {\n                if (props === void 0) { props = null; }\n                return makeComponent(_this, props);\n            };\n        },\n        /**\n         * DO NOT OVERRIDE!!\n         *\n         * This function is not overridable, or in other words,\n         * this function is a core function to make the Component\n         * logic work, please don't touch it\n         */\n        set: function (value) { },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * DO NOT OVERRIDE!!\n     *\n     * The update function is used to re-render the component when a ref\n     * is changed, you can use this to re-render anytime but you shouldn't\n     * override it.\n     */\n    Component.prototype.update = function () {\n        if (this._currentWidget) {\n            var comp = findComponent(this);\n            var rendererElement = false;\n            if (comp) {\n                if (comp.preventNextUpdate) {\n                    comp.preventNextUpdate = false;\n                    return this;\n                }\n                else if (comp.preventAllUpdates) {\n                    return this;\n                }\n                if (comp.rendererElement && typeof comp.rendererElement == \"string\" || comp.rendererElement instanceof Widget_1.default)\n                    rendererElement = comp.rendererElement;\n            }\n            var el = rendererElement == false ? this._currentWidget : (rendererElement instanceof Widget_1.default ? rendererElement : this._currentWidget.find(rendererElement) || this._currentWidget);\n            var parent_1 = rendererElement ? el : el.parent(true);\n            if (rendererElement) {\n                el.remove('*');\n            }\n            else\n                this._currentWidget.remove();\n            var oldWidget = this._currentWidget;\n            var newWidget = makeComponent(this, this._buildProps.wrap ? this._buildProps.wrap({ page: oldWidget }) : __assign(__assign({}, this._buildProps), { page: oldWidget }), false);\n            var lastWidget = newWidget;\n            if (typeof rendererElement == \"string\" && newWidget.find(rendererElement))\n                lastWidget = newWidget.find(rendererElement).children();\n            else if (rendererElement)\n                newWidget.children();\n            if (parent_1) {\n                lastWidget.to(parent_1);\n            }\n            this.emit('rebuild', { widget: lastWidget, oldWidget: oldWidget, component: this, props: this._buildProps });\n        }\n    };\n    /**\n     * DO NOT OVERRIDE\n     *\n     * This function is not overridable, or in other words,\n     * this function is a core function to make the Component\n     * logic work, please don't touch it\n     *\n     * A method to prevent the next component update/rebuild,\n     *\n     * Can be used to stop a build loop.\n     *\n     * @deprecated\n     */\n    Component.prototype.preventNextUpdate = function () {\n        findComponent(this).\n            preventNextUpdate = true;\n    };\n    /**\n     * DO NOT OVERRIDE\n     *\n     *\n     * This function is not overridable, or in other words,\n     * this function is a core function to make the Component\n     * logic work, please don't touch it\n     *\n     * This function can be used to disable\n     * the rebuildability of the entire component.\n     *\n     * @deprecated\n     */\n    Component.prototype.preventAllUpdates = function (prevent) {\n        findComponent(this).\n            preventAllUpdates = prevent;\n    };\n    /**\n     *\n     * DO NOT OVERRIDE\n     *\n     * This function is not overridable, or in other words,\n     * this function is a core function to make the Component\n     * logic work, please don't touch it\n     *\n     * This class can be used to set a base renderer widget inside of your widget so it does not remove\n     * everything everytime you update.\n     *\n     * @param {string | Widget} widget The widget selector for the renderer widget or the renderer widget itself.\n     */\n    Component.prototype.rendererWidget = function (widget) {\n        findComponent(this).\n            rendererElement = widget;\n    };\n    /**\n     * Get a style from the styles in a component\n     * @param {string} name the style name inside the component style\n     */\n    Component.prototype.getStyle = function (name) {\n        if (this.styles) {\n            return this.styles.get(name);\n        }\n        return null;\n    };\n    /**\n     * DO NOT OVERRIDE!!\n     *\n     * This function is to build Components inside other Components.\n     */\n    Component.buildFor = function (parent, props) {\n        return buildComponent(this, props, parent);\n    };\n    /**\n     * An option to disable layouts in this component.\n     */\n    Component.layouts = true;\n    /**\n     * An option to set the title for this component.\n     */\n    Component.title = null;\n    /**\n     * An option to set the body class for this component.\n     */\n    Component.bodyClass = null;\n    /**\n     * An option to disable state inheritance in this component.\n     */\n    Component.inheritState = true;\n    /**\n     * An option to load css files into this component\n     *\n     * for example google fonts, cdns...\n     */\n    Component.links = [];\n    /**\n     * An option to load js files into this component\n     *\n     * for example cdns, vanilla libraries...\n     */\n    Component.scripts = [];\n    /**\n     * Update mode refers to how the page updates when you\n     * made changes to your files.\n     *\n     * If the updateMode is reinit, it will re-import the js and re init\n     * everything without reloading.\n     *\n     * If the updateMode is refresh, it will refresh the page on file\n     * update to sync the changes.\n     */\n    Component.updateMode = \"reinit\";\n    return Component;\n}(eventtarget_1.WidgetEventTarget));\nexports[\"default\"] = Component;\n/**\n * @deprecated Use the {@link ref} class decorator instead\n * @see {ref}\n *\n * The Ref class can only be used in Components and\n * it's use is to make a referencable stateful variable for a\n * component to make it re-render when the value is changed.\n */\nvar Ref = /** @class */ (function () {\n    function Ref(value) {\n        if (value === void 0) { value = null; }\n        if (value != null)\n            this.value = value;\n    }\n    return Ref;\n}());\nexports.Ref = Ref;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/main/Component.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/main/Image.ts":
/*!**********************************************************!*\
  !*** ./node_modules/rayous/client/widgets/main/Image.ts ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ./Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar defaultImage = function () {\n    return (0, options_1.default)({\n        element: { name: \"img\" },\n        class: \"image\",\n        accepts: false,\n        _setters: ['src']\n    });\n};\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image(selectedOptions, otheroptions) {\n        if (otheroptions === void 0) { otheroptions = null; }\n        var _this = this;\n        var options = Image.resolveOptions(selectedOptions, otheroptions, defaultImage());\n        _this = _super.call(this, options) || this;\n        if (options.width)\n            _this.width(options.width);\n        if (options.height)\n            _this.height(options.height);\n        return _this;\n    }\n    Image.resolveOptions = function (selectedOptions, otheroptions, defaults) {\n        if (typeof selectedOptions == \"string\" || selectedOptions instanceof Blob) {\n            selectedOptions = { src: selectedOptions };\n        }\n        if (otheroptions) {\n            selectedOptions = __assign(__assign({}, otheroptions), selectedOptions);\n        }\n        return __assign(__assign({}, defaults), selectedOptions);\n    };\n    Object.defineProperty(Image.prototype, \"src\", {\n        set: function (src) {\n            if (this.sealed !== true) {\n                if (typeof src != \"string\") {\n                    src = URL.createObjectURL(src);\n                }\n                (0, elman_1.findEl)(this.id).attr({ \"src\": src });\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Image;\n}(Widget_1.default));\nexports[\"default\"] = Image;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/main/Image.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/main/Link.ts":
/*!*********************************************************!*\
  !*** ./node_modules/rayous/client/widgets/main/Link.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar Text_1 = __importDefault(__webpack_require__(/*! ./Text */ \"./node_modules/rayous/client/widgets/main/Text.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar extra_1 = __webpack_require__(/*! ../../extra */ \"./node_modules/rayous/client/extra.ts\");\nvar defaultLink = function (more) {\n    if (more === void 0) { more = null; }\n    return (0, options_1.default)({\n        element: { name: 'a' },\n        class: more ? 'link ' + more : 'link',\n        accepts: false,\n        _setters: ['url', 'target'],\n        icon: null\n    });\n};\nfunction link(el, url) {\n    if (typeof url == \"string\") {\n        el\n            .attr({ 'href': url });\n    }\n    else {\n        if (url.url) {\n            el\n                .attr({ 'href': url.url })\n                .on('click', function (e) {\n                e.preventDefault();\n                url.click(url.url);\n            });\n        }\n    }\n}\nvar Link = /** @class */ (function (_super) {\n    __extends(Link, _super);\n    function Link(selectedOptions, otheroptions) {\n        if (otheroptions === void 0) { otheroptions = null; }\n        var options = Text_1.default.resolveOptions(selectedOptions, otheroptions, __assign({}, defaultLink()));\n        return _super.call(this, options) || this;\n    }\n    Object.defineProperty(Link.prototype, \"url\", {\n        set: function (url) {\n            var _this = this;\n            if (url instanceof extra_1.Controller)\n                url.onChange(function (change) {\n                    _this.url = change;\n                });\n            link((0, elman_1.findEl)(this.id), url instanceof extra_1.Controller ? url.get() : url);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Link.prototype, \"target\", {\n        set: function (target) {\n            (0, elman_1.findEl)(this.id).at(0).target = target;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Link;\n}(Text_1.default));\nexports[\"default\"] = Link;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/main/Link.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/main/Span.ts":
/*!*********************************************************!*\
  !*** ./node_modules/rayous/client/widgets/main/Span.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ./Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar Span = /** @class */ (function (_super) {\n    __extends(Span, _super);\n    function Span(selectedOptions) {\n        return _super.call(this, __assign(__assign({}, ((0, options_1.default)({ element: { name: 'span' }, class: '' }))), selectedOptions)) || this;\n    }\n    return Span;\n}(Widget_1.default));\nexports[\"default\"] = Span;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/main/Span.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/main/Text.ts":
/*!*********************************************************!*\
  !*** ./node_modules/rayous/client/widgets/main/Text.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ./Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar Controller_1 = __importDefault(__webpack_require__(/*! ../../data/Controller */ \"./node_modules/rayous/client/data/Controller.ts\"));\nvar defaultText = function () { return (0, options_1.default)({\n    element: { name: 'div' },\n    class: 'text-wrapper',\n    accepts: false,\n}); };\n/**\n * Text representation for the Widget class\n * @class Text\n * @extends Widget\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text(selectedOptions, otheroptions) {\n        if (otheroptions === void 0) { otheroptions = null; }\n        var _this = this;\n        var options = Text.resolveOptions(selectedOptions, otheroptions, defaultText());\n        if (options.children)\n            options.accepts = true;\n        _this = _super.call(this, options) || this;\n        _this.render();\n        return _this;\n    }\n    Text.prototype._optionChange = function (options) {\n        this.render();\n    };\n    Text.prototype.render = function () {\n        var _this = this;\n        var options = this.options;\n        var text = options.text || \"\";\n        var doText = function (text) {\n            if (typeof text == \"function\") {\n                text = options.text(_this);\n            }\n            else if (text instanceof Controller_1.default) {\n                text.onChange(function (change) {\n                    _this.options.text = change.toString();\n                });\n                text = text.get().toString();\n            }\n            _this.text(text);\n            if (options.children)\n                _this.addAll.apply(_this, options.children);\n        };\n        if (text instanceof Promise) {\n            text.then(doText);\n        }\n        else {\n            doText(text);\n        }\n    };\n    Text.resolveOptions = function (selectedOptions, otheroptions, defaults) {\n        if (typeof selectedOptions == 'string' || selectedOptions instanceof Controller_1.default || selectedOptions instanceof Promise) {\n            selectedOptions = { text: selectedOptions };\n        }\n        if (otheroptions) {\n            selectedOptions = __assign(__assign({}, otheroptions), selectedOptions);\n        }\n        return __assign(__assign({}, defaults), selectedOptions);\n    };\n    return Text;\n}(Widget_1.default));\nexports[\"default\"] = Text;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/main/Text.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/main/Widget.ts":
/*!***********************************************************!*\
  !*** ./node_modules/rayous/client/widgets/main/Widget.ts ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.uiwidget = void 0;\nvar type_1 = __webpack_require__(/*! ../../utils/type */ \"./node_modules/rayous/client/utils/type.ts\");\nvar id_1 = __importDefault(__webpack_require__(/*! ../../utils/id */ \"./node_modules/rayous/client/utils/id.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar options_1 = __importStar(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar WidgetProps_1 = __importStar(__webpack_require__(/*! ../_ghost/WidgetProps */ \"./node_modules/rayous/client/widgets/_ghost/WidgetProps.ts\"));\nvar dom_1 = __importDefault(__webpack_require__(/*! ../../utils/dom */ \"./node_modules/rayous/client/utils/dom.ts\"));\nvar Store_1 = __importDefault(__webpack_require__(/*! ../../data/Store */ \"./node_modules/rayous/client/data/Store.ts\"));\nvar widgetmodel_1 = __webpack_require__(/*! ../../utils/widgetmodel */ \"./node_modules/rayous/client/utils/widgetmodel.ts\");\nvar defaults = (0, options_1.default)({});\nvar setterFunctions = [\n    'padding',\n    'margin',\n    'name',\n    'id:$id',\n    'animation',\n    'tooltip',\n    'style'\n];\nfunction initiateSetters(widget, setterFunctions, options) {\n    setterFunctions.forEach(function (setterFull) {\n        var _a;\n        var setter = setterFull, name = setterFull;\n        if (setterFull.match(':')) {\n            _a = setterFull.split(':'), setter = _a[0], name = _a[1];\n        }\n        if (options[setter]) {\n            widget[name] = options[setter];\n        }\n    });\n}\nfunction _init(widget, options) {\n    var elementRaw;\n    if (!widget.__generated) {\n        if (options.element.raw || options.element.selector) {\n            elementRaw = new dom_1.default(options.element.raw).at(0);\n        }\n        else {\n            elementRaw = document.createElement(options.element.name);\n        }\n    }\n    var element = widget.__generated ? (0, elman_1.findEl)(widget.id) : new dom_1.default(elementRaw);\n    if (!widget.__generated && options.element.html)\n        element.html(options.element.html);\n    if (widget.__generated && options.reset)\n        element.attr({ class: '', style: '' });\n    element.addClass(options.class);\n    if (options.position) {\n        var _a = options.position, type = _a.type, centered = _a.centered, top_1 = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n        element.css({\n            position: (0, type_1.isPosition)(type) ? type : null\n        });\n        if (centered) {\n            element.css({\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n            });\n        }\n        else {\n            element.css({\n                top: top_1,\n                left: left,\n                right: right,\n                bottom: bottom\n            });\n        }\n    }\n    if (options.size) {\n        var _b = options.size, width = _b.width, height = _b.height;\n        element.css({\n            width: width,\n            height: height\n        });\n    }\n    if (!widget.__generated) {\n        Object.defineProperty(widget, 'id', {\n            writable: false,\n            value: (0, id_1.default)()\n        });\n        element.at(0).GUIWIDGET = widget;\n        (0, elman_1.registerElement)(element, widget.id);\n        widget.store.on('change', function () {\n            widget.emit('state:change', widget.store);\n        });\n    }\n    if (options.store instanceof Store_1.default)\n        widget.store = options.store;\n    if (typeof options.build == \"function\") {\n        if (!options.children)\n            options.children = [];\n        var child = options.build(options, widget);\n        if (Array.isArray(child)) {\n            options.children.push(child);\n        }\n        else {\n            options.children.push(child);\n        }\n    }\n    if (options.children && options.children.length) {\n        options.children.forEach(function (element) {\n            if (element == null)\n                return;\n            if (element instanceof window.Text)\n                element = element.textContent;\n            widget.add(element);\n        });\n    }\n    if (options.private === true) {\n        // widget.seal();\n        delete options.private;\n    }\n    if (options.accepts === false) {\n        widget.accepts = false;\n    }\n    else if (options.accepts === true) {\n        widget.accepts = true;\n    }\n    for (var i in options) {\n        if (i.match(/on([A-Z])([a-zA-Z]+)/)) {\n            if (!options.events)\n                options.events = {};\n            options.events[i.replace('on', '').toLowerCase()] = options[i];\n            // delete options[i];\n        }\n    }\n    if (options.events) {\n        for (var i in options.events) {\n            widget.on(i, options.events[i]);\n        }\n    }\n    if (options.props) {\n        element.prop(options.props);\n    }\n    if (options.attr) {\n        element.attr(options.attr);\n    }\n    widget.options = widget.registerProxy(options, function () {\n        widget.setOptions({});\n    });\n    var setters = __spreadArray([], setterFunctions, true);\n    if (options._setters) {\n        setters.push.apply(setters, options._setters);\n    }\n    initiateSetters(widget, setters, options);\n    if (!widget.__generated)\n        widget.__generated = true;\n    if (typeof widget._onBuild == \"function\") {\n        var w = widget._onBuild();\n        if (w) {\n            widget.add(w);\n        }\n    }\n}\n/**\n * Widget class represents a graphical user interface (GUI) element.\n *\n * @class Widget\n * @extends {WidgetProps}\n */\nvar Widget = /** @class */ (function (_super) {\n    __extends(Widget, _super);\n    function Widget(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * Creates an instance of the Widget.\n         *\n         * @param {options} [options={}] - Configuration options for the Widget.\n         */\n        _this.options = {};\n        if (typeof options !== \"object\")\n            options = { element: { name: 'div' }, class: 'widget' };\n        _init(_this, __assign(__assign({}, (0, options_1.default)({})), options));\n        return _this;\n    }\n    Widget.prototype.setOptions = function (options) {\n        var currentOptions = __assign(__assign({}, this.options), options);\n        _init(this, currentOptions);\n        this._optionChange(currentOptions);\n    };\n    Widget.from = function (child) {\n        return new Widget({ element: { raw: new dom_1.default(child).at(0) } });\n    };\n    /**\n     * Creates a Widget class from config.\n     *\n     * @param {widgetModel} [model] - Configuration model for the Widget.\n     * @param {any} [options] - Configuration options for the Widget.\n     */\n    Widget.model = function (model, options) {\n        if (options === void 0) { options = {}; }\n        return (0, widgetmodel_1.createWidgetModel)(model, options, this);\n    };\n    Widget.animateWidgets = function (animation) {\n        var widgets = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            widgets[_i - 1] = arguments[_i];\n        }\n        return WidgetProps_1.WidgetList.from(widgets).animate(animation);\n    };\n    Widget.new = function (options) {\n        return new this(options);\n    };\n    return Widget;\n}(WidgetProps_1.default));\nfunction getAllSetters(obj) {\n    var setters = [];\n    var currentObj = obj;\n    while (currentObj) {\n        var descriptors = Object.getOwnPropertyDescriptors(currentObj);\n        var _loop_1 = function (key) {\n            var descriptor = descriptors[key];\n            if (key == '__proto__')\n                return \"continue\";\n            if (setterFunctions.includes(key) || setterFunctions.find(function (k) { return k.endsWith(':' + key); }))\n                return \"continue\";\n            if (descriptor.set) {\n                setters.push(key);\n            }\n        };\n        for (var key in descriptors) {\n            _loop_1(key);\n        }\n        currentObj = Object.getPrototypeOf(currentObj);\n    }\n    return setters;\n}\nfunction uiwidget(defaults) {\n    return function (target, extended) {\n        var setters = [];\n        var WidgetClass = /** @class */ (function (_super) {\n            __extends(WidgetClass, _super);\n            function WidgetClass(options) {\n                var _this = this;\n                var o = (0, options_1.mergeOptions)(__assign(__assign({}, defaults), { _setters: setters }), options);\n                _this = _super.call(this, o) || this;\n                _this.onInit(o);\n                return _this;\n            }\n            WidgetClass.prototype.onInit = function (o) { };\n            return WidgetClass;\n        }(target));\n        Object.getOwnPropertyNames(target.prototype).forEach(function (key) {\n            if (key !== 'constructor') {\n                WidgetClass.prototype[key] = target.prototype[key];\n            }\n        });\n        setters.push.apply(setters, getAllSetters(WidgetClass.prototype));\n        return WidgetClass;\n    };\n}\nexports.uiwidget = uiwidget;\nexports[\"default\"] = Widget;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/main/Widget.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/media/Audio.ts":
/*!***********************************************************!*\
  !*** ./node_modules/rayous/client/widgets/media/Audio.ts ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar defaultAudio = function () {\n    return (0, options_1.default)({\n        element: { name: \"audio\" },\n        class: \"audio\",\n        accepts: false,\n        _setters: ['src', 'controls', 'autoplay']\n    });\n};\nvar Audio = /** @class */ (function (_super) {\n    __extends(Audio, _super);\n    function Audio(selectedOptions, otheroptions) {\n        if (otheroptions === void 0) { otheroptions = null; }\n        var options = Audio.resolveOptions(selectedOptions, otheroptions, defaultAudio());\n        return _super.call(this, options) || this;\n    }\n    Audio.resolveOptions = function (selectedOptions, otheroptions, defaults) {\n        if (typeof selectedOptions === \"string\") {\n            selectedOptions = { src: selectedOptions };\n        }\n        if (otheroptions) {\n            selectedOptions = __assign(__assign({}, otheroptions), selectedOptions);\n        }\n        return __assign(__assign({}, defaults), selectedOptions);\n    };\n    Object.defineProperty(Audio.prototype, \"src\", {\n        set: function (src) {\n            if (this.sealed !== true)\n                (0, elman_1.findEl)(this.id).attr({ \"src\": src });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Audio.prototype, \"controls\", {\n        set: function (controls) {\n            if (this.sealed !== true)\n                (0, elman_1.findEl)(this.id).attr({ \"controls\": controls });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Audio.prototype, \"autoplay\", {\n        set: function (autoplay) {\n            if (this.sealed !== true)\n                (0, elman_1.findEl)(this.id).attr({ \"autoplay\": autoplay });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Audio.prototype.play = function () {\n        (0, elman_1.findEl)(this.id).at(0).play();\n        return this;\n    };\n    Audio.prototype.pause = function () {\n        (0, elman_1.findEl)(this.id).at(0).pause();\n        return this;\n    };\n    Object.defineProperty(Audio.prototype, \"paused\", {\n        get: function () {\n            return (0, elman_1.findEl)(this.id).at(0).paused;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Audio.prototype, \"duration\", {\n        get: function () {\n            return (0, elman_1.findEl)(this.id).at(0).duration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Audio.prototype, \"currentTime\", {\n        get: function () {\n            return (0, elman_1.findEl)(this.id).at(0).currentTime;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Audio;\n}(Widget_1.default));\nexports[\"default\"] = Audio;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/media/Audio.ts?");

/***/ }),

/***/ "./node_modules/rayous/client/widgets/media/Video.ts":
/*!***********************************************************!*\
  !*** ./node_modules/rayous/client/widgets/media/Video.ts ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Widget_1 = __importDefault(__webpack_require__(/*! ../main/Widget */ \"./node_modules/rayous/client/widgets/main/Widget.ts\"));\nvar options_1 = __importDefault(__webpack_require__(/*! ../../utils/options */ \"./node_modules/rayous/client/utils/options.ts\"));\nvar elman_1 = __webpack_require__(/*! ../../utils/elman */ \"./node_modules/rayous/client/utils/elman.ts\");\nvar defaultVideo = function () {\n    return (0, options_1.default)({\n        element: { name: \"video\" },\n        class: \"video\",\n        accepts: false,\n        _setters: ['src', 'controls', 'autoplay']\n    });\n};\nvar Video = /** @class */ (function (_super) {\n    __extends(Video, _super);\n    function Video(selectedOptions, otheroptions) {\n        if (otheroptions === void 0) { otheroptions = null; }\n        var _this = this;\n        var options = Video.resolveOptions(selectedOptions, otheroptions, defaultVideo());\n        _this = _super.call(this, options) || this;\n        if (options.width)\n            _this.width(options.width);\n        if (options.height)\n            _this.height(options.height);\n        return _this;\n    }\n    Video.resolveOptions = function (selectedOptions, otheroptions, defaults) {\n        if (typeof selectedOptions === \"string\") {\n            selectedOptions = { src: selectedOptions };\n        }\n        if (otheroptions) {\n            selectedOptions = __assign(__assign({}, otheroptions), selectedOptions);\n        }\n        return __assign(__assign({}, defaults), selectedOptions);\n    };\n    Object.defineProperty(Video.prototype, \"src\", {\n        set: function (src) {\n            if (this.sealed !== true)\n                (0, elman_1.findEl)(this.id).attr({ \"src\": src });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Video.prototype, \"controls\", {\n        set: function (controls) {\n            if (this.sealed !== true)\n                (0, elman_1.findEl)(this.id).attr({ \"controls\": controls });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Video.prototype, \"autoplay\", {\n        set: function (autoplay) {\n            if (this.sealed !== true)\n                (0, elman_1.findEl)(this.id).attr({ \"autoplay\": autoplay });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Video.prototype.play = function () {\n        (0, elman_1.findEl)(this.id).at(0).play();\n        return this;\n    };\n    Video.prototype.pause = function () {\n        (0, elman_1.findEl)(this.id).at(0).pause();\n        return this;\n    };\n    Object.defineProperty(Video.prototype, \"paused\", {\n        get: function () {\n            return (0, elman_1.findEl)(this.id).at(0).paused;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Video.prototype, \"duration\", {\n        get: function () {\n            return (0, elman_1.findEl)(this.id).at(0).duration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Video.prototype, \"currentTime\", {\n        get: function () {\n            return (0, elman_1.findEl)(this.id).at(0).currentTime;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Video;\n}(Widget_1.default));\nexports[\"default\"] = Video;\n\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/widgets/media/Video.ts?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var rayous__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rayous */ \"./node_modules/rayous/client/index.ts\");\n/* harmony import */ var rayous__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rayous__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rayous_extra__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rayous/extra */ \"./node_modules/rayous/client/extra.ts\");\n/* harmony import */ var rayous_extra__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rayous_extra__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst body = rayous__WEBPACK_IMPORTED_MODULE_0__.Widget.from(document.body);\n\nbody.style = new rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Style('bodyStyle', {\n\tbackground: rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Style.linearGradient(\"140deg\", \"#052FE9\", \"#ff009b\"),\n\tcolor: 'white',\n\tfontFamily: 'Inter',\n\tmargin: '0'\n});\n\nconst quote = new rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Controller('Loading quote..');\n\nconst fetchQuote = () => fetch('https://api.quotable.io/random')\n.then(response => response.json())\n.then(json => quote.set(json.content));\n\nconst containerStyle = new rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Style({\n\ttextAlign: 'center',\n\twidth: rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Style.px(400),\n\tmaxWidth: '80%',\n\tbackground: 'rgba(255, 255, 255, 0.3)',\n\tpadding: [rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Style.px(10), rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Style.px(25)],\n\tboxSizing: 'border-box',\n\tborderRadius: '25px',\n\tbackdropFilter: 'blur(20px)'\n});\n\nbody.add(\n\tnew rayous__WEBPACK_IMPORTED_MODULE_0__.Column({\n\t\tsize: { height: '100vh' },\n\t\tmainAxisAlignment: 'center',\n\t\tcrossAxisAlignment: 'center',\n\t\tchildren: [\n\t\t\tnew rayous__WEBPACK_IMPORTED_MODULE_0__.Container({\n\t\t\t\tstyle: containerStyle,\n\t\t\t\tchildren: [\n\t\t\t\t\tnew rayous__WEBPACK_IMPORTED_MODULE_0__.Text('Quote', {\n\t\t\t\t\t\tstyle: new rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Style('title', {\n\t\t\t\t\t\t\tfontSize: rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Style.px(44),\n\t\t\t\t\t\t\tfontWeight: '500'\n\t\t\t\t\t\t})\n\t\t\t\t\t}),\n\t\t\t\t\tnew rayous__WEBPACK_IMPORTED_MODULE_0__.Text('Of the day.', {\n\t\t\t\t\t\tstyle: new rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Style({\n\t\t\t\t\t\t\tfontSize: '12px',\n\t\t\t\t\t\t\topacity: '.7',\n\t\t\t\t\t\t\tfontWeight: '700',\n\t\t\t\t\t\t\tborderBottom: '2px solid white',\n\t\t\t\t\t\t\tpaddingBottom: '10px'\n\t\t\t\t\t\t})\n\t\t\t\t\t}),\n\t\t\t\t\tnew rayous__WEBPACK_IMPORTED_MODULE_0__.Text({ text: quote, style: { marginTop: '10px' } }),\n\t\t\t\t\tnew rayous__WEBPACK_IMPORTED_MODULE_0__.Button('Another!', {\n\t\t\t\t\t\tstyle: new rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Style({\n\t\t\t\t\t\t\tborder: '0',\n\t\t\t\t\t\t\tmargin: rayous_extra__WEBPACK_IMPORTED_MODULE_1__.Style.px(10),\n\t\t\t\t\t\t\tpadding: ['5px', '10px'],\n\t\t\t\t\t\t\tborderRadius: '25px',\n\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\tbackground: '#ff00d4',\n\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\tfontWeight: 'bolder',\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tonClick(){\n\t\t\t\t\t\t\tfetchQuote();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})\n\t\t]\n\t})\n)\n\nfetchQuote();\n\n//# sourceURL=webpack://test-rayous/./src/main.js?");

/***/ }),

/***/ "./node_modules/rayous/client/modules/anime.js":
/*!*****************************************************!*\
  !*** ./node_modules/rayous/client/modules/anime.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*\n * anime.js v3.2.1\n * (c) 2020 Julian Garnier\n * Released under the MIT license\n * animejs.com\n */\n\n\n\n// Defaults\n\nvar defaultInstanceSettings = {\n  update: null,\n  begin: null,\n  loopBegin: null,\n  changeBegin: null,\n  change: null,\n  changeComplete: null,\n  loopComplete: null,\n  complete: null,\n  loop: 1,\n  direction: 'normal',\n  autoplay: true,\n  timelineOffset: 0\n};\n\nvar defaultTweenSettings = {\n  duration: 1000,\n  delay: 0,\n  endDelay: 0,\n  easing: 'easeOutElastic(1, .5)',\n  round: 0\n};\n\nvar validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective', 'matrix', 'matrix3d'];\n\n// Caching\n\nvar cache = {\n  CSS: {},\n  springs: {}\n};\n\n// Utils\n\nfunction minMax(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n\nfunction stringContains(str, text) {\n  return str.indexOf(text) > -1;\n}\n\nfunction applyArguments(func, args) {\n  return func.apply(null, args);\n}\n\nvar is = {\n  arr: function (a) { return Array.isArray(a); },\n  obj: function (a) { return stringContains(Object.prototype.toString.call(a), 'Object'); },\n  pth: function (a) { return is.obj(a) && a.hasOwnProperty('totalLength'); },\n  svg: function (a) { return a instanceof SVGElement; },\n  inp: function (a) { return a instanceof HTMLInputElement; },\n  dom: function (a) { return a.nodeType || is.svg(a); },\n  str: function (a) { return typeof a === 'string'; },\n  fnc: function (a) { return typeof a === 'function'; },\n  und: function (a) { return typeof a === 'undefined'; },\n  nil: function (a) { return is.und(a) || a === null; },\n  hex: function (a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a); },\n  rgb: function (a) { return /^rgb/.test(a); },\n  hsl: function (a) { return /^hsl/.test(a); },\n  col: function (a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)); },\n  key: function (a) { return !defaultInstanceSettings.hasOwnProperty(a) && !defaultTweenSettings.hasOwnProperty(a) && a !== 'targets' && a !== 'keyframes'; },\n};\n\n// Easings\n\nfunction parseEasingParameters(string) {\n  var match = /\\(([^)]+)\\)/.exec(string);\n  return match ? match[1].split(',').map(function (p) { return parseFloat(p); }) : [];\n}\n\n// Spring solver inspired by Webkit Copyright © 2016 Apple Inc. All rights reserved. https://webkit.org/demos/spring/spring.js\n\nfunction spring(string, duration) {\n\n  var params = parseEasingParameters(string);\n  var mass = minMax(is.und(params[0]) ? 1 : params[0], .1, 100);\n  var stiffness = minMax(is.und(params[1]) ? 100 : params[1], .1, 100);\n  var damping = minMax(is.und(params[2]) ? 10 : params[2], .1, 100);\n  var velocity =  minMax(is.und(params[3]) ? 0 : params[3], .1, 100);\n  var w0 = Math.sqrt(stiffness / mass);\n  var zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  var a = 1;\n  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n\n  function solver(t) {\n    var progress = duration ? (duration * t) / 1000 : t;\n    if (zeta < 1) {\n      progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n    } else {\n      progress = (a + b * progress) * Math.exp(-progress * w0);\n    }\n    if (t === 0 || t === 1) { return t; }\n    return 1 - progress;\n  }\n\n  function getDuration() {\n    var cached = cache.springs[string];\n    if (cached) { return cached; }\n    var frame = 1/6;\n    var elapsed = 0;\n    var rest = 0;\n    while(true) {\n      elapsed += frame;\n      if (solver(elapsed) === 1) {\n        rest++;\n        if (rest >= 16) { break; }\n      } else {\n        rest = 0;\n      }\n    }\n    var duration = elapsed * frame * 1000;\n    cache.springs[string] = duration;\n    return duration;\n  }\n\n  return duration ? solver : getDuration;\n\n}\n\n// Basic steps easing implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n\nfunction steps(steps) {\n  if ( steps === void 0 ) steps = 10;\n\n  return function (t) { return Math.ceil((minMax(t, 0.000001, 1)) * steps) * (1 / steps); };\n}\n\n// BezierEasing https://github.com/gre/bezier-easing\n\nvar bezier = (function () {\n\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 }\n  function C(aA1)      { return 3.0 * aA1 }\n\n  function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT }\n  function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX, currentT, i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) { aB = currentT; } else { aA = currentT; }\n    } while (Math.abs(currentX) > 0.0000001 && ++i < 10);\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) { return aGuessT; }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  function bezier(mX1, mY1, mX2, mY2) {\n\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { return; }\n    var sampleValues = new Float32Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n\n      var intervalStart = 0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= 0.001) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n\n    }\n\n    return function (x) {\n      if (mX1 === mY1 && mX2 === mY2) { return x; }\n      if (x === 0 || x === 1) { return x; }\n      return calcBezier(getTForX(x), mY1, mY2);\n    }\n\n  }\n\n  return bezier;\n\n})();\n\nvar penner = (function () {\n\n  // Based on jQuery UI's implemenation of easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n  var eases = { linear: function () { return function (t) { return t; }; } };\n\n  var functionEasings = {\n    Sine: function () { return function (t) { return 1 - Math.cos(t * Math.PI / 2); }; },\n    Circ: function () { return function (t) { return 1 - Math.sqrt(1 - t * t); }; },\n    Back: function () { return function (t) { return t * t * (3 * t - 2); }; },\n    Bounce: function () { return function (t) {\n      var pow2, b = 4;\n      while (t < (( pow2 = Math.pow(2, --b)) - 1) / 11) {}\n      return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow(( pow2 * 3 - 2 ) / 22 - t, 2)\n    }; },\n    Elastic: function (amplitude, period) {\n      if ( amplitude === void 0 ) amplitude = 1;\n      if ( period === void 0 ) period = .5;\n\n      var a = minMax(amplitude, 1, 10);\n      var p = minMax(period, .1, 2);\n      return function (t) {\n        return (t === 0 || t === 1) ? t : \n          -a * Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2) * Math.asin(1 / a))) * (Math.PI * 2)) / p);\n      }\n    }\n  };\n\n  var baseEasings = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n\n  baseEasings.forEach(function (name, i) {\n    functionEasings[name] = function () { return function (t) { return Math.pow(t, i + 2); }; };\n  });\n\n  Object.keys(functionEasings).forEach(function (name) {\n    var easeIn = functionEasings[name];\n    eases['easeIn' + name] = easeIn;\n    eases['easeOut' + name] = function (a, b) { return function (t) { return 1 - easeIn(a, b)(1 - t); }; };\n    eases['easeInOut' + name] = function (a, b) { return function (t) { return t < 0.5 ? easeIn(a, b)(t * 2) / 2 : \n      1 - easeIn(a, b)(t * -2 + 2) / 2; }; };\n    eases['easeOutIn' + name] = function (a, b) { return function (t) { return t < 0.5 ? (1 - easeIn(a, b)(1 - t * 2)) / 2 : \n      (easeIn(a, b)(t * 2 - 1) + 1) / 2; }; };\n  });\n\n  return eases;\n\n})();\n\nfunction parseEasings(easing, duration) {\n  if (is.fnc(easing)) { return easing; }\n  var name = easing.split('(')[0];\n  var ease = penner[name];\n  var args = parseEasingParameters(easing);\n  switch (name) {\n    case 'spring' : return spring(easing, duration);\n    case 'cubicBezier' : return applyArguments(bezier, args);\n    case 'steps' : return applyArguments(steps, args);\n    default : return applyArguments(ease, args);\n  }\n}\n\n// Strings\n\nfunction selectString(str) {\n  try {\n    var nodes = document.querySelectorAll(str);\n    return nodes;\n  } catch(e) {\n    return;\n  }\n}\n\n// Arrays\n\nfunction filterArray(arr, callback) {\n  var len = arr.length;\n  var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n  var result = [];\n  for (var i = 0; i < len; i++) {\n    if (i in arr) {\n      var val = arr[i];\n      if (callback.call(thisArg, val, i, arr)) {\n        result.push(val);\n      }\n    }\n  }\n  return result;\n}\n\nfunction flattenArray(arr) {\n  return arr.reduce(function (a, b) { return a.concat(is.arr(b) ? flattenArray(b) : b); }, []);\n}\n\nfunction toArray(o) {\n  if (is.arr(o)) { return o; }\n  if (is.str(o)) { o = selectString(o) || o; }\n  if (o instanceof NodeList || o instanceof HTMLCollection) { return [].slice.call(o); }\n  return [o];\n}\n\nfunction arrayContains(arr, val) {\n  return arr.some(function (a) { return a === val; });\n}\n\n// Objects\n\nfunction cloneObject(o) {\n  var clone = {};\n  for (var p in o) { clone[p] = o[p]; }\n  return clone;\n}\n\nfunction replaceObjectProps(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o1) { o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p]; }\n  return o;\n}\n\nfunction mergeObjects(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o2) { o[p] = is.und(o1[p]) ? o2[p] : o1[p]; }\n  return o;\n}\n\n// Colors\n\nfunction rgbToRgba(rgbValue) {\n  var rgb = /rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(rgbValue);\n  return rgb ? (\"rgba(\" + (rgb[1]) + \",1)\") : rgbValue;\n}\n\nfunction hexToRgba(hexValue) {\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var hex = hexValue.replace(rgx, function (m, r, g, b) { return r + r + g + g + b + b; } );\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  var r = parseInt(rgb[1], 16);\n  var g = parseInt(rgb[2], 16);\n  var b = parseInt(rgb[3], 16);\n  return (\"rgba(\" + r + \",\" + g + \",\" + b + \",1)\");\n}\n\nfunction hslToRgba(hslValue) {\n  var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hslValue) || /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(hslValue);\n  var h = parseInt(hsl[1], 10) / 360;\n  var s = parseInt(hsl[2], 10) / 100;\n  var l = parseInt(hsl[3], 10) / 100;\n  var a = hsl[4] || 1;\n  function hue2rgb(p, q, t) {\n    if (t < 0) { t += 1; }\n    if (t > 1) { t -= 1; }\n    if (t < 1/6) { return p + (q - p) * 6 * t; }\n    if (t < 1/2) { return q; }\n    if (t < 2/3) { return p + (q - p) * (2/3 - t) * 6; }\n    return p;\n  }\n  var r, g, b;\n  if (s == 0) {\n    r = g = b = l;\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n  return (\"rgba(\" + (r * 255) + \",\" + (g * 255) + \",\" + (b * 255) + \",\" + a + \")\");\n}\n\nfunction colorToRgb(val) {\n  if (is.rgb(val)) { return rgbToRgba(val); }\n  if (is.hex(val)) { return hexToRgba(val); }\n  if (is.hsl(val)) { return hslToRgba(val); }\n}\n\n// Units\n\nfunction getUnit(val) {\n  var split = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);\n  if (split) { return split[1]; }\n}\n\nfunction getTransformUnit(propName) {\n  if (stringContains(propName, 'translate') || propName === 'perspective') { return 'px'; }\n  if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) { return 'deg'; }\n}\n\n// Values\n\nfunction getFunctionValue(val, animatable) {\n  if (!is.fnc(val)) { return val; }\n  return val(animatable.target, animatable.id, animatable.total);\n}\n\nfunction getAttribute(el, prop) {\n  return el.getAttribute(prop);\n}\n\nfunction convertPxToUnit(el, value, unit) {\n  var valueUnit = getUnit(value);\n  if (arrayContains([unit, 'deg', 'rad', 'turn'], valueUnit)) { return value; }\n  var cached = cache.CSS[value + unit];\n  if (!is.und(cached)) { return cached; }\n  var baseline = 100;\n  var tempEl = document.createElement(el.tagName);\n  var parentEl = (el.parentNode && (el.parentNode !== document)) ? el.parentNode : document.body;\n  parentEl.appendChild(tempEl);\n  tempEl.style.position = 'absolute';\n  tempEl.style.width = baseline + unit;\n  var factor = baseline / tempEl.offsetWidth;\n  parentEl.removeChild(tempEl);\n  var convertedUnit = factor * parseFloat(value);\n  cache.CSS[value + unit] = convertedUnit;\n  return convertedUnit;\n}\n\nfunction getCSSValue(el, prop, unit) {\n  if (prop in el.style) {\n    var uppercasePropName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    var value = el.style[prop] || getComputedStyle(el).getPropertyValue(uppercasePropName) || '0';\n    return unit ? convertPxToUnit(el, value, unit) : value;\n  }\n}\n\nfunction getAnimationType(el, prop) {\n  if (is.dom(el) && !is.inp(el) && (!is.nil(getAttribute(el, prop)) || (is.svg(el) && el[prop]))) { return 'attribute'; }\n  if (is.dom(el) && arrayContains(validTransforms, prop)) { return 'transform'; }\n  if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) { return 'css'; }\n  if (el[prop] != null) { return 'object'; }\n}\n\nfunction getElementTransforms(el) {\n  if (!is.dom(el)) { return; }\n  var str = el.style.transform || '';\n  var reg  = /(\\w+)\\(([^)]*)\\)/g;\n  var transforms = new Map();\n  var m; while (m = reg.exec(str)) { transforms.set(m[1], m[2]); }\n  return transforms;\n}\n\nfunction getTransformValue(el, propName, animatable, unit) {\n  var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + getTransformUnit(propName);\n  var value = getElementTransforms(el).get(propName) || defaultVal;\n  if (animatable) {\n    animatable.transforms.list.set(propName, value);\n    animatable.transforms['last'] = propName;\n  }\n  return unit ? convertPxToUnit(el, value, unit) : value;\n}\n\nfunction getOriginalTargetValue(target, propName, unit, animatable) {\n  switch (getAnimationType(target, propName)) {\n    case 'transform': return getTransformValue(target, propName, animatable, unit);\n    case 'css': return getCSSValue(target, propName, unit);\n    case 'attribute': return getAttribute(target, propName);\n    default: return target[propName] || 0;\n  }\n}\n\nfunction getRelativeValue(to, from) {\n  var operator = /^(\\*=|\\+=|-=)/.exec(to);\n  if (!operator) { return to; }\n  var u = getUnit(to) || 0;\n  var x = parseFloat(from);\n  var y = parseFloat(to.replace(operator[0], ''));\n  switch (operator[0][0]) {\n    case '+': return x + y + u;\n    case '-': return x - y + u;\n    case '*': return x * y + u;\n  }\n}\n\nfunction validateValue(val, unit) {\n  if (is.col(val)) { return colorToRgb(val); }\n  if (/\\s/g.test(val)) { return val; }\n  var originalUnit = getUnit(val);\n  var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;\n  if (unit) { return unitLess + unit; }\n  return unitLess;\n}\n\n// getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes\n// adapted from https://gist.github.com/SebLambla/3e0550c496c236709744\n\nfunction getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el) {\n  return Math.PI * 2 * getAttribute(el, 'r');\n}\n\nfunction getRectLength(el) {\n  return (getAttribute(el, 'width') * 2) + (getAttribute(el, 'height') * 2);\n}\n\nfunction getLineLength(el) {\n  return getDistance(\n    {x: getAttribute(el, 'x1'), y: getAttribute(el, 'y1')}, \n    {x: getAttribute(el, 'x2'), y: getAttribute(el, 'y2')}\n  );\n}\n\nfunction getPolylineLength(el) {\n  var points = el.points;\n  var totalLength = 0;\n  var previousPos;\n  for (var i = 0 ; i < points.numberOfItems; i++) {\n    var currentPos = points.getItem(i);\n    if (i > 0) { totalLength += getDistance(previousPos, currentPos); }\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el) {\n  var points = el.points;\n  return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n}\n\n// Path animation\n\nfunction getTotalLength(el) {\n  if (el.getTotalLength) { return el.getTotalLength(); }\n  switch(el.tagName.toLowerCase()) {\n    case 'circle': return getCircleLength(el);\n    case 'rect': return getRectLength(el);\n    case 'line': return getLineLength(el);\n    case 'polyline': return getPolylineLength(el);\n    case 'polygon': return getPolygonLength(el);\n  }\n}\n\nfunction setDashoffset(el) {\n  var pathLength = getTotalLength(el);\n  el.setAttribute('stroke-dasharray', pathLength);\n  return pathLength;\n}\n\n// Motion path\n\nfunction getParentSvgEl(el) {\n  var parentEl = el.parentNode;\n  while (is.svg(parentEl)) {\n    if (!is.svg(parentEl.parentNode)) { break; }\n    parentEl = parentEl.parentNode;\n  }\n  return parentEl;\n}\n\nfunction getParentSvg(pathEl, svgData) {\n  var svg = svgData || {};\n  var parentSvgEl = svg.el || getParentSvgEl(pathEl);\n  var rect = parentSvgEl.getBoundingClientRect();\n  var viewBoxAttr = getAttribute(parentSvgEl, 'viewBox');\n  var width = rect.width;\n  var height = rect.height;\n  var viewBox = svg.viewBox || (viewBoxAttr ? viewBoxAttr.split(' ') : [0, 0, width, height]);\n  return {\n    el: parentSvgEl,\n    viewBox: viewBox,\n    x: viewBox[0] / 1,\n    y: viewBox[1] / 1,\n    w: width,\n    h: height,\n    vW: viewBox[2],\n    vH: viewBox[3]\n  }\n}\n\nfunction getPath(path, percent) {\n  var pathEl = is.str(path) ? selectString(path)[0] : path;\n  var p = percent || 100;\n  return function(property) {\n    return {\n      property: property,\n      el: pathEl,\n      svg: getParentSvg(pathEl),\n      totalLength: getTotalLength(pathEl) * (p / 100)\n    }\n  }\n}\n\nfunction getPathProgress(path, progress, isPathTargetInsideSVG) {\n  function point(offset) {\n    if ( offset === void 0 ) offset = 0;\n\n    var l = progress + offset >= 1 ? progress + offset : 0;\n    return path.el.getPointAtLength(l);\n  }\n  var svg = getParentSvg(path.el, path.svg);\n  var p = point();\n  var p0 = point(-1);\n  var p1 = point(+1);\n  var scaleX = isPathTargetInsideSVG ? 1 : svg.w / svg.vW;\n  var scaleY = isPathTargetInsideSVG ? 1 : svg.h / svg.vH;\n  switch (path.property) {\n    case 'x': return (p.x - svg.x) * scaleX;\n    case 'y': return (p.y - svg.y) * scaleY;\n    case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n  }\n}\n\n// Decompose value\n\nfunction decomposeValue(val, unit) {\n  // const rgx = /-?\\d*\\.?\\d+/g; // handles basic numbers\n  // const rgx = /[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var rgx = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var value = validateValue((is.pth(val) ? val.totalLength : val), unit) + '';\n  return {\n    original: value,\n    numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],\n    strings: (is.str(val) || unit) ? value.split(rgx) : []\n  }\n}\n\n// Animatables\n\nfunction parseTargets(targets) {\n  var targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n  return filterArray(targetsArray, function (item, pos, self) { return self.indexOf(item) === pos; });\n}\n\nfunction getAnimatables(targets) {\n  var parsed = parseTargets(targets);\n  return parsed.map(function (t, i) {\n    return {target: t, id: i, total: parsed.length, transforms: { list: getElementTransforms(t) } };\n  });\n}\n\n// Properties\n\nfunction normalizePropertyTweens(prop, tweenSettings) {\n  var settings = cloneObject(tweenSettings);\n  // Override duration if easing is a spring\n  if (/^spring/.test(settings.easing)) { settings.duration = spring(settings.easing); }\n  if (is.arr(prop)) {\n    var l = prop.length;\n    var isFromTo = (l === 2 && !is.obj(prop[0]));\n    if (!isFromTo) {\n      // Duration divided by the number of tweens\n      if (!is.fnc(tweenSettings.duration)) { settings.duration = tweenSettings.duration / l; }\n    } else {\n      // Transform [from, to] values shorthand to a valid tween value\n      prop = {value: prop};\n    }\n  }\n  var propArray = is.arr(prop) ? prop : [prop];\n  return propArray.map(function (v, i) {\n    var obj = (is.obj(v) && !is.pth(v)) ? v : {value: v};\n    // Default delay value should only be applied to the first tween\n    if (is.und(obj.delay)) { obj.delay = !i ? tweenSettings.delay : 0; }\n    // Default endDelay value should only be applied to the last tween\n    if (is.und(obj.endDelay)) { obj.endDelay = i === propArray.length - 1 ? tweenSettings.endDelay : 0; }\n    return obj;\n  }).map(function (k) { return mergeObjects(k, settings); });\n}\n\n\nfunction flattenKeyframes(keyframes) {\n  var propertyNames = filterArray(flattenArray(keyframes.map(function (key) { return Object.keys(key); })), function (p) { return is.key(p); })\n  .reduce(function (a,b) { if (a.indexOf(b) < 0) { a.push(b); } return a; }, []);\n  var properties = {};\n  var loop = function ( i ) {\n    var propName = propertyNames[i];\n    properties[propName] = keyframes.map(function (key) {\n      var newKey = {};\n      for (var p in key) {\n        if (is.key(p)) {\n          if (p == propName) { newKey.value = key[p]; }\n        } else {\n          newKey[p] = key[p];\n        }\n      }\n      return newKey;\n    });\n  };\n\n  for (var i = 0; i < propertyNames.length; i++) loop( i );\n  return properties;\n}\n\nfunction getProperties(tweenSettings, params) {\n  var properties = [];\n  var keyframes = params.keyframes;\n  if (keyframes) { params = mergeObjects(flattenKeyframes(keyframes), params); }\n  for (var p in params) {\n    if (is.key(p)) {\n      properties.push({\n        name: p,\n        tweens: normalizePropertyTweens(params[p], tweenSettings)\n      });\n    }\n  }\n  return properties;\n}\n\n// Tweens\n\nfunction normalizeTweenValues(tween, animatable) {\n  var t = {};\n  for (var p in tween) {\n    var value = getFunctionValue(tween[p], animatable);\n    if (is.arr(value)) {\n      value = value.map(function (v) { return getFunctionValue(v, animatable); });\n      if (value.length === 1) { value = value[0]; }\n    }\n    t[p] = value;\n  }\n  t.duration = parseFloat(t.duration);\n  t.delay = parseFloat(t.delay);\n  return t;\n}\n\nfunction normalizeTweens(prop, animatable) {\n  var previousTween;\n  return prop.tweens.map(function (t) {\n    var tween = normalizeTweenValues(t, animatable);\n    var tweenValue = tween.value;\n    var to = is.arr(tweenValue) ? tweenValue[1] : tweenValue;\n    var toUnit = getUnit(to);\n    var originalValue = getOriginalTargetValue(animatable.target, prop.name, toUnit, animatable);\n    var previousValue = previousTween ? previousTween.to.original : originalValue;\n    var from = is.arr(tweenValue) ? tweenValue[0] : previousValue;\n    var fromUnit = getUnit(from) || getUnit(originalValue);\n    var unit = toUnit || fromUnit;\n    if (is.und(to)) { to = previousValue; }\n    tween.from = decomposeValue(from, unit);\n    tween.to = decomposeValue(getRelativeValue(to, from), unit);\n    tween.start = previousTween ? previousTween.end : 0;\n    tween.end = tween.start + tween.delay + tween.duration + tween.endDelay;\n    tween.easing = parseEasings(tween.easing, tween.duration);\n    tween.isPath = is.pth(tweenValue);\n    tween.isPathTargetInsideSVG = tween.isPath && is.svg(animatable.target);\n    tween.isColor = is.col(tween.from.original);\n    if (tween.isColor) { tween.round = 1; }\n    previousTween = tween;\n    return tween;\n  });\n}\n\n// Tween progress\n\nvar setProgressValue = {\n  css: function (t, p, v) { return t.style[p] = v; },\n  attribute: function (t, p, v) { return t.setAttribute(p, v); },\n  object: function (t, p, v) { return t[p] = v; },\n  transform: function (t, p, v, transforms, manual) {\n    transforms.list.set(p, v);\n    if (p === transforms.last || manual) {\n      var str = '';\n      transforms.list.forEach(function (value, prop) { str += prop + \"(\" + value + \") \"; });\n      t.style.transform = str;\n    }\n  }\n};\n\n// Set Value helper\n\nfunction setTargetsValue(targets, properties) {\n  var animatables = getAnimatables(targets);\n  animatables.forEach(function (animatable) {\n    for (var property in properties) {\n      var value = getFunctionValue(properties[property], animatable);\n      var target = animatable.target;\n      var valueUnit = getUnit(value);\n      var originalValue = getOriginalTargetValue(target, property, valueUnit, animatable);\n      var unit = valueUnit || getUnit(originalValue);\n      var to = getRelativeValue(validateValue(value, unit), originalValue);\n      var animType = getAnimationType(target, property);\n      setProgressValue[animType](target, property, to, animatable.transforms, true);\n    }\n  });\n}\n\n// Animations\n\nfunction createAnimation(animatable, prop) {\n  var animType = getAnimationType(animatable.target, prop.name);\n  if (animType) {\n    var tweens = normalizeTweens(prop, animatable);\n    var lastTween = tweens[tweens.length - 1];\n    return {\n      type: animType,\n      property: prop.name,\n      animatable: animatable,\n      tweens: tweens,\n      duration: lastTween.end,\n      delay: tweens[0].delay,\n      endDelay: lastTween.endDelay\n    }\n  }\n}\n\nfunction getAnimations(animatables, properties) {\n  return filterArray(flattenArray(animatables.map(function (animatable) {\n    return properties.map(function (prop) {\n      return createAnimation(animatable, prop);\n    });\n  })), function (a) { return !is.und(a); });\n}\n\n// Create Instance\n\nfunction getInstanceTimings(animations, tweenSettings) {\n  var animLength = animations.length;\n  var getTlOffset = function (anim) { return anim.timelineOffset ? anim.timelineOffset : 0; };\n  var timings = {};\n  timings.duration = animLength ? Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration; })) : tweenSettings.duration;\n  timings.delay = animLength ? Math.min.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.delay; })) : tweenSettings.delay;\n  timings.endDelay = animLength ? timings.duration - Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration - anim.endDelay; })) : tweenSettings.endDelay;\n  return timings;\n}\n\nvar instanceID = 0;\n\nfunction createNewInstance(params) {\n  var instanceSettings = replaceObjectProps(defaultInstanceSettings, params);\n  var tweenSettings = replaceObjectProps(defaultTweenSettings, params);\n  var properties = getProperties(tweenSettings, params);\n  var animatables = getAnimatables(params.targets);\n  var animations = getAnimations(animatables, properties);\n  var timings = getInstanceTimings(animations, tweenSettings);\n  var id = instanceID;\n  instanceID++;\n  return mergeObjects(instanceSettings, {\n    id: id,\n    children: [],\n    animatables: animatables,\n    animations: animations,\n    duration: timings.duration,\n    delay: timings.delay,\n    endDelay: timings.endDelay\n  });\n}\n\n// Core\n\nvar activeInstances = [];\n\nvar engine = (function () {\n  var raf;\n\n  function play() {\n    if (!raf && (!isDocumentHidden() || !anime.suspendWhenDocumentHidden) && activeInstances.length > 0) {\n      raf = requestAnimationFrame(step);\n    }\n  }\n  function step(t) {\n    // memo on algorithm issue:\n    // dangerous iteration over mutable `activeInstances`\n    // (that collection may be updated from within callbacks of `tick`-ed animation instances)\n    var activeInstancesLength = activeInstances.length;\n    var i = 0;\n    while (i < activeInstancesLength) {\n      var activeInstance = activeInstances[i];\n      if (!activeInstance.paused) {\n        activeInstance.tick(t);\n        i++;\n      } else {\n        activeInstances.splice(i, 1);\n        activeInstancesLength--;\n      }\n    }\n    raf = i > 0 ? requestAnimationFrame(step) : undefined;\n  }\n\n  function handleVisibilityChange() {\n    if (!anime.suspendWhenDocumentHidden) { return; }\n\n    if (isDocumentHidden()) {\n      // suspend ticks\n      raf = cancelAnimationFrame(raf);\n    } else { // is back to active tab\n      // first adjust animations to consider the time that ticks were suspended\n      activeInstances.forEach(\n        function (instance) { return instance ._onDocumentVisibility(); }\n      );\n      engine();\n    }\n  }\n  if (typeof document !== 'undefined') {\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n  }\n\n  return play;\n})();\n\nfunction isDocumentHidden() {\n  return !!document && document.hidden;\n}\n\n// Public Instance\n\nfunction anime(params) {\n  if ( params === void 0 ) params = {};\n\n\n  var startTime = 0, lastTime = 0, now = 0;\n  var children, childrenLength = 0;\n  var resolve = null;\n\n  function makePromise(instance) {\n    var promise = window.Promise && new Promise(function (_resolve) { return resolve = _resolve; });\n    instance.finished = promise;\n    return promise;\n  }\n\n  var instance = createNewInstance(params);\n  var promise = makePromise(instance);\n\n  function toggleInstanceDirection() {\n    var direction = instance.direction;\n    if (direction !== 'alternate') {\n      instance.direction = direction !== 'normal' ? 'normal' : 'reverse';\n    }\n    instance.reversed = !instance.reversed;\n    children.forEach(function (child) { return child.reversed = instance.reversed; });\n  }\n\n  function adjustTime(time) {\n    return instance.reversed ? instance.duration - time : time;\n  }\n\n  function resetTime() {\n    startTime = 0;\n    lastTime = adjustTime(instance.currentTime) * (1 / anime.speed);\n  }\n\n  function seekChild(time, child) {\n    if (child) { child.seek(time - child.timelineOffset); }\n  }\n\n  function syncInstanceChildren(time) {\n    if (!instance.reversePlayback) {\n      for (var i = 0; i < childrenLength; i++) { seekChild(time, children[i]); }\n    } else {\n      for (var i$1 = childrenLength; i$1--;) { seekChild(time, children[i$1]); }\n    }\n  }\n\n  function setAnimationsProgress(insTime) {\n    var i = 0;\n    var animations = instance.animations;\n    var animationsLength = animations.length;\n    while (i < animationsLength) {\n      var anim = animations[i];\n      var animatable = anim.animatable;\n      var tweens = anim.tweens;\n      var tweenLength = tweens.length - 1;\n      var tween = tweens[tweenLength];\n      // Only check for keyframes if there is more than one tween\n      if (tweenLength) { tween = filterArray(tweens, function (t) { return (insTime < t.end); })[0] || tween; }\n      var elapsed = minMax(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;\n      var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed);\n      var strings = tween.to.strings;\n      var round = tween.round;\n      var numbers = [];\n      var toNumbersLength = tween.to.numbers.length;\n      var progress = (void 0);\n      for (var n = 0; n < toNumbersLength; n++) {\n        var value = (void 0);\n        var toNumber = tween.to.numbers[n];\n        var fromNumber = tween.from.numbers[n] || 0;\n        if (!tween.isPath) {\n          value = fromNumber + (eased * (toNumber - fromNumber));\n        } else {\n          value = getPathProgress(tween.value, eased * toNumber, tween.isPathTargetInsideSVG);\n        }\n        if (round) {\n          if (!(tween.isColor && n > 2)) {\n            value = Math.round(value * round) / round;\n          }\n        }\n        numbers.push(value);\n      }\n      // Manual Array.reduce for better performances\n      var stringsLength = strings.length;\n      if (!stringsLength) {\n        progress = numbers[0];\n      } else {\n        progress = strings[0];\n        for (var s = 0; s < stringsLength; s++) {\n          var a = strings[s];\n          var b = strings[s + 1];\n          var n$1 = numbers[s];\n          if (!isNaN(n$1)) {\n            if (!b) {\n              progress += n$1 + ' ';\n            } else {\n              progress += n$1 + b;\n            }\n          }\n        }\n      }\n      setProgressValue[anim.type](animatable.target, anim.property, progress, animatable.transforms);\n      anim.currentValue = progress;\n      i++;\n    }\n  }\n\n  function setCallback(cb) {\n    if (instance[cb] && !instance.passThrough) { instance[cb](instance); }\n  }\n\n  function countIteration() {\n    if (instance.remaining && instance.remaining !== true) {\n      instance.remaining--;\n    }\n  }\n\n  function setInstanceProgress(engineTime) {\n    var insDuration = instance.duration;\n    var insDelay = instance.delay;\n    var insEndDelay = insDuration - instance.endDelay;\n    var insTime = adjustTime(engineTime);\n    instance.progress = minMax((insTime / insDuration) * 100, 0, 100);\n    instance.reversePlayback = insTime < instance.currentTime;\n    if (children) { syncInstanceChildren(insTime); }\n    if (!instance.began && instance.currentTime > 0) {\n      instance.began = true;\n      setCallback('begin');\n    }\n    if (!instance.loopBegan && instance.currentTime > 0) {\n      instance.loopBegan = true;\n      setCallback('loopBegin');\n    }\n    if (insTime <= insDelay && instance.currentTime !== 0) {\n      setAnimationsProgress(0);\n    }\n    if ((insTime >= insEndDelay && instance.currentTime !== insDuration) || !insDuration) {\n      setAnimationsProgress(insDuration);\n    }\n    if (insTime > insDelay && insTime < insEndDelay) {\n      if (!instance.changeBegan) {\n        instance.changeBegan = true;\n        instance.changeCompleted = false;\n        setCallback('changeBegin');\n      }\n      setCallback('change');\n      setAnimationsProgress(insTime);\n    } else {\n      if (instance.changeBegan) {\n        instance.changeCompleted = true;\n        instance.changeBegan = false;\n        setCallback('changeComplete');\n      }\n    }\n    instance.currentTime = minMax(insTime, 0, insDuration);\n    if (instance.began) { setCallback('update'); }\n    if (engineTime >= insDuration) {\n      lastTime = 0;\n      countIteration();\n      if (!instance.remaining) {\n        instance.paused = true;\n        if (!instance.completed) {\n          instance.completed = true;\n          setCallback('loopComplete');\n          setCallback('complete');\n          if (!instance.passThrough && 'Promise' in window) {\n            resolve();\n            promise = makePromise(instance);\n          }\n        }\n      } else {\n        startTime = now;\n        setCallback('loopComplete');\n        instance.loopBegan = false;\n        if (instance.direction === 'alternate') {\n          toggleInstanceDirection();\n        }\n      }\n    }\n  }\n\n  instance.reset = function() {\n    var direction = instance.direction;\n    instance.passThrough = false;\n    instance.currentTime = 0;\n    instance.progress = 0;\n    instance.paused = true;\n    instance.began = false;\n    instance.loopBegan = false;\n    instance.changeBegan = false;\n    instance.completed = false;\n    instance.changeCompleted = false;\n    instance.reversePlayback = false;\n    instance.reversed = direction === 'reverse';\n    instance.remaining = instance.loop;\n    children = instance.children;\n    childrenLength = children.length;\n    for (var i = childrenLength; i--;) { instance.children[i].reset(); }\n    if (instance.reversed && instance.loop !== true || (direction === 'alternate' && instance.loop === 1)) { instance.remaining++; }\n    setAnimationsProgress(instance.reversed ? instance.duration : 0);\n  };\n\n  // internal method (for engine) to adjust animation timings before restoring engine ticks (rAF)\n  instance._onDocumentVisibility = resetTime;\n\n  // Set Value helper\n\n  instance.set = function(targets, properties) {\n    setTargetsValue(targets, properties);\n    return instance;\n  };\n\n  instance.tick = function(t) {\n    now = t;\n    if (!startTime) { startTime = now; }\n    setInstanceProgress((now + (lastTime - startTime)) * anime.speed);\n  };\n\n  instance.seek = function(time) {\n    setInstanceProgress(adjustTime(time));\n  };\n\n  instance.pause = function() {\n    instance.paused = true;\n    resetTime();\n  };\n\n  instance.play = function() {\n    if (!instance.paused) { return; }\n    if (instance.completed) { instance.reset(); }\n    instance.paused = false;\n    activeInstances.push(instance);\n    resetTime();\n    engine();\n  };\n\n  instance.reverse = function() {\n    toggleInstanceDirection();\n    instance.completed = instance.reversed ? false : true;\n    resetTime();\n  };\n\n  instance.restart = function() {\n    instance.reset();\n    instance.play();\n  };\n\n  instance.remove = function(targets) {\n    var targetsArray = parseTargets(targets);\n    removeTargetsFromInstance(targetsArray, instance);\n  };\n\n  instance.reset();\n\n  if (instance.autoplay) { instance.play(); }\n\n  return instance;\n\n}\n\n// Remove targets from animation\n\nfunction removeTargetsFromAnimations(targetsArray, animations) {\n  for (var a = animations.length; a--;) {\n    if (arrayContains(targetsArray, animations[a].animatable.target)) {\n      animations.splice(a, 1);\n    }\n  }\n}\n\nfunction removeTargetsFromInstance(targetsArray, instance) {\n  var animations = instance.animations;\n  var children = instance.children;\n  removeTargetsFromAnimations(targetsArray, animations);\n  for (var c = children.length; c--;) {\n    var child = children[c];\n    var childAnimations = child.animations;\n    removeTargetsFromAnimations(targetsArray, childAnimations);\n    if (!childAnimations.length && !child.children.length) { children.splice(c, 1); }\n  }\n  if (!animations.length && !children.length) { instance.pause(); }\n}\n\nfunction removeTargetsFromActiveInstances(targets) {\n  var targetsArray = parseTargets(targets);\n  for (var i = activeInstances.length; i--;) {\n    var instance = activeInstances[i];\n    removeTargetsFromInstance(targetsArray, instance);\n  }\n}\n\n// Stagger helpers\n\nfunction stagger(val, params) {\n  if ( params === void 0 ) params = {};\n\n  var direction = params.direction || 'normal';\n  var easing = params.easing ? parseEasings(params.easing) : null;\n  var grid = params.grid;\n  var axis = params.axis;\n  var fromIndex = params.from || 0;\n  var fromFirst = fromIndex === 'first';\n  var fromCenter = fromIndex === 'center';\n  var fromLast = fromIndex === 'last';\n  var isRange = is.arr(val);\n  var val1 = isRange ? parseFloat(val[0]) : parseFloat(val);\n  var val2 = isRange ? parseFloat(val[1]) : 0;\n  var unit = getUnit(isRange ? val[1] : val) || 0;\n  var start = params.start || 0 + (isRange ? val1 : 0);\n  var values = [];\n  var maxValue = 0;\n  return function (el, i, t) {\n    if (fromFirst) { fromIndex = 0; }\n    if (fromCenter) { fromIndex = (t - 1) / 2; }\n    if (fromLast) { fromIndex = t - 1; }\n    if (!values.length) {\n      for (var index = 0; index < t; index++) {\n        if (!grid) {\n          values.push(Math.abs(fromIndex - index));\n        } else {\n          var fromX = !fromCenter ? fromIndex%grid[0] : (grid[0]-1)/2;\n          var fromY = !fromCenter ? Math.floor(fromIndex/grid[0]) : (grid[1]-1)/2;\n          var toX = index%grid[0];\n          var toY = Math.floor(index/grid[0]);\n          var distanceX = fromX - toX;\n          var distanceY = fromY - toY;\n          var value = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') { value = -distanceX; }\n          if (axis === 'y') { value = -distanceY; }\n          values.push(value);\n        }\n        maxValue = Math.max.apply(Math, values);\n      }\n      if (easing) { values = values.map(function (val) { return easing(val / maxValue) * maxValue; }); }\n      if (direction === 'reverse') { values = values.map(function (val) { return axis ? (val < 0) ? val * -1 : -val : Math.abs(maxValue - val); }); }\n    }\n    var spacing = isRange ? (val2 - val1) / maxValue : val1;\n    return start + (spacing * (Math.round(values[i] * 100) / 100)) + unit;\n  }\n}\n\n// Timeline\n\nfunction timeline(params) {\n  if ( params === void 0 ) params = {};\n\n  var tl = anime(params);\n  tl.duration = 0;\n  tl.add = function(instanceParams, timelineOffset) {\n    var tlIndex = activeInstances.indexOf(tl);\n    var children = tl.children;\n    if (tlIndex > -1) { activeInstances.splice(tlIndex, 1); }\n    function passThrough(ins) { ins.passThrough = true; }\n    for (var i = 0; i < children.length; i++) { passThrough(children[i]); }\n    var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params));\n    insParams.targets = insParams.targets || params.targets;\n    var tlDuration = tl.duration;\n    insParams.autoplay = false;\n    insParams.direction = tl.direction;\n    insParams.timelineOffset = is.und(timelineOffset) ? tlDuration : getRelativeValue(timelineOffset, tlDuration);\n    passThrough(tl);\n    tl.seek(insParams.timelineOffset);\n    var ins = anime(insParams);\n    passThrough(ins);\n    children.push(ins);\n    var timings = getInstanceTimings(children, params);\n    tl.delay = timings.delay;\n    tl.endDelay = timings.endDelay;\n    tl.duration = timings.duration;\n    tl.seek(0);\n    tl.reset();\n    if (tl.autoplay) { tl.play(); }\n    return tl;\n  };\n  return tl;\n}\n\nanime.version = '3.2.1';\nanime.speed = 1;\n// TODO:#review: naming, documentation\nanime.suspendWhenDocumentHidden = true;\nanime.running = activeInstances;\nanime.remove = removeTargetsFromActiveInstances;\nanime.get = getOriginalTargetValue;\nanime.set = setTargetsValue;\nanime.convertPx = convertPxToUnit;\nanime.path = getPath;\nanime.setDashoffset = setDashoffset;\nanime.stagger = stagger;\nanime.timeline = timeline;\nanime.easing = parseEasings;\nanime.penner = penner;\nanime.random = function (min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; };\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (anime);\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/modules/anime.js?");

/***/ }),

/***/ "./node_modules/rayous/client/modules/voca.js":
/*!****************************************************!*\
  !*** ./node_modules/rayous/client/modules/voca.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n  \n\n  function _extends() {\n    _extends =\n      Object.assign ||\n      function(target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === '[object Arguments]')\n      return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === '[object Arguments]')) {\n      return;\n    }\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i['return'] != null) _i['return']();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError('Invalid attempt to spread non-iterable instance');\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError('Invalid attempt to destructure non-iterable instance');\n  }\n\n  /**\n   * Checks if `value` is `null` or `undefined`\n   *\n   * @ignore\n   * @function isNil\n   * @param {*} value The object to check\n   * @return {boolean} Returns `true` is `value` is `undefined` or `null`, `false` otherwise\n   */\n  function isNil(value) {\n    return value === undefined || value === null;\n  }\n\n  /**\n   * Converts the `value` to a boolean. If `value` is `undefined` or `null`, returns `defaultValue`.\n   *\n   * @ignore\n   * @function toBoolean\n   * @param {*} value The value to convert.\n   * @param {boolean} [defaultValue=false] The default value.\n   * @return {boolean} Returns the coercion to boolean.\n   */\n\n  function coerceToBoolean(value) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (isNil(value)) {\n      return defaultValue;\n    }\n\n    return Boolean(value);\n  }\n\n  /**\n   * Checks whether `subject` is a string primitive type.\n   *\n   * @function isString\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} subject The value to verify.\n   * @return {boolean} Returns `true` if `subject` is string primitive type or `false` otherwise.\n   * @example\n   * v.isString('vacation');\n   * // => true\n   *\n   * v.isString(560);\n   * // => false\n   */\n  function isString(subject) {\n    return typeof subject === 'string';\n  }\n\n  /**\n   * Get the string representation of the `value`.\n   * Converts the `value` to string.\n   * If `value` is `null` or `undefined`, return `defaultValue`.\n   *\n   * @ignore\n   * @function toString\n   * @param {*} value             The value to convert.\n   * @param {*} [defaultValue=''] The default value to return.\n   * @return {string|null}        Returns the string representation of `value`. Returns `defaultValue` if `value` is\n   *                              `null` or `undefined`.\n   */\n\n  function coerceToString(value) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    if (isNil(value)) {\n      return defaultValue;\n    }\n\n    if (isString(value)) {\n      return value;\n    }\n\n    return String(value);\n  }\n\n  /**\n   * Converts the first character of `subject` to upper case. If `restToLower` is `true`, convert the rest of\n   * `subject` to lower case.\n   *\n   * @function capitalize\n   * @static\n   * @since 1.0.0\n   * @memberOf Case\n   * @param  {string}  [subject='']        The string to capitalize.\n   * @param  {boolean} [restToLower=false] Convert the rest of `subject` to lower case.\n   * @return {string}                      Returns the capitalized string.\n   * @example\n   * v.capitalize('apple');\n   * // => 'Apple'\n   *\n   * v.capitalize('aPPle', true);\n   * // => 'Apple'\n   */\n\n  function capitalize(subject, restToLower) {\n    var subjectString = coerceToString(subject);\n    var restToLowerCaseBoolean = coerceToBoolean(restToLower);\n\n    if (subjectString === '') {\n      return '';\n    }\n\n    if (restToLowerCaseBoolean) {\n      subjectString = subjectString.toLowerCase();\n    }\n\n    return subjectString.substr(0, 1).toUpperCase() + subjectString.substr(1);\n  }\n\n  /**\n   * Converts the `subject` to lower case.\n   *\n   * @function lowerCase\n   * @static\n   * @since 1.0.0\n   * @memberOf Case\n   * @param  {string} [subject=''] The string to convert to lower case.\n   * @return {string}              Returns the lower case string.\n   * @example\n   * v.lowerCase('Green');\n   * // => 'green'\n   *\n   * v.lowerCase('BLUE');\n   * // => 'blue'\n   */\n\n  function lowerCase(subject) {\n    var subjectString = coerceToString(subject, '');\n    return subjectString.toLowerCase();\n  }\n\n  /**\n   * A regular expression string matching digits\n   *\n   * @type {string}\n   * @ignore\n   */\n  var digit = '\\\\d';\n  /**\n   * A regular expression string matching whitespace\n   *\n   * @type {string}\n   * @ignore\n   */\n\n  var whitespace = '\\\\s\\\\uFEFF\\\\xA0';\n  /**\n   * A regular expression string matching high surrogate\n   *\n   * @type {string}\n   * @ignore\n   */\n\n  var highSurrogate = '\\\\uD800-\\\\uDBFF';\n  /**\n   * A regular expression string matching low surrogate\n   *\n   * @type {string}\n   * @ignore\n   */\n\n  var lowSurrogate = '\\\\uDC00-\\\\uDFFF';\n  /**\n   * A regular expression string matching diacritical mark\n   *\n   * @type {string}\n   * @ignore\n   */\n\n  var diacriticalMark = '\\\\u0300-\\\\u036F\\\\u1AB0-\\\\u1AFF\\\\u1DC0-\\\\u1DFF\\\\u20D0-\\\\u20FF\\\\uFE20-\\\\uFE2F';\n  /**\n   * A regular expression to match the base character for a combining mark\n   *\n   * @type {string}\n   * @ignore\n   */\n\n  var base = '\\\\0-\\\\u02FF\\\\u0370-\\\\u1AAF\\\\u1B00-\\\\u1DBF\\\\u1E00-\\\\u20CF\\\\u2100-\\\\uD7FF\\\\uE000-\\\\uFE1F\\\\uFE30-\\\\uFFFF';\n  /**\n   * Regular expression to match combining marks\n   *\n   * @see http://unicode.org/faq/char_combmark.html\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_COMBINING_MARKS = new RegExp(\n    '([' +\n      base +\n      ']|[' +\n      highSurrogate +\n      '][' +\n      lowSurrogate +\n      ']|[' +\n      highSurrogate +\n      '](?![' +\n      lowSurrogate +\n      '])|(?:[^' +\n      highSurrogate +\n      ']|^)[' +\n      lowSurrogate +\n      '])([' +\n      diacriticalMark +\n      ']+)',\n    'g'\n  );\n  /**\n   * Regular expression to match surrogate pairs\n   *\n   * @see http://www.unicode.org/faq/utf_bom.html#utf16-2\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_SURROGATE_PAIRS = new RegExp('([' + highSurrogate + '])([' + lowSurrogate + '])', 'g');\n  /**\n   * Regular expression to match a unicode character\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_UNICODE_CHARACTER = new RegExp(\n    '((?:[' +\n      base +\n      ']|[' +\n      highSurrogate +\n      '][' +\n      lowSurrogate +\n      ']|[' +\n      highSurrogate +\n      '](?![' +\n      lowSurrogate +\n      '])|(?:[^' +\n      highSurrogate +\n      ']|^)[' +\n      lowSurrogate +\n      '])(?:[' +\n      diacriticalMark +\n      ']+))|\\\n([' +\n      highSurrogate +\n      '][' +\n      lowSurrogate +\n      '])|\\\n([\\\\n\\\\r\\\\u2028\\\\u2029])|\\\n(.)',\n    'g'\n  );\n  /**\n   * Regular expression to match whitespaces\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_WHITESPACE = new RegExp('[' + whitespace + ']');\n  /**\n   * Regular expression to match whitespaces from the left side\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_TRIM_LEFT = new RegExp('^[' + whitespace + ']+');\n  /**\n   * Regular expression to match whitespaces from the right side\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_TRIM_RIGHT = new RegExp('[' + whitespace + ']+$');\n  /**\n   * Regular expression to match digit characters\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_DIGIT = new RegExp('^' + digit + '+$');\n  /**\n   * Regular expression to match regular expression special characters\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_SPECIAL_CHARACTERS = /[-[\\]{}()*+!<=:?./\\\\^$|#,]/g;\n  /**\n   * Regular expression to match not latin characters\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_NON_LATIN = /[^A-Za-z0-9]/g;\n  /**\n   * Regular expression to match HTML special characters.\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_HTML_SPECIAL_CHARACTERS = /[<>&\"'`]/g;\n  /**\n   * Regular expression to match sprintf format string\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_CONVERSION_SPECIFICATION = /(%{1,2})(?:(\\d+)\\$)?(\\+)?([ 0]|'.{1})?(-)?(\\d+)?(?:\\.(\\d+))?([bcdiouxXeEfgGs])?/g;\n  /**\n   * Regular expression to match trailing zeros in a number\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_TRAILING_ZEROS = /\\.?0+$/g;\n  /**\n   * Regular expression to match a list of tags.\n   *\n   * @see https://html.spec.whatwg.org/multipage/syntax.html#syntax-tag-name\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_TAG_LIST = /<([A-Za-z0-9]+)>/g;\n\n  /**\n   * A regular expression to match the General Punctuation Unicode block\n   *\n   * @type {string}\n   * @ignore\n   */\n\n  var generalPunctuationBlock = '\\\\u2000-\\\\u206F';\n  /**\n   * A regular expression to match non characters from from Basic Latin and Latin-1 Supplement Unicode blocks\n   *\n   * @type {string}\n   * @ignore\n   */\n\n  var nonCharacter = '\\\\x00-\\\\x2F\\\\x3A-\\\\x40\\\\x5B-\\\\x60\\\\x7b-\\\\xBF\\\\xD7\\\\xF7';\n  /**\n   * A regular expression to match the dingbat Unicode block\n   *\n   * @type {string}\n   * @ignore\n   */\n\n  var dingbatBlock = '\\\\u2700-\\\\u27BF';\n  /**\n   * A regular expression string that matches lower case letters: LATIN\n   *\n   * @type {string}\n   * @ignore\n   */\n\n  var lowerCaseLetter =\n    'a-z\\\\xB5\\\\xDF-\\\\xF6\\\\xF8-\\\\xFF\\\\u0101\\\\u0103\\\\u0105\\\\u0107\\\\u0109\\\\u010B\\\\u010D\\\\u010F\\\\u0111\\\\u0113\\\\u0115\\\\u0117\\\\u0119\\\\u011B\\\\u011D\\\\u011F\\\\u0121\\\\u0123\\\\u0125\\\\u0127\\\\u0129\\\\u012B\\\\u012D\\\\u012F\\\\u0131\\\\u0133\\\\u0135\\\\u0137\\\\u0138\\\\u013A\\\\u013C\\\\u013E\\\\u0140\\\\u0142\\\\u0144\\\\u0146\\\\u0148\\\\u0149\\\\u014B\\\\u014D\\\\u014F\\\\u0151\\\\u0153\\\\u0155\\\\u0157\\\\u0159\\\\u015B\\\\u015D\\\\u015F\\\\u0161\\\\u0163\\\\u0165\\\\u0167\\\\u0169\\\\u016B\\\\u016D\\\\u016F\\\\u0171\\\\u0173\\\\u0175\\\\u0177\\\\u017A\\\\u017C\\\\u017E-\\\\u0180\\\\u0183\\\\u0185\\\\u0188\\\\u018C\\\\u018D\\\\u0192\\\\u0195\\\\u0199-\\\\u019B\\\\u019E\\\\u01A1\\\\u01A3\\\\u01A5\\\\u01A8\\\\u01AA\\\\u01AB\\\\u01AD\\\\u01B0\\\\u01B4\\\\u01B6\\\\u01B9\\\\u01BA\\\\u01BD-\\\\u01BF\\\\u01C6\\\\u01C9\\\\u01CC\\\\u01CE\\\\u01D0\\\\u01D2\\\\u01D4\\\\u01D6\\\\u01D8\\\\u01DA\\\\u01DC\\\\u01DD\\\\u01DF\\\\u01E1\\\\u01E3\\\\u01E5\\\\u01E7\\\\u01E9\\\\u01EB\\\\u01ED\\\\u01EF\\\\u01F0\\\\u01F3\\\\u01F5\\\\u01F9\\\\u01FB\\\\u01FD\\\\u01FF\\\\u0201\\\\u0203\\\\u0205\\\\u0207\\\\u0209\\\\u020B\\\\u020D\\\\u020F\\\\u0211\\\\u0213\\\\u0215\\\\u0217\\\\u0219\\\\u021B\\\\u021D\\\\u021F\\\\u0221\\\\u0223\\\\u0225\\\\u0227\\\\u0229\\\\u022B\\\\u022D\\\\u022F\\\\u0231\\\\u0233-\\\\u0239\\\\u023C\\\\u023F\\\\u0240\\\\u0242\\\\u0247\\\\u0249\\\\u024B\\\\u024D\\\\u024F';\n  /**\n   * A regular expression string that matches upper case letters: LATIN\n   *\n   * @type {string}\n   * @ignore\n   */\n\n  var upperCaseLetter =\n    '\\\\x41-\\\\x5a\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\\\\u0100\\\\u0102\\\\u0104\\\\u0106\\\\u0108\\\\u010a\\\\u010c\\\\u010e\\\\u0110\\\\u0112\\\\u0114\\\\u0116\\\\u0118\\\\u011a\\\\u011c\\\\u011e\\\\u0120\\\\u0122\\\\u0124\\\\u0126\\\\u0128\\\\u012a\\\\u012c\\\\u012e\\\\u0130\\\\u0132\\\\u0134\\\\u0136\\\\u0139\\\\u013b\\\\u013d\\\\u013f\\\\u0141\\\\u0143\\\\u0145\\\\u0147\\\\u014a\\\\u014c\\\\u014e\\\\u0150\\\\u0152\\\\u0154\\\\u0156\\\\u0158\\\\u015a\\\\u015c\\\\u015e\\\\u0160\\\\u0162\\\\u0164\\\\u0166\\\\u0168\\\\u016a\\\\u016c\\\\u016e\\\\u0170\\\\u0172\\\\u0174\\\\u0176\\\\u0178\\\\u0179\\\\u017b\\\\u017d\\\\u0181\\\\u0182\\\\u0184\\\\u0186\\\\u0187\\\\u0189-\\\\u018b\\\\u018e-\\\\u0191\\\\u0193\\\\u0194\\\\u0196-\\\\u0198\\\\u019c\\\\u019d\\\\u019f\\\\u01a0\\\\u01a2\\\\u01a4\\\\u01a6\\\\u01a7\\\\u01a9\\\\u01ac\\\\u01ae\\\\u01af\\\\u01b1-\\\\u01b3\\\\u01b5\\\\u01b7\\\\u01b8\\\\u01bc\\\\u01c4\\\\u01c5\\\\u01c7\\\\u01c8\\\\u01ca\\\\u01cb\\\\u01cd\\\\u01cf\\\\u01d1\\\\u01d3\\\\u01d5\\\\u01d7\\\\u01d9\\\\u01db\\\\u01de\\\\u01e0\\\\u01e2\\\\u01e4\\\\u01e6\\\\u01e8\\\\u01ea\\\\u01ec\\\\u01ee\\\\u01f1\\\\u01f2\\\\u01f4\\\\u01f6-\\\\u01f8\\\\u01fa\\\\u01fc\\\\u01fe\\\\u0200\\\\u0202\\\\u0204\\\\u0206\\\\u0208\\\\u020a\\\\u020c\\\\u020e\\\\u0210\\\\u0212\\\\u0214\\\\u0216\\\\u0218\\\\u021a\\\\u021c\\\\u021e\\\\u0220\\\\u0222\\\\u0224\\\\u0226\\\\u0228\\\\u022a\\\\u022c\\\\u022e\\\\u0230\\\\u0232\\\\u023a\\\\u023b\\\\u023d\\\\u023e\\\\u0241\\\\u0243-\\\\u0246\\\\u0248\\\\u024a\\\\u024c\\\\u024e';\n  /**\n   * Regular expression to match Unicode words\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_WORD = new RegExp(\n    '(?:[' +\n      upperCaseLetter +\n      '][' +\n      diacriticalMark +\n      ']*)?(?:[' +\n      lowerCaseLetter +\n      '][' +\n      diacriticalMark +\n      ']*)+|\\\n(?:[' +\n      upperCaseLetter +\n      '][' +\n      diacriticalMark +\n      ']*)+(?![' +\n      lowerCaseLetter +\n      '])|\\\n[' +\n      digit +\n      ']+|\\\n[' +\n      dingbatBlock +\n      ']|\\\n[^' +\n      nonCharacter +\n      generalPunctuationBlock +\n      whitespace +\n      ']+',\n    'g'\n  );\n  /**\n   * Regular expression to match words from Basic Latin and Latin-1 Supplement blocks\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_LATIN_WORD = /[A-Z\\xC0-\\xD6\\xD8-\\xDE]?[a-z\\xDF-\\xF6\\xF8-\\xFF]+|[A-Z\\xC0-\\xD6\\xD8-\\xDE]+(?![a-z\\xDF-\\xF6\\xF8-\\xFF])|\\d+/g;\n  /**\n   * Regular expression to match alpha characters\n   *\n   * @see http://stackoverflow.com/a/22075070/1894471\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_ALPHA = new RegExp('^(?:[' + lowerCaseLetter + upperCaseLetter + '][' + diacriticalMark + ']*)+$');\n  /**\n   * Regular expression to match alpha and digit characters\n   *\n   * @see http://stackoverflow.com/a/22075070/1894471\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_ALPHA_DIGIT = new RegExp(\n    '^((?:[' + lowerCaseLetter + upperCaseLetter + '][' + diacriticalMark + ']*)|[' + digit + '])+$'\n  );\n  /**\n   * Regular expression to match Extended ASCII characters, i.e. the first 255\n   *\n   * @type {RegExp}\n   * @ignore\n   */\n\n  var REGEXP_EXTENDED_ASCII = /^[\\x01-\\xFF]*$/;\n\n  /**\n   * Verifies if `value` is `undefined` or `null` and returns `defaultValue`. In other case returns `value`.\n   *\n   * @ignore\n   * @function nilDefault\n   * @param {*} value The value to verify.\n   * @param {*} defaultValue The default value.\n   * @return {*} Returns `defaultValue` if `value` is `undefined` or `null`, otherwise `defaultValue`.\n   */\n  function nilDefault(value, defaultValue) {\n    return value == null ? defaultValue : value;\n  }\n\n  /**\n   * Get the string representation of the `value`.\n   * Converts the `value` to string.\n   *\n   * @ignore\n   * @function toString\n   * @param {*} value             The value to convert.\n   * @return {string|null}        Returns the string representation of `value`.\n   */\n\n  function toString(value) {\n    if (isNil(value)) {\n      return null;\n    }\n\n    if (isString(value)) {\n      return value;\n    }\n\n    return String(value);\n  }\n\n  /**\n   * Splits `subject` into an array of words.\n   *\n   * @function words\n   * @static\n   * @since 1.0.0\n   * @memberOf Split\n   * @param {string} [subject=''] The string to split into words.\n   * @param {string|RegExp} [pattern] The pattern to watch words. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern, flags)`.\n   * @param {string} [flags=''] The regular expression flags. Applies when `pattern` is string type.\n   * @return {Array} Returns the array of words.\n   * @example\n   * v.words('gravity can cross dimensions');\n   * // => ['gravity', 'can', 'cross', 'dimensions']\n   *\n   * v.words('GravityCanCrossDimensions');\n   * // => ['Gravity', 'Can', 'Cross', 'Dimensions']\n   *\n   * v.words('Gravity - can cross dimensions!');\n   * // => ['Gravity', 'can', 'cross', 'dimensions']\n   *\n   * v.words('Earth gravity', /[^\\s]+/g);\n   * // => ['Earth', 'gravity']\n   */\n\n  function words(subject, pattern, flags) {\n    var subjectString = coerceToString(subject);\n    var patternRegExp;\n\n    if (isNil(pattern)) {\n      patternRegExp = REGEXP_EXTENDED_ASCII.test(subjectString) ? REGEXP_LATIN_WORD : REGEXP_WORD;\n    } else if (pattern instanceof RegExp) {\n      patternRegExp = pattern;\n    } else {\n      var flagsString = toString(nilDefault(flags, ''));\n      patternRegExp = new RegExp(toString(pattern), flagsString);\n    }\n\n    return nilDefault(subjectString.match(patternRegExp), []);\n  }\n\n  /**\n   * Transforms the `word` into camel case chunk.\n   *\n   * @param  {string} word  The word string\n   * @param  {number} index The index of the word in phrase.\n   * @return {string}       The transformed word.\n   * @ignore\n   */\n\n  function wordToCamel(word, index) {\n    return index === 0 ? lowerCase(word) : capitalize(word, true);\n  }\n  /**\n   * Converts the `subject` to <a href=\"https://en.wikipedia.org/wiki/CamelCase\">camel case</a>.\n   *\n   * @function camelCase\n   * @static\n   * @since 1.0.0\n   * @memberOf Case\n   * @param  {string} [subject=''] The string to convert to camel case.\n   * @return {string}              The camel case string.\n   * @example\n   * v.camelCase('bird flight');\n   * // => 'birdFlight'\n   *\n   * v.camelCase('BirdFlight');\n   * // => 'birdFlight'\n   *\n   * v.camelCase('-BIRD-FLIGHT-');\n   * // => 'birdFlight'\n   */\n\n  function camelCase(subject) {\n    var subjectString = coerceToString(subject);\n\n    if (subjectString === '') {\n      return '';\n    }\n\n    return words(subjectString)\n      .map(wordToCamel)\n      .join('');\n  }\n\n  /**\n   * Converts the first character of `subject` to lower case.\n   *\n   * @function decapitalize\n   * @static\n   * @since 1.0.0\n   * @memberOf Case\n   * @param  {string} [subject=''] The string to decapitalize.\n   * @return {string}              Returns the decapitalized string.\n   * @example\n   * v.decapitalize('Sun');\n   * // => 'sun'\n   *\n   * v.decapitalize('moon');\n   * // => 'moon'\n   */\n\n  function decapitalize(subject) {\n    var subjectString = coerceToString(subject);\n\n    if (subjectString === '') {\n      return '';\n    }\n\n    return subjectString.substr(0, 1).toLowerCase() + subjectString.substr(1);\n  }\n\n  /**\n   * Converts the `subject` to <a href=\"https://en.wikipedia.org/wiki/Letter_case#cite_ref-13\">kebab case</a>,\n   * also called <i>spinal case</i> or <i>lisp case</i>.\n   *\n   * @function kebabCase\n   * @static\n   * @since 1.0.0\n   * @memberOf Case\n   * @param  {string} [subject=''] The string to convert to kebab case.\n   * @return {string}              Returns the kebab case string.\n   * @example\n   * v.kebabCase('goodbye blue sky');\n   * // => 'goodbye-blue-sky'\n   *\n   * v.kebabCase('GoodbyeBlueSky');\n   * // => 'goodbye-blue-sky'\n   *\n   * v.kebabCase('-Goodbye-Blue-Sky-');\n   * // => 'goodbye-blue-sky'\n   */\n\n  function kebabCase(subject) {\n    var subjectString = coerceToString(subject);\n\n    if (subjectString === '') {\n      return '';\n    }\n\n    return words(subjectString)\n      .map(lowerCase)\n      .join('-');\n  }\n\n  /**\n   * Converts the `subject` to <a href=\"https://en.wikipedia.org/wiki/Snake_case\">snake case</a>.\n   *\n   * @function snakeCase\n   * @static\n   * @since 1.0.0\n   * @memberOf Case\n   * @param  {string} [subject=''] The string to convert to snake case.\n   * @return {string}              Returns the snake case string.\n   * @example\n   * v.snakeCase('learning to fly');\n   * // => 'learning_to_fly'\n   *\n   * v.snakeCase('LearningToFly');\n   * // => 'learning_to_fly'\n   *\n   * v.snakeCase('-Learning-To-Fly-');\n   * // => 'learning_to_fly'\n   */\n\n  function snakeCase(subject) {\n    var subjectString = coerceToString(subject);\n\n    if (subjectString === '') {\n      return '';\n    }\n\n    return words(subjectString)\n      .map(lowerCase)\n      .join('_');\n  }\n\n  /**\n   * Converts the `subject` to upper case.\n   *\n   * @function upperCase\n   * @static\n   * @since 1.0.0\n   * @memberOf Case\n   * @param  {string} [subject=''] The string to convert to upper case.\n   * @return {string}              Returns the upper case string.\n   * @example\n   * v.upperCase('school');\n   * // => 'SCHOOL'\n   */\n\n  function upperCase(subject) {\n    var subjectString = coerceToString(subject);\n    return subjectString.toUpperCase();\n  }\n\n  /**\n   * Converts the uppercase alpha characters of `subject` to lowercase and lowercase\n   * characters to uppercase.\n   *\n   * @function swapCase\n   * @static\n   * @since 1.3.0\n   * @memberOf Case\n   * @param  {string} [subject=''] The string to swap the case.\n   * @return {string}              Returns the converted string.\n   * @example\n   * v.swapCase('League of Shadows');\n   * // => 'lEAGUE OF sHADOWS'\n   *\n   * v.swapCase('2 Bees');\n   * // => '2 bEES'\n   */\n\n  function swapCase(subject) {\n    var subjectString = coerceToString(subject);\n    return subjectString.split('').reduce(swapAndConcat, '');\n  }\n\n  function swapAndConcat(swapped, character) {\n    var lowerCase = character.toLowerCase();\n    var upperCase = character.toUpperCase();\n    return swapped + (character === lowerCase ? upperCase : lowerCase);\n  }\n\n  /**\n   * Converts the subject to title case.\n   *\n   * @function titleCase\n   * @static\n   * @since 1.4.0\n   * @memberOf Case\n   * @param  {string} [subject=''] The string to convert to title case.\n   * @param  {Array}  [noSplit]    Do not split words at the specified characters.\n   * @return {string}              Returns the title case string.\n   * @example\n   * v.titleCase('learning to fly');\n   * // => 'Learning To Fly'\n   *\n   * v.titleCase('jean-luc is good-looking', ['-']);\n   * // => 'Jean-luc Is Good-looking'\n   */\n\n  function titleCase(subject, noSplit) {\n    var subjectString = coerceToString(subject);\n    var noSplitArray = Array.isArray(noSplit) ? noSplit : [];\n    var wordsRegExp = REGEXP_EXTENDED_ASCII.test(subjectString) ? REGEXP_LATIN_WORD : REGEXP_WORD;\n    return subjectString.replace(wordsRegExp, function(word, index) {\n      var isNoSplit = index > 0 && noSplitArray.indexOf(subjectString[index - 1]) >= 0;\n      return isNoSplit ? word.toLowerCase() : capitalize(word, true);\n    });\n  }\n\n  /**\n   * Clip the number to interval `downLimit` to `upLimit`.\n   *\n   * @ignore\n   * @function clipNumber\n   * @param {number} value The number to clip\n   * @param {number} downLimit The down limit\n   * @param {number} upLimit The upper limit\n   * @return {number} The clipped number\n   */\n  function clipNumber(value, downLimit, upLimit) {\n    if (value <= downLimit) {\n      return downLimit;\n    }\n\n    if (value >= upLimit) {\n      return upLimit;\n    }\n\n    return value;\n  }\n\n  /**\n   * Max save integer value\n   *\n   * @ignore\n   * @type {number}\n   */\n  var MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\n  /**\n   * Transforms `value` to an integer.\n   *\n   * @ignore\n   * @function toInteger\n   * @param {number} value The number to transform.\n   * @returns {number} Returns the transformed integer.\n   */\n\n  function toInteger(value) {\n    if (value === Infinity) {\n      return MAX_SAFE_INTEGER;\n    }\n\n    if (value === -Infinity) {\n      return -MAX_SAFE_INTEGER;\n    }\n\n    return ~~value;\n  }\n\n  /**\n   * Truncates `subject` to a new `length`.\n   *\n   * @function truncate\n   * @static\n   * @since 1.0.0\n   * @memberOf Chop\n   * @param  {string} [subject=''] The string to truncate.\n   * @param  {int}    length       The length to truncate the string.\n   * @param  {string} [end='...']  The string to be added at the end.\n   * @return {string}              Returns the truncated string.\n   * @example\n   * v.truncate('Once upon a time', 7);\n   * // => 'Once...'\n   *\n   * v.truncate('Good day, Little Red Riding Hood', 14, ' (...)');\n   * // => 'Good day (...)'\n   *\n   * v.truncate('Once upon', 10);\n   * // => 'Once upon'\n   */\n\n  function truncate(subject, length, end) {\n    var subjectString = coerceToString(subject);\n    var lengthInt = isNil(length) ? subjectString.length : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);\n    var endString = coerceToString(end, '...');\n\n    if (lengthInt >= subjectString.length) {\n      return subjectString;\n    }\n\n    return subjectString.substr(0, length - endString.length) + endString;\n  }\n\n  /**\n   * Access a character from `subject` at specified `position`.\n   *\n   * @function charAt\n   * @static\n   * @since 1.0.0\n   * @memberOf Chop\n   * @param  {string} [subject=''] The string to extract from.\n   * @param  {numbers} position The position to get the character.\n   * @return {string} Returns the character at specified position.\n   * @example\n   * v.charAt('helicopter', 0);\n   * // => 'h'\n   *\n   * v.charAt('helicopter', 1);\n   * // => 'e'\n   */\n\n  function charAt(subject, position) {\n    var subjectString = coerceToString(subject);\n    return subjectString.charAt(position);\n  }\n\n  var HIGH_SURROGATE_START = 0xd800;\n  var HIGH_SURROGATE_END = 0xdbff;\n  var LOW_SURROGATE_START = 0xdc00;\n  var LOW_SURROGATE_END = 0xdfff;\n  /**\n   * Checks if `codePoint` is a high-surrogate number from range 0xD800 to 0xDBFF.\n   *\n   * @ignore\n   * @param {number} codePoint The code point number to be verified\n   * @return {boolean} Returns a boolean whether `codePoint` is a high-surrogate number.\n   */\n\n  function isHighSurrogate(codePoint) {\n    return codePoint >= HIGH_SURROGATE_START && codePoint <= HIGH_SURROGATE_END;\n  }\n  /**\n   * Checks if `codePoint` is a low-surrogate number from range 0xDC00 to 0xDFFF.\n   *\n   * @ignore\n   * @param {number} codePoint The code point number to be verified\n   * @return {boolean} Returns a boolean whether `codePoint` is a low-surrogate number.\n   */\n\n  function isLowSurrogate(codePoint) {\n    return codePoint >= LOW_SURROGATE_START && codePoint <= LOW_SURROGATE_END;\n  }\n  /**\n   * Get the astral code point number based on surrogate pair numbers.\n   *\n   * @ignore\n   * @param {number} highSurrogate The high-surrogate code point number.\n   * @param {number} lowSurrogate The low-surrogate code point number.\n   * @return {number} Returns the astral symbol number.\n   */\n\n  function getAstralNumberFromSurrogatePair(highSurrogate, lowSurrogate) {\n    return (highSurrogate - HIGH_SURROGATE_START) * 0x400 + lowSurrogate - LOW_SURROGATE_START + 0x10000;\n  }\n\n  /**\n   * Get the number representation of the `value`.\n   * Converts the `value` to number.\n   * If `value` is `null` or `undefined`, return `defaultValue`.\n   *\n   * @ignore\n   * @function toString\n   * @param {*} value             The value to convert.\n   * @param {*} [defaultValue=''] The default value to return.\n   * @return {number|null}        Returns the number representation of `value`. Returns `defaultValue` if `value` is\n   *                              `null` or `undefined`.\n   */\n\n  function coerceToNumber(value) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (isNil(value)) {\n      return defaultValue;\n    }\n\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    return Number(value);\n  }\n\n  /**\n   * If `value` is `NaN`, return `defaultValue`. In other case returns `value`.\n   *\n   * @ignore\n   * @function nanDefault\n   * @param {*} value The value to verify.\n   * @param {*} defaultValue The default value.\n   * @return {*} Returns `defaultValue` if `value` is `NaN`, otherwise `defaultValue`.\n   */\n  function nanDefault(value, defaultValue) {\n    return value !== value ? defaultValue : value;\n  }\n\n  /**\n   * Get the Unicode code point value of the character at `position`. <br/>\n   * If a valid UTF-16 <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">\n   * surrogate pair</a> starts at `position`, the\n   * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#astralplanes\">astral code point</a>\n   * value at `position` is returned.\n   *\n   * @function codePointAt\n   * @static\n   * @since 1.0.0\n   * @memberOf Chop\n   * @param  {string} [subject=''] The string to extract from.\n   * @param  {number} position The position to get the code point number.\n   * @return {number} Returns a non-negative number less than or equal to `0x10FFFF`.\n   * @example\n   * v.codePointAt('rain', 1);\n   * // => 97, or 0x0061\n   *\n   * v.codePointAt('\\uD83D\\uDE00 is smile', 0); // or '😀 is smile'\n   * // => 128512, or 0x1F600\n   */\n\n  function codePointAt(subject, position) {\n    var subjectString = coerceToString(subject);\n    var subjectStringLength = subjectString.length;\n    var positionNumber = coerceToNumber(position);\n    positionNumber = nanDefault(positionNumber, 0);\n\n    if (positionNumber < 0 || positionNumber >= subjectStringLength) {\n      return undefined;\n    }\n\n    var firstCodePoint = subjectString.charCodeAt(positionNumber);\n    var secondCodePoint;\n\n    if (isHighSurrogate(firstCodePoint) && subjectStringLength > positionNumber + 1) {\n      secondCodePoint = subjectString.charCodeAt(positionNumber + 1);\n\n      if (isLowSurrogate(secondCodePoint)) {\n        return getAstralNumberFromSurrogatePair(firstCodePoint, secondCodePoint);\n      }\n    }\n\n    return firstCodePoint;\n  }\n\n  /**\n   * Extracts the first `length` characters from `subject`.\n   *\n   * @function first\n   * @static\n   * @since 1.0.0\n   * @memberOf Chop\n   * @param  {string} [subject=''] The string to extract from.\n   * @param  {int}    [length=1]   The number of characters to extract.\n   * @return {string}              Returns the first characters string.\n   * @example\n   * v.first('helicopter');\n   * // => 'h'\n   *\n   * v.first('vehicle', 2);\n   * // => 've'\n   *\n   * v.first('car', 5);\n   * // => 'car'\n   */\n\n  function first(subject, length) {\n    var subjectString = coerceToString(subject);\n    var lengthInt = isNil(length) ? 1 : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);\n\n    if (subjectString.length <= lengthInt) {\n      return subjectString;\n    }\n\n    return subjectString.substr(0, lengthInt);\n  }\n\n  /**\n   * Get a grapheme from `subject` at specified `position` taking care of\n   * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and\n   * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>.\n   *\n   * @function graphemeAt\n   * @static\n   * @since 1.0.0\n   * @memberOf Chop\n   * @param  {string} [subject=''] The string to extract from.\n   * @param  {number} position The position to get the grapheme.\n   * @return {string} Returns the grapheme at specified position.\n   * @example\n   * v.graphemeAt('\\uD835\\uDC00\\uD835\\uDC01', 0); // or '𝐀𝐁'\n   * // => 'A'\n   *\n   * v.graphemeAt('cafe\\u0301', 3); // or 'café'\n   * // => 'é'\n   */\n\n  function graphemeAt(subject, position) {\n    var subjectString = coerceToString(subject);\n    var positionNumber = coerceToNumber(position);\n    var graphemeMatch;\n    var graphemeMatchIndex = 0;\n    positionNumber = nanDefault(positionNumber, 0);\n\n    while ((graphemeMatch = REGEXP_UNICODE_CHARACTER.exec(subjectString)) !== null) {\n      if (graphemeMatchIndex === positionNumber) {\n        REGEXP_UNICODE_CHARACTER.lastIndex = 0;\n        return graphemeMatch[0];\n      }\n\n      graphemeMatchIndex++;\n    }\n\n    return '';\n  }\n\n  /**\n   * Extracts the last `length` characters from `subject`.\n   *\n   * @function last\n   * @static\n   * @since 1.0.0\n   * @memberOf Chop\n   * @param  {string} [subject=''] The string to extract from.\n   * @param  {int}    [length=1]   The number of characters to extract.\n   * @return {string}              Returns the last characters string.\n   * @example\n   * v.last('helicopter');\n   * // => 'r'\n   *\n   * v.last('vehicle', 2);\n   * // => 'le'\n   *\n   * v.last('car', 5);\n   * // => 'car'\n   */\n\n  function last(subject, length) {\n    var subjectString = coerceToString(subject);\n    var lengthInt = isNil(length) ? 1 : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);\n\n    if (subjectString.length <= lengthInt) {\n      return subjectString;\n    }\n\n    return subjectString.substr(subjectString.length - lengthInt, lengthInt);\n  }\n\n  /**\n   * Truncates `subject` to a new `length` and does not break the words. Guarantees that the truncated string is no longer\n   * than `length`.\n   *\n   * @static\n   * @function prune\n   * @since 1.0.0\n   * @memberOf Chop\n   * @param  {string} [subject=''] The string to prune.\n   * @param  {int}    length       The length to prune the string.\n   * @param  {string} [end='...']  The string to be added at the end.\n   * @return {string}              Returns the pruned string.\n   * @example\n   * v.prune('Once upon a time', 7);\n   * // => 'Once...'\n   *\n   * v.prune('Good day, Little Red Riding Hood', 16, ' (more)');\n   * // => 'Good day (more)'\n   *\n   * v.prune('Once upon', 10);\n   * // => 'Once upon'\n   */\n\n  function prune(subject, length, end) {\n    var subjectString = coerceToString(subject);\n    var lengthInt = isNil(length) ? subjectString.length : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);\n    var endString = coerceToString(end, '...');\n\n    if (lengthInt >= subjectString.length) {\n      return subjectString;\n    }\n\n    var pattern = REGEXP_EXTENDED_ASCII.test(subjectString) ? REGEXP_LATIN_WORD : REGEXP_WORD;\n    var truncatedLength = 0;\n    subjectString.replace(pattern, function(word, offset) {\n      var wordInsertLength = offset + word.length;\n\n      if (wordInsertLength <= lengthInt - endString.length) {\n        truncatedLength = wordInsertLength;\n      }\n    });\n    return subjectString.substr(0, truncatedLength) + endString;\n  }\n\n  /**\n   * Extracts from `subject` a string from `start` position up to `end` position. The character at `end` position is not\n   * included.\n   *\n   * @function slice\n   * @static\n   * @since 1.0.0\n   * @memberOf Chop\n   * @param  {string} [subject='']         The string to extract from.\n   * @param  {number} start                The position to start extraction. If negative use `subject.length + start`.\n   * @param  {number} [end=subject.length] The position to end extraction. If negative use `subject.length + end`.\n   * @return {string}                      Returns the extracted string.\n   * @note Uses native `String.prototype.slice()`\n   * @example\n   * v.slice('miami', 1);\n   * // => 'iami'\n   *\n   * v.slice('florida', -4);\n   * // => 'rida'\n   *\n   * v.slice('florida', 1, 4);\n   * // => \"lor\"\n   */\n\n  function slice(subject, start, end) {\n    return coerceToString(subject).slice(start, end);\n  }\n\n  /**\n   * Extracts from `subject` a string from `start` position a number of `length` characters.\n   *\n   * @function substr\n   * @static\n   * @since 1.0.0\n   * @memberOf Chop\n   * @param  {string} [subject='']                 The string to extract from.\n   * @param  {number} start                        The position to start extraction.\n   * @param  {number} [length=subject.endOfString] The number of characters to extract. If omitted, extract to the end of `subject`.\n   * @return {string}                              Returns the extracted string.\n   * @note Uses native `String.prototype.substr()`\n   * @example\n   * v.substr('infinite loop', 9);\n   * // => 'loop'\n   *\n   * v.substr('dreams', 2, 2);\n   * // => 'ea'\n   */\n\n  function substr(subject, start, length) {\n    return coerceToString(subject).substr(start, length);\n  }\n\n  /**\n   * Extracts from `subject` a string from `start` position up to `end` position. The character at `end` position is not\n   * included.\n   *\n   * @function substring\n   * @static\n   * @since 1.0.0\n   * @memberOf Chop\n   * @param  {string} [subject='']         The string to extract from.\n   * @param  {number} start                The position to start extraction.\n   * @param  {number} [end=subject.length] The position to end extraction.\n   * @return {string}                      Returns the extracted string.\n   * @note Uses native `String.prototype.substring()`\n   * @example\n   * v.substring('beach', 1);\n   * // => 'each'\n   *\n   * v.substring('ocean', 1, 3);\n   * // => 'ea'\n   */\n\n  function substring(subject, start, end) {\n    return coerceToString(subject).substring(start, end);\n  }\n\n  /**\n   * Counts the characters in `subject`.<br/>\n   *\n   * @function count\n   * @static\n   * @since 1.0.0\n   * @memberOf Count\n   * @param  {string} [subject=''] The string to count characters.\n   * @return {number}              Returns the number of characters in `subject`.\n   * @example\n   * v.count('rain');\n   * // => 4\n   */\n\n  function count(subject) {\n    return coerceToString(subject).length;\n  }\n\n  /**\n   * Counts the graphemes in `subject` taking care of\n   * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and\n   * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>.\n   *\n   * @function  countGraphemes\n   * @static\n   * @since 1.0.0\n   * @memberOf Count\n   * @param  {string} [subject=''] The string to count graphemes.\n   * @return {number}              Returns the number of graphemes in `subject`.\n   * @example\n   * v.countGraphemes('cafe\\u0301'); // or 'café'\n   * // => 4\n   *\n   * v.countGraphemes('\\uD835\\uDC00\\uD835\\uDC01'); // or '𝐀𝐁'\n   * // => 2\n   *\n   * v.countGraphemes('rain');\n   * // => 4\n   */\n\n  function countGrapheme(subject) {\n    return coerceToString(subject)\n      .replace(REGEXP_COMBINING_MARKS, '*')\n      .replace(REGEXP_SURROGATE_PAIRS, '*').length;\n  }\n\n  /**\n   * Counts the number of `substring` appearances in `subject`.\n   *\n   * @function countSubstrings\n   * @static\n   * @since 1.0.0\n   * @memberOf Count\n   * @param  {string} [subject=''] The string where to count.\n   * @param  {string} substring    The substring to be counted.\n   * @return {number}              Returns the number of `substring` appearances.\n   * @example\n   * v.countSubstrings('bad boys, bad boys whatcha gonna do?', 'boys');\n   * // => 2\n   *\n   * v.countSubstrings('every dog has its day', 'cat');\n   * // => 0\n   */\n\n  function countSubstrings(subject, substring) {\n    var subjectString = coerceToString(subject);\n    var substringString = coerceToString(substring);\n    var substringLength = substringString.length;\n    var count = 0;\n    var matchIndex = 0;\n\n    if (subjectString === '' || substringString === '') {\n      return count;\n    }\n\n    do {\n      matchIndex = subjectString.indexOf(substringString, matchIndex);\n\n      if (matchIndex !== -1) {\n        count++;\n        matchIndex += substringLength;\n      }\n    } while (matchIndex !== -1);\n\n    return count;\n  }\n\n  var reduce = Array.prototype.reduce;\n  /**\n   * Counts the characters in `subject` for which `predicate` returns truthy.\n   *\n   * @function  countWhere\n   * @static\n   * @since 1.0.0\n   * @memberOf Count\n   * @param  {string}   [subject=''] The string to count characters.\n   * @param  {Function} predicate    The predicate function invoked on each character with parameters `(character, index, string)`.\n   * @param  {Object}   [context]    The context to invoke the `predicate`.\n   * @return {number}                Returns the number of characters for which `predicate` returns truthy.\n   * @example\n   * v.countWhere('hola!', v.isAlpha);\n   * // => 4\n   *\n   * v.countWhere('2022', function(character, index, str) {\n   *   return character === '2';\n   * });\n   * // => 3\n   */\n\n  function countWhere(subject, predicate, context) {\n    var subjectString = coerceToString(subject);\n\n    if (subjectString === '' || typeof predicate !== 'function') {\n      return 0;\n    }\n\n    var predicateWithContext = predicate.bind(context);\n    return reduce.call(\n      subjectString,\n      function(countTruthy, character, index) {\n        return predicateWithContext(character, index, subjectString) ? countTruthy + 1 : countTruthy;\n      },\n      0\n    );\n  }\n\n  /**\n   * Counts the number of words in `subject`.\n   *\n   * @function countWords\n   * @static\n   * @since 1.0.0\n   * @memberOf Count\n   * @param {string} [subject=''] The string to split into words.\n   * @param {string|RegExp} [pattern] The pattern to watch words. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern, flags)`.\n   * @param {string} [flags=''] The regular expression flags. Applies when `pattern` is string type.\n   * @return {number} Returns the number of words.\n   * @example\n   * v.countWords('gravity can cross dimensions');\n   * // => 4\n   *\n   * v.countWords('GravityCanCrossDimensions');\n   * // => 4\n   *\n   * v.countWords('Gravity - can cross dimensions!');\n   * // => 4\n   *\n   * v.words('Earth gravity', /[^\\s]+/g);\n   * // => 2\n   */\n\n  function countWords(subject, pattern, flags) {\n    return words(subject, pattern, flags).length;\n  }\n\n  /**\n   * The current index.\n   *\n   * @ignore\n   * @name ReplacementIndex#index\n   * @type {number}\n   * @return {ReplacementIndex} ReplacementIndex instance.\n   */\n\n  function ReplacementIndex() {\n    this.index = 0;\n  }\n  /**\n   * Increment the current index.\n   *\n   * @ignore\n   * @return {undefined}\n   */\n\n  ReplacementIndex.prototype.increment = function() {\n    this.index++;\n  };\n  /**\n   * Increment the current index by position.\n   *\n   * @ignore\n   * @param {number} [position] The replacement position.\n   * @return {undefined}\n   */\n\n  ReplacementIndex.prototype.incrementOnEmptyPosition = function(position) {\n    if (isNil(position)) {\n      this.increment();\n    }\n  };\n  /**\n   * Get the replacement index by position.\n   *\n   * @ignore\n   * @param {number} [position] The replacement position.\n   * @return {number} The replacement index.\n   */\n\n  ReplacementIndex.prototype.getIndexByPosition = function(position) {\n    return isNil(position) ? this.index : position - 1;\n  };\n\n  // Type specifiers\n  var TYPE_INTEGER = 'i';\n  var TYPE_INTEGER_BINARY = 'b';\n  var TYPE_INTEGER_ASCII_CHARACTER = 'c';\n  var TYPE_INTEGER_DECIMAL = 'd';\n  var TYPE_INTEGER_OCTAL = 'o';\n  var TYPE_INTEGER_UNSIGNED_DECIMAL = 'u';\n  var TYPE_INTEGER_HEXADECIMAL = 'x';\n  var TYPE_INTEGER_HEXADECIMAL_UPPERCASE = 'X';\n  var TYPE_FLOAT_SCIENTIFIC = 'e';\n  var TYPE_FLOAT_SCIENTIFIC_UPPERCASE = 'E';\n  var TYPE_FLOAT = 'f';\n  var TYPE_FLOAT_SHORT = 'g';\n  var TYPE_FLOAT_SHORT_UPPERCASE = 'G';\n  var TYPE_STRING = 's'; // Simple literals\n  var LITERAL_SINGLE_QUOTE = \"'\";\n  var LITERAL_PLUS = '+';\n  var LITERAL_MINUS = '-';\n  var LITERAL_PERCENT_SPECIFIER = '%%'; // Radix constants to format numbers\n\n  var RADIX_BINARY = 2;\n  var RADIX_OCTAL = 8;\n  var RADIX_HEXADECIMAL = 16;\n\n  /**\n   * Repeats the `subject` number of `times`.\n   *\n   * @function repeat\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to repeat.\n   * @param {number} [times=1] The number of times to repeat.\n   * @return {string} Returns the repeated string.\n   * @example\n   * v.repeat('w', 3);\n   * // => 'www'\n   *\n   * v.repeat('world', 0);\n   * // => ''\n   */\n\n  function repeat(subject, times) {\n    var subjectString = coerceToString(subject);\n    var timesInt = isNil(times) ? 1 : clipNumber(toInteger(times), 0, MAX_SAFE_INTEGER);\n    var repeatString = '';\n\n    while (timesInt) {\n      if (timesInt & 1) {\n        repeatString += subjectString;\n      }\n\n      if (timesInt > 1) {\n        subjectString += subjectString;\n      }\n\n      timesInt >>= 1;\n    }\n\n    return repeatString;\n  }\n\n  /**\n   * Creates the padding string.\n   *\n   * @ignore\n   * @param {string} padCharacters The characters to create padding string.\n   * @param {number} length The padding string length.\n   * @return {string} The padding string.\n   */\n\n  function buildPadding(padCharacters, length) {\n    var padStringRepeat = toInteger(length / padCharacters.length);\n    var padStringRest = length % padCharacters.length;\n    return repeat(padCharacters, padStringRepeat + padStringRest).substr(0, length);\n  }\n\n  /**\n   * Pads `subject` from left to a new `length`.\n   *\n   * @function padLeft\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to pad.\n   * @param {int} [length=0] The length to left pad the string. No changes are made if `length` is less than `subject.length`.\n   * @param {string} [pad=' '] The string to be used for padding.\n   * @return {string} Returns the left padded string.\n   * @example\n   * v.padLeft('dog', 5);\n   * // => '  dog'\n   *\n   * v.padLeft('bird', 6, '-');\n   * // => '--bird'\n   *\n   * v.padLeft('cat', 6, '-=');\n   * // => '-=-cat'\n   */\n\n  function padLeft(subject, length, pad) {\n    var subjectString = coerceToString(subject);\n    var lengthInt = isNil(length) ? 0 : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);\n    var padString = coerceToString(pad, ' ');\n\n    if (lengthInt <= subjectString.length) {\n      return subjectString;\n    }\n\n    return buildPadding(padString, lengthInt - subjectString.length) + subjectString;\n  }\n\n  /**\n   * Pads `subject` from right to a new `length`.\n   *\n   * @function padRight\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to pad.\n   * @param {int} [length=0] The length to right pad the string. No changes are made if `length` is less than `subject.length`.\n   * @param {string} [pad=' '] The string to be used for padding.\n   * @return {string} Returns the right padded string.\n   * @example\n   * v.padRight('dog', 5);\n   * // => 'dog  '\n   *\n   * v.padRight('bird', 6, '-');\n   * // => 'bird--'\n   *\n   * v.padRight('cat', 6, '-=');\n   * // => 'cat-=-'\n   */\n\n  function padRight(subject, length, pad) {\n    var subjectString = coerceToString(subject);\n    var lengthInt = isNil(length) ? 0 : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);\n    var padString = coerceToString(pad, ' ');\n\n    if (lengthInt <= subjectString.length) {\n      return subjectString;\n    }\n\n    return subjectString + buildPadding(padString, lengthInt - subjectString.length);\n  }\n\n  /**\n   * Aligns and pads `subject` string.\n   *\n   * @ignore\n   * @param {string} subject The subject string.\n   * @param {ConversionSpecification} conversion The conversion specification object.\n   * @return {string} Returns the aligned and padded string.\n   */\n\n  function alignAndPad(subject, conversion) {\n    var width = conversion.width;\n\n    if (isNil(width) || subject.length >= width) {\n      return subject;\n    }\n\n    var padType = conversion.alignmentSpecifier === LITERAL_MINUS ? padRight : padLeft;\n    return padType(subject, width, conversion.getPaddingCharacter());\n  }\n\n  /**\n   * Add sign to the formatted number.\n   *\n   * @ignore\n   * @name addSignToFormattedNumber\n   * @param  {number} replacementNumber The number to be replaced.\n   * @param  {string} formattedReplacement The formatted version of number.\n   * @param  {ConversionSpecification} conversion The conversion specification object.\n   * @return {string} Returns the formatted number string with a sign.\n   */\n\n  function addSignToFormattedNumber(replacementNumber, formattedReplacement, conversion) {\n    if (conversion.signSpecifier === LITERAL_PLUS && replacementNumber >= 0) {\n      formattedReplacement = LITERAL_PLUS + formattedReplacement;\n    }\n\n    return formattedReplacement;\n  }\n\n  /**\n   * Formats a float type according to specifiers.\n   *\n   * @ignore\n   * @param  {string} replacement The string to be formatted.\n   * @param  {ConversionSpecification} conversion The conversion specification object.\n   * @return {string} Returns the formatted string.\n   */\n\n  function float(replacement, conversion) {\n    var replacementNumber = parseFloat(replacement);\n    var formattedReplacement;\n\n    if (isNaN(replacementNumber)) {\n      replacementNumber = 0;\n    }\n\n    var precision = coerceToNumber(conversion.precision, 6);\n\n    switch (conversion.typeSpecifier) {\n      case TYPE_FLOAT:\n        formattedReplacement = replacementNumber.toFixed(precision);\n        break;\n\n      case TYPE_FLOAT_SCIENTIFIC:\n        formattedReplacement = replacementNumber.toExponential(precision);\n        break;\n\n      case TYPE_FLOAT_SCIENTIFIC_UPPERCASE:\n        formattedReplacement = replacementNumber.toExponential(precision).toUpperCase();\n        break;\n\n      case TYPE_FLOAT_SHORT:\n      case TYPE_FLOAT_SHORT_UPPERCASE:\n        formattedReplacement = formatFloatAsShort(replacementNumber, precision, conversion);\n        break;\n    }\n\n    formattedReplacement = addSignToFormattedNumber(replacementNumber, formattedReplacement, conversion);\n    return coerceToString(formattedReplacement);\n  }\n  /**\n   * Formats the short float.\n   *\n   * @ignore\n   * @param  {number} replacementNumber The number to format.\n   * @param  {number} precision The precision to format the float.\n   * @param  {ConversionSpecification} conversion The conversion specification object.\n   * @return {string}  Returns the formatted short float.\n   */\n\n  function formatFloatAsShort(replacementNumber, precision, conversion) {\n    if (replacementNumber === 0) {\n      return '0';\n    }\n\n    var nonZeroPrecision = precision === 0 ? 1 : precision;\n    var formattedReplacement = replacementNumber.toPrecision(nonZeroPrecision).replace(REGEXP_TRAILING_ZEROS, '');\n\n    if (conversion.typeSpecifier === TYPE_FLOAT_SHORT_UPPERCASE) {\n      formattedReplacement = formattedReplacement.toUpperCase();\n    }\n\n    return formattedReplacement;\n  }\n\n  /**\n   * Formats an integer type according to specifiers.\n   *\n   * @ignore\n   * @param  {string} replacement The string to be formatted.\n   * @param  {ConversionSpecification} conversion The conversion specification object.\n   * @return {string} Returns the formatted string.\n   */\n\n  function integerBase(replacement, conversion) {\n    var integer = parseInt(replacement);\n\n    if (isNaN(integer)) {\n      integer = 0;\n    }\n\n    integer = integer >>> 0;\n\n    switch (conversion.typeSpecifier) {\n      case TYPE_INTEGER_ASCII_CHARACTER:\n        integer = String.fromCharCode(integer);\n        break;\n\n      case TYPE_INTEGER_BINARY:\n        integer = integer.toString(RADIX_BINARY);\n        break;\n\n      case TYPE_INTEGER_OCTAL:\n        integer = integer.toString(RADIX_OCTAL);\n        break;\n\n      case TYPE_INTEGER_HEXADECIMAL:\n        integer = integer.toString(RADIX_HEXADECIMAL);\n        break;\n\n      case TYPE_INTEGER_HEXADECIMAL_UPPERCASE:\n        integer = integer.toString(RADIX_HEXADECIMAL).toUpperCase();\n        break;\n    }\n\n    return coerceToString(integer);\n  }\n\n  /**\n   * Formats a decimal integer type according to specifiers.\n   *\n   * @ignore\n   * @param  {string} replacement The string to be formatted.\n   * @param  {ConversionSpecification} conversion The conversion specification object.\n   * @return {string} Returns the formatted string.\n   */\n\n  function integerDecimal(replacement, conversion) {\n    var integer = parseInt(replacement);\n\n    if (isNaN(integer)) {\n      integer = 0;\n    }\n\n    return addSignToFormattedNumber(integer, toString(integer), conversion);\n  }\n\n  /**\n   * Formats a string type according to specifiers.\n   *\n   * @ignore\n   * @param {string} replacement The string to be formatted.\n   * @param {ConversionSpecification} conversion The conversion specification object.\n   * @return {string} Returns the formatted string.\n   */\n\n  function stringFormat(replacement, conversion) {\n    var formattedReplacement = replacement;\n    var precision = conversion.precision;\n\n    if (!isNil(precision) && formattedReplacement.length > precision) {\n      formattedReplacement = truncate(formattedReplacement, precision, '');\n    }\n\n    return formattedReplacement;\n  }\n\n  /**\n   * Returns the computed string based on format specifiers.\n   *\n   * @ignore\n   * @name computeReplacement\n   * @param {string} replacement The replacement value.\n   * @param {ConversionSpecification} conversion The conversion specification object.\n   * @return {string} Returns the computed string.\n   */\n\n  function compute(replacement, conversion) {\n    var formatFunction;\n\n    switch (conversion.typeSpecifier) {\n      case TYPE_STRING:\n        formatFunction = stringFormat;\n        break;\n\n      case TYPE_INTEGER_DECIMAL:\n      case TYPE_INTEGER:\n        formatFunction = integerDecimal;\n        break;\n\n      case TYPE_INTEGER_ASCII_CHARACTER:\n      case TYPE_INTEGER_BINARY:\n      case TYPE_INTEGER_OCTAL:\n      case TYPE_INTEGER_HEXADECIMAL:\n      case TYPE_INTEGER_HEXADECIMAL_UPPERCASE:\n      case TYPE_INTEGER_UNSIGNED_DECIMAL:\n        formatFunction = integerBase;\n        break;\n\n      case TYPE_FLOAT:\n      case TYPE_FLOAT_SCIENTIFIC:\n      case TYPE_FLOAT_SCIENTIFIC_UPPERCASE:\n      case TYPE_FLOAT_SHORT:\n      case TYPE_FLOAT_SHORT_UPPERCASE:\n        formatFunction = float;\n        break;\n    }\n\n    var formattedString = formatFunction(replacement, conversion);\n    return alignAndPad(formattedString, conversion);\n  }\n\n  /**\n   * Construct the new conversion specification object.\n   *\n   * @ignore\n   * @param {Object} properties An object with properties to initialize.\n   * @return {ConversionSpecification} ConversionSpecification instance.\n   */\n\n  function ConversionSpecification(properties) {\n    /**\n     * The percent characters from conversion specification.\n     *\n     * @ignore\n     * @name ConversionSpecification#percent\n     * @type {string}\n     */\n    this.percent = properties.percent;\n    /**\n     *  The sign specifier to force a sign to be used on a number.\n     *\n     * @ignore\n     * @name ConversionSpecification#signSpecifier\n     * @type {string}\n     */\n\n    this.signSpecifier = properties.signSpecifier;\n    /**\n     * The padding specifier that says what padding character will be used.\n     *\n     * @ignore\n     * @name ConversionSpecification#paddingSpecifier\n     * @type {string}\n     */\n\n    this.paddingSpecifier = properties.paddingSpecifier;\n    /**\n     * The alignment specifier that says if the result should be left-justified or right-justified.\n     *\n     * @ignore\n     * @name ConversionSpecification#alignmentSpecifier\n     * @type {string}\n     */\n\n    this.alignmentSpecifier = properties.alignmentSpecifier;\n    /**\n     * The width specifier how many characters this conversion should result in.\n     *\n     * @ignore\n     * @name ConversionSpecification#width\n     * @type {number}\n     */\n\n    this.width = properties.width;\n    /**\n     * The precision specifier says how many decimal digits should be displayed for floating-point numbers.\n     *\n     * @ignore\n     * @name ConversionSpecification#precision\n     * @type {number}\n     */\n\n    this.precision = properties.precision;\n    /**\n     * The type specifier says what type the argument data should be treated as.\n     *\n     * @ignore\n     * @name ConversionSpecification#typeSpecifier\n     * @type {string}\n     */\n\n    this.typeSpecifier = properties.typeSpecifier;\n  }\n  /**\n   * Check if the conversion specification is a percent literal \"%%\".\n   *\n   * @ignore\n   * @return {boolean} Returns true if the conversion is a percent literal, false otherwise.\n   */\n\n  ConversionSpecification.prototype.isPercentLiteral = function() {\n    return LITERAL_PERCENT_SPECIFIER === this.percent;\n  };\n  /**\n   * Get the padding character from padding specifier.\n   *\n   * @ignore\n   * @returns {string} Returns the padding character.\n   */\n\n  ConversionSpecification.prototype.getPaddingCharacter = function() {\n    var paddingCharacter = nilDefault(this.paddingSpecifier, ' ');\n\n    if (paddingCharacter.length === 2 && paddingCharacter[0] === LITERAL_SINGLE_QUOTE) {\n      paddingCharacter = paddingCharacter[1];\n    }\n\n    return paddingCharacter;\n  };\n\n  /**\n   * Validates the specifier type and replacement position.\n   *\n   * @ignore\n   * @throws {Error} Throws an exception on insufficient arguments or unknown specifier.\n   * @param  {number} index The index of the matched specifier.\n   * @param  {number} replacementsLength The number of replacements.\n   * @param  {ConversionSpecification} conversion The conversion specification object.\n   * @return {undefined}\n   */\n\n  function validate(index, replacementsLength, conversion) {\n    if (isNil(conversion.typeSpecifier)) {\n      throw new Error('sprintf(): Unknown type specifier');\n    }\n\n    if (index > replacementsLength - 1) {\n      throw new Error('sprintf(): Too few arguments');\n    }\n\n    if (index < 0) {\n      throw new Error('sprintf(): Argument number must be greater than zero');\n    }\n  }\n\n  /**\n   * Return the replacement for regular expression match of the conversion specification.\n   *\n   * @ignore\n   * @name matchReplacement\n   * @param {ReplacementIndex} replacementIndex The replacement index object.\n   * @param {string[]} replacements The array of replacements.\n   * @param {string} conversionSpecification The conversion specification.\n   * @param {string} percent The percent characters from conversion specification.\n   * @param {string} position The position to insert the replacement.\n   * @param {string} signSpecifier The sign specifier to force a sign to be used on a number.\n   * @param {string} paddingSpecifier The padding specifier that says what padding character will be used.\n   * @param {string} alignmentSpecifier The alignment specifier that says if the result should be left-justified or right-justified.\n   * @param {string} widthSpecifier The width specifier how many characters this conversion should result in.\n   * @param {string} precisionSpecifier The precision specifier says how many decimal digits should be displayed for floating-point numbers.\n   * @param {string} typeSpecifier The type specifier says what type the argument data should be treated as.\n   * @return {string} Returns the computed replacement.\n   */\n\n  function match(\n    replacementIndex,\n    replacements,\n    conversionSpecification,\n    percent,\n    position,\n    signSpecifier,\n    paddingSpecifier,\n    alignmentSpecifier,\n    widthSpecifier,\n    precisionSpecifier,\n    typeSpecifier\n  ) {\n    var conversion = new ConversionSpecification({\n      percent: percent,\n      signSpecifier: signSpecifier,\n      paddingSpecifier: paddingSpecifier,\n      alignmentSpecifier: alignmentSpecifier,\n      width: coerceToNumber(widthSpecifier, null),\n      precision: coerceToNumber(precisionSpecifier, null),\n      typeSpecifier: typeSpecifier,\n    });\n\n    if (conversion.isPercentLiteral()) {\n      return conversionSpecification.slice(1);\n    }\n\n    var actualReplacementIndex = replacementIndex.getIndexByPosition(position);\n    replacementIndex.incrementOnEmptyPosition(position);\n    validate(actualReplacementIndex, replacements.length, conversion);\n    return compute(replacements[actualReplacementIndex], conversion);\n  }\n\n  /**\n   * Produces a string according to `format`.\n   *\n   * <div id=\"sprintf-format\" class=\"smaller\">\n   * `format` string is composed of zero or more directives: ordinary characters (not <code>%</code>), which are  copied  unchanged\n   * to  the  output string and <i>conversion specifications</i>, each of which results in fetching zero or more subsequent\n   * arguments. <br/> <br/>\n   *\n   * Each <b>conversion specification</b> is introduced by the character <code>%</code>, and ends with a <b>conversion\n   * specifier</b>. In between there may be (in this order) zero or more <b>flags</b>, an optional <b>minimum field width</b>\n   * and an optional <b>precision</b>.<br/>\n   * The syntax is: <b>ConversionSpecification</b> = <b>\"%\"</b> { <b>Flags</b> }\n   * [ <b>MinimumFieldWidth</b> ] [ <b>Precision</b> ] <b>ConversionSpecifier</b>, where curly braces { } denote repetition\n   * and square brackets [ ] optionality. <br/><br/>\n   *\n   * By default, the arguments are used in the given order.<br/>\n   * For argument numbering and swapping, `%m$` (where `m` is a number indicating the argument order)\n   * is used instead of `%` to specify explicitly which argument is taken. For instance `%1$s` fetches the 1st argument,\n   * `%2$s` the 2nd and so on, no matter what position  the conversion specification has in `format`.\n   * <br/><br/>\n   *\n   * <b>The flags</b><br/>\n   * The character <code>%</code> is followed by zero or more of the following flags:<br/>\n   * <table class=\"light-params\">\n   *   <tr>\n   *     <td><code>+</code></td>\n   *     <td>\n   *       A  sign (<code>+</code> or <code>-</code>) should always be placed before a number produced by a\n   *       signed conversion. By default a sign is used only for negative numbers.\n   *     </td>\n   *   </tr>\n   *   <tr>\n   *     <td><code>0</code></td>\n   *     <td>The value should be zero padded.</td>\n   *   </tr>\n   *   <tr>\n   *     <td><code>&blank;</code></td>\n   *     <td>(a space) The value should be space padded.</td>\n   *   </tr>\n   *   <tr>\n   *    <td><code>'</code></td>\n   *    <td>Indicates alternate padding character, specified by prefixing it with a single quote <code>'</code>.</td>\n   *   </tr>\n   *   <tr>\n   *     <td><code>-</code></td>\n   *     <td>The converted value is to be left adjusted on the field boundary (the default is right justification).</td>\n   *   </tr>\n   * </table>\n   *\n   * <b>The minimum field width</b><br/>\n   * An  optional decimal digit string (with nonzero first digit) specifying a minimum field width.  If the converted\n   * value has fewer characters than the field width, it will be padded with spaces on the left (or right, if the\n   * left-adjustment flag has been given).<br/><br/>\n   *\n   * <b>The precision</b><br/>\n   * An optional precision, in the form of a period `.` followed by an optional decimal digit string.<br/>\n   * This gives the number of digits to appear after the radix character for `e`, `E`, `f` and `F` conversions, the\n   * maximum number of significant digits for `g` and `G` conversions or the maximum number of characters to be printed\n   * from a string for `s` conversion.<br/><br/>\n   *\n   * <b>The conversion specifier</b><br/>\n   * A specifier that mentions what type the argument should be treated as:\n   *\n   * <table class=\"light-params\">\n   *   <tr>\n   *     <td>`s`</td>\n   *     <td>The string argument is treated as and presented as a string.</td>\n   *   </tr>\n   *   <tr>\n   *     <td>`d` `i`</td>\n   *     <td>The integer argument is converted to signed decimal notation.</td>\n   *   </tr>\n   *   <tr>\n   *     <td>`b`</td>\n   *     <td>The unsigned integer argument is converted to unsigned binary.</td>\n   *   </tr>\n   *   <tr>\n   *     <td>`c`</td>\n   *     <td>The unsigned integer argument is converted to an ASCII character with that number.</td>\n   *   </tr>\n   *   <tr>\n   *     <td>`o`</td>\n   *     <td>The unsigned integer argument is converted to unsigned octal.</td>\n   *   </tr>\n   *   <tr>\n   *     <td>`u`</td>\n   *     <td>The unsigned integer argument is converted to unsigned decimal.</td>\n   *   </tr>\n   *   <tr>\n   *     <td>`x` `X`</td>\n   *     <td>The unsigned integer argument is converted to unsigned hexadecimal. The letters `abcdef` are used for `x`\n   *     conversions; the letters `ABCDEF` are used for `X` conversions.</td>\n   *   </tr>\n   *   <tr>\n   *     <td>`f`</td>\n   *     <td>\n   *      The float argument is rounded and converted to decimal notation in the style `[-]ddd.ddd`, where the number of\n   *      digits after the decimal-point character is equal to the precision specification. If the precision is missing,\n   *      it is taken as 6; if the precision is explicitly zero, no decimal-point character appears.\n   *      If a decimal point appears, at least one digit appears before it.\n   *     </td>\n   *   </tr>\n   *   <tr>\n   *     <td>`e` `E`</td>\n   *     <td>\n   *       The float argument is rounded and converted in the style `[-]d.ddde±dd`, where there is one digit\n   *       before the decimal-point character and the number of digits after it is equal to the precision. If\n   *       the precision is missing, it is taken as `6`; if the precision is zero, no decimal-point character\n   *       appears. An `E` conversion uses the letter `E` (rather than `e`) to introduce the exponent.\n   *     </td>\n   *   </tr>\n   *   <tr>\n   *     <td>`g` `G`</td>\n   *     <td>\n   *       The float argument is converted in style `f` or `e` (or `F` or `E` for `G` conversions). The precision specifies\n   *       the number of significant digits. If the precision is missing, `6` digits are given; if the\n   *       precision is zero, it is treated as `1`. Style `e` is used if the exponent from its conversion is less\n   *       than `-6` or greater than or equal to the precision. Trailing zeros are removed from the fractional\n   *       part of the result; a decimal point appears only if it is followed by at least one digit.\n   *     </td>\n   *   </tr>\n   *   <tr>\n   *     <td>`%`</td>\n   *     <td>A literal `%` is written. No argument is converted. The complete conversion specification is `%%`.</td>\n   *   </tr>\n   *\n   * </table>\n   * </div>\n   *\n   * @function sprintf\n   * @static\n   * @since 1.0.0\n   * @memberOf Format\n   * @param  {string} [format=''] The format string.\n   * @param  {...*}               replacements The replacements to produce the string.\n   * @return {string}             Returns the produced string.\n   * @example\n   * v.sprintf('%s, %s!', 'Hello', 'World');\n   * // => 'Hello World!'\n   *\n   * v.sprintf('%s costs $%d', 'coffee', 2);\n   * // => 'coffee costs $2'\n   *\n   * v.sprintf('%1$s %2$s %1$s %2$s, watcha gonna %3$s', 'bad', 'boys', 'do')\n   * // => 'bad boys bad boys, watcha gonna do'\n   *\n   * v.sprintf('% 6s', 'bird');\n   * // => '  bird'\n   *\n   * v.sprintf('% -6s', 'crab');\n   * // => 'crab  '\n   *\n   * v.sprintf(\"%'*5s\", 'cat');\n   * // => '**cat'\n   *\n   * v.sprintf(\"%'*-6s\", 'duck');\n   * // => 'duck**'\n   *\n   * v.sprintf('%d %i %+d', 15, -2, 25);\n   * // => '15 -2 +25'\n   *\n   * v.sprintf(\"%06d\", 15);\n   * // => '000015'\n   *\n   * v.sprintf('0b%b 0o%o 0x%X', 12, 9, 155);\n   * // => '0b1100 0o11 0x9B'\n   *\n   * v.sprintf('%.2f', 10.469);\n   * // => '10.47'\n   *\n   * v.sprintf('%.2e %g', 100.5, 0.455);\n   * // => '1.01e+2 0.455'\n   *\n   */\n\n  function sprintf(format) {\n    var formatString = coerceToString(format);\n\n    if (formatString === '') {\n      return formatString;\n    }\n\n    for (\n      var _len = arguments.length, replacements = new Array(_len > 1 ? _len - 1 : 0), _key = 1;\n      _key < _len;\n      _key++\n    ) {\n      replacements[_key - 1] = arguments[_key];\n    }\n\n    var boundReplacementMatch = match.bind(undefined, new ReplacementIndex(), replacements);\n    return formatString.replace(REGEXP_CONVERSION_SPECIFICATION, boundReplacementMatch);\n  }\n\n  /**\n   * Produces a string according to `format`. Works exactly like <a href=\"#sprintf\"><code>sprintf()</code></a>,\n   * with the only difference that accepts the formatting arguments in an array `values`.<br/>\n   * See <a href=\"#sprintf-format\">here</a> `format` string specifications.\n   *\n   * @function vprintf\n   * @static\n   * @since 1.0.0\n   * @memberOf Format\n   * @param  {string} format='']  The format string.\n   * @param  {Array} replacements The array of replacements to produce the string.\n   * @return {string}             Returns the produced string.\n   * @example\n   * v.vprintf('%s', ['Welcome'])\n   * // => 'Welcome'\n   *\n   * v.vprintf('%s has %d apples', ['Alexandra', 3]);\n   * // => 'Alexandra has 3 apples'\n   */\n\n  function vprintf(format, replacements) {\n    return sprintf.apply(void 0, [format].concat(_toConsumableArray(nilDefault(replacements, []))));\n  }\n\n  var escapeCharactersMap = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;',\n  };\n  /**\n   * Return the escaped version of `character`.\n   *\n   * @ignore\n   * @param  {string} character The character to be escape.\n   * @return {string}           The escaped version of character.\n   */\n\n  function replaceSpecialCharacter(character) {\n    return escapeCharactersMap[character];\n  }\n  /**\n   * Escapes HTML special characters  <code>< > & ' \" `</code> in <code>subject</code>.\n   *\n   * @function escapeHtml\n   * @static\n   * @since 1.0.0\n   * @memberOf Escape\n   * @param {string} [subject=''] The string to escape.\n   * @return {string} Returns the escaped string.\n   * @example\n   * v.escapeHtml('<p>wonderful world</p>');\n   * // => '&lt;p&gt;wonderful world&lt;/p&gt;'\n   */\n\n  function escapeHtml(subject) {\n    return coerceToString(subject).replace(REGEXP_HTML_SPECIAL_CHARACTERS, replaceSpecialCharacter);\n  }\n\n  /**\n   * Escapes the regular expression special characters `- [ ] / { } ( ) * + ? . \\ ^ $ |` in `subject`.\n   *\n   * @function escapeRegExp\n   * @static\n   * @since 1.0.0\n   * @memberOf Escape\n   * @param {string} [subject=''] The string to escape.\n   * @return {string} Returns the escaped string.\n   * @example\n   * v.escapeRegExp('(hours)[minutes]{seconds}');\n   * // => '\\(hours\\)\\[minutes\\]\\{seconds\\}'\n   */\n\n  function escapeRegExp(subject) {\n    return coerceToString(subject).replace(REGEXP_SPECIAL_CHARACTERS, '\\\\$&');\n  }\n\n  var unescapeCharactersMap = {\n    '<': /(&lt;)|(&#x0*3c;)|(&#0*60;)/gi,\n    '>': /(&gt;)|(&#x0*3e;)|(&#0*62;)/gi,\n    '&': /(&amp;)|(&#x0*26;)|(&#0*38;)/gi,\n    '\"': /(&quot;)|(&#x0*22;)|(&#0*34;)/gi,\n    \"'\": /(&#x0*27;)|(&#0*39;)/gi,\n    '`': /(&#x0*60;)|(&#0*96;)/gi,\n  };\n  var characters = Object.keys(unescapeCharactersMap);\n  /**\n   * Replaces the HTML entities with corresponding characters.\n   *\n   * @ignore\n   * @param  {string} string The accumulator string.\n   * @param  {string} key    The character.\n   * @return {string}        The string with replaced HTML entity\n   */\n\n  function reduceUnescapedString(string, key) {\n    return string.replace(unescapeCharactersMap[key], key);\n  }\n  /**\n   * Unescapes HTML special characters from <code>&amp;lt; &amp;gt; &amp;amp; &amp;quot; &amp;#x27; &amp;#x60;</code>\n   * to corresponding <code>< > & ' \" `</code> in <code>subject</code>.\n   *\n   * @function unescapeHtml\n   * @static\n   * @since 1.0.0\n   * @memberOf Escape\n   * @param  {string} [subject=''] The string to unescape.\n   * @return {string}              Returns the unescaped string.\n   * @example\n   * v.unescapeHtml('&lt;p&gt;wonderful world&lt;/p&gt;');\n   * // => '<p>wonderful world</p>'\n   */\n\n  function unescapeHtml(subject) {\n    var subjectString = coerceToString(subject);\n    return characters.reduce(reduceUnescapedString, subjectString);\n  }\n\n  /**\n   * Returns the first occurrence index of `search` in `subject`.\n   *\n   * @function indexOf\n   * @static\n   * @since 1.0.0\n   * @memberOf Index\n   * @param {string} [subject=''] The string where to search.\n   * @param {string} search The string to search.\n   * @param {number} [fromIndex=0] The index to start searching.\n   * @return {number} Returns the first occurrence index or `-1` if not found.\n   * @example\n   * v.indexOf('morning', 'n');\n   * // => 3\n   *\n   * v.indexOf('evening', 'o');\n   * // => -1\n   */\n\n  function indexOf(subject, search, fromIndex) {\n    var subjectString = coerceToString(subject);\n    return subjectString.indexOf(search, fromIndex);\n  }\n\n  /**\n   * Returns the last occurrence index of `search` in `subject`.\n   *\n   * @function lastIndexOf\n   * @static\n   * @since 1.0.0\n   * @memberOf Index\n   * @param {string} [subject=''] The string where to search.\n   * @param {string} search The string to search.\n   * @param {number} [fromIndex=subject.length - 1] The index to start searching backward in the string.\n   * @return {number} Returns the last occurrence index or `-1` if not found.\n   * @example\n   * v.lastIndexOf('morning', 'n');\n   * // => 5\n   *\n   * v.lastIndexOf('evening', 'o');\n   * // => -1\n   */\n\n  function lastIndexOf(subject, search, fromIndex) {\n    var subjectString = coerceToString(subject);\n    return subjectString.lastIndexOf(search, fromIndex);\n  }\n\n  /**\n   * Returns the first index of a `pattern` match in `subject`.\n   *\n   * @function search\n   * @static\n   * @since 1.0.0\n   * @memberOf Index\n   * @param {string} [subject=''] The string where to search.\n   * @param {string|RegExp} pattern The pattern to match. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern)`.\n   * @param {number} [fromIndex=0] The index to start searching.\n   * @return {number} Returns the first match index or `-1` if not found.\n   * @example\n   * v.search('morning', /rn/);\n   * // => 2\n   *\n   * v.search('evening', '/\\d/');\n   * // => -1\n   */\n\n  function search(subject, pattern, fromIndex) {\n    var subjectString = coerceToString(subject);\n    var fromIndexNumber = isNil(fromIndex) ? 0 : clipNumber(toInteger(fromIndex), 0, subjectString.length);\n    var matchIndex = subjectString.substr(fromIndexNumber).search(pattern);\n\n    if (matchIndex !== -1 && !isNaN(fromIndexNumber)) {\n      matchIndex += fromIndexNumber;\n    }\n\n    return matchIndex;\n  }\n\n  /**\n   * Inserts into `subject` a string `toInsert` at specified `position`.\n   *\n   * @function insert\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string where to insert.\n   * @param {string} [toInsert=''] The string to be inserted.\n   * @param {number} [position=0] The position to insert.\n   * @return {string} Returns the string after insertion.\n   * @example\n   * v.insert('ct', 'a', 1);\n   * // => 'cat'\n   *\n   * v.insert('sunny', ' day', 5);\n   * // => 'sunny day'\n   */\n\n  function insert(subject, toInsert, position) {\n    var subjectString = coerceToString(subject);\n    var toInsertString = coerceToString(toInsert);\n    var positionNumber = coerceToNumber(position);\n\n    if (positionNumber < 0 || positionNumber > subjectString.length || toInsertString === '') {\n      return subjectString;\n    }\n\n    return subjectString.slice(0, positionNumber) + toInsertString + subjectString.slice(positionNumber);\n  }\n\n  /**\n   * Generated diacritics map. See bellow the base code.\n   * @ignore\n   * @type Object\n   */\n  var diacritics = {\n    '3': '\\u039e\\u03be',\n    '8': '\\u0398\\u03b8',\n    A:\n      '\\x41\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\u0100\\u0102\\u0104\\u01cd\\u01de\\u01e0\\u01fa\\u0200\\u0202\\u0226\\u023a\\u0386\\u0391\\u0410',\n    B: '\\x42\\u0181\\u0182\\u0243\\u0392\\u0411',\n    C: '\\x43\\xc7\\u0106\\u0108\\u010a\\u010c\\u0187\\u023b\\u0426',\n    D: '\\x44\\u010e\\u0110\\u0189\\u018a\\u018b\\xd0\\u0394\\u0414',\n    E: '\\x45\\xc8\\xc9\\xca\\xcb\\u0112\\u0114\\u0116\\u0118\\u011a\\u018e\\u0190\\u0204\\u0206\\u0228\\u0388\\u0395\\u0415\\u042d',\n    F: '\\x46\\u0191\\u03a6\\u0424',\n    G: '\\x47\\u011c\\u011e\\u0120\\u0122\\u0193\\u01e4\\u01e6\\u01f4\\u0393\\u0413\\u0490',\n    H: '\\x48\\u0124\\u0126\\u021e\\u0389\\u0397\\u0425',\n    I: '\\x49\\xcc\\xcd\\xce\\xcf\\u0128\\u012a\\u012c\\u012e\\u0130\\u0197\\u01cf\\u0208\\u020a\\u038a\\u0399\\u03aa\\u0406\\u0418',\n    J: '\\x4a\\u0134\\u0248\\u0419',\n    K: '\\x4b\\u0136\\u0198\\u01e8\\u039a\\u041a',\n    L: '\\x4c\\u0139\\u013b\\u013d\\u013f\\u0141\\u023d\\u039b\\u041b',\n    M: '\\x4d\\u019c\\u039c\\u041c',\n    N: '\\x4e\\xd1\\u0143\\u0145\\u0147\\u019d\\u01f8\\u0220\\u039d\\u041d',\n    O:\n      '\\x4f\\xd2\\xd3\\xd4\\xd5\\xd6\\xd8\\u014c\\u014e\\u0150\\u0186\\u019f\\u01a0\\u01d1\\u01ea\\u01ec\\u01fe\\u020c\\u020e\\u022a\\u022c\\u022e\\u0230\\u038c\\u039f\\u041e',\n    P: '\\x50\\u01a4\\u03a0\\u041f',\n    Q: '\\x51\\u024a',\n    R: '\\x52\\u0154\\u0156\\u0158\\u0210\\u0212\\u024c\\u03a1\\u0420',\n    S: '\\x53\\u015a\\u015c\\u015e\\u0160\\u0218\\u03a3\\u0421',\n    T: '\\x54\\u0162\\u0164\\u0166\\u01ac\\u01ae\\u021a\\u023e\\u03a4\\u0422',\n    U:\n      '\\x55\\xd9\\xda\\xdb\\xdc\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u01af\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u0214\\u0216\\u0244\\u0423\\u042a',\n    V: '\\x56\\u01b2\\u0245\\u0412',\n    W: '\\x57\\u0174\\u038f\\u03a9',\n    X: '\\x58\\u03a7',\n    Y: '\\x59\\xdd\\u0176\\u0178\\u01b3\\u0232\\u024e\\u038e\\u03a5\\u03ab\\u042b',\n    Z: '\\x5a\\u0179\\u017b\\u017d\\u01b5\\u0224\\u0396\\u0417',\n    a:\n      '\\x61\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\u0101\\u0103\\u0105\\u01ce\\u01df\\u01e1\\u01fb\\u0201\\u0203\\u0227\\u0250\\u03ac\\u03b1\\u0430',\n    b: '\\x62\\u0180\\u0183\\u0253\\u03b2\\u0431',\n    c: '\\x63\\xe7\\u0107\\u0109\\u010b\\u010d\\u0188\\u023c\\u0446',\n    d: '\\x64\\u010f\\u0111\\u018c\\u0256\\u0257\\xf0\\u03b4\\u0434',\n    e: '\\x65\\xe8\\xe9\\xea\\xeb\\u0113\\u0115\\u0117\\u0119\\u011b\\u01dd\\u0205\\u0207\\u0229\\u0247\\u025b\\u03ad\\u03b5\\u0435\\u044d',\n    f: '\\x66\\u0192\\u03c6\\u0444',\n    g: '\\x67\\u011d\\u011f\\u0121\\u0123\\u01e5\\u01e7\\u01f5\\u0260\\u03b3\\u0433\\u0491',\n    h: '\\x68\\u0125\\u0127\\u021f\\u0265\\u03ae\\u03b7\\u0445',\n    i: '\\x69\\xec\\xed\\xee\\xef\\u0129\\u012b\\u012d\\u012f\\u0131\\u01d0\\u0209\\u020b\\u0268\\u0390\\u03af\\u03b9\\u03ca\\u0438\\u0456',\n    j: '\\x6a\\u0135\\u01f0\\u0249\\u0439',\n    k: '\\x6b\\u0137\\u0199\\u01e9\\u03ba\\u043a',\n    l: '\\x6c\\u013a\\u013c\\u013e\\u0140\\u0142\\u017f\\u019a\\u026b\\u03bb\\u043b',\n    m: '\\x6d\\u026f\\u0271\\u03bc\\u043c',\n    n: '\\x6e\\xf1\\u0144\\u0146\\u0148\\u0149\\u019e\\u01f9\\u0272\\u03bd\\u043d',\n    o:\n      '\\x6f\\xf2\\xf3\\xf4\\xf5\\xf6\\xf8\\u014d\\u014f\\u0151\\u01a1\\u01d2\\u01eb\\u01ed\\u01ff\\u020d\\u020f\\u022b\\u022d\\u022f\\u0231\\u0254\\u0275\\u03bf\\u03cc\\u043e',\n    p: '\\x70\\u01a5\\u03c0\\u043f',\n    q: '\\x71\\u024b',\n    r: '\\x72\\u0155\\u0157\\u0159\\u0211\\u0213\\u024d\\u027d\\u03c1\\u0440',\n    s: '\\x73\\xdf\\u015b\\u015d\\u015f\\u0161\\u0219\\u023f\\u03c2\\u03c3\\u0441',\n    t: '\\x74\\u0163\\u0165\\u0167\\u01ad\\u021b\\u0288\\u03c4\\u0442',\n    u:\n      '\\x75\\xf9\\xfa\\xfb\\xfc\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u01b0\\u01d4\\u01d6\\u01d8\\u01da\\u01dc\\u0215\\u0217\\u0289\\u0443\\u044a',\n    v: '\\x76\\u028b\\u028c\\u0432',\n    w: '\\x77\\u0175\\u03c9\\u03ce',\n    x: '\\x78\\u03c7',\n    y: '\\x79\\xfd\\xff\\u0177\\u01b4\\u0233\\u024f\\u03b0\\u03c5\\u03cb\\u03cd\\u044b',\n    z: '\\x7a\\u017a\\u017c\\u017e\\u01b6\\u0225\\u0240\\u03b6\\u0437',\n    OE: '\\x8c\\u0152',\n    oe: '\\x9c\\u0153',\n    AE: '\\xc6\\u01e2\\u01fc',\n    ae: '\\xe6\\u01e3\\u01fd',\n    hv: '\\u0195',\n    OI: '\\u01a2',\n    oi: '\\u01a3',\n    DZ: '\\u01c4\\u01f1',\n    Dz: '\\u01c5\\u01f2',\n    dz: '\\u01c6\\u01f3',\n    LJ: '\\u01c7',\n    Lj: '\\u01c8',\n    lj: '\\u01c9',\n    NJ: '\\u01ca',\n    Nj: '\\u01cb',\n    nj: '\\u01cc',\n    OU: '\\u0222',\n    ou: '\\u0223',\n    TH: '\\xde',\n    th: '\\xfe',\n    PS: '\\u03a8',\n    ps: '\\u03c8',\n    Yo: '\\u0401',\n    Ye: '\\u0404',\n    Yi: '\\u0407',\n    Zh: '\\u0416',\n    Ch: '\\u0427',\n    Sh: '\\u0428\\u0429',\n    '': '\\u042a\\u042c\\u044c',\n    Yu: '\\u042e',\n    Ya: '\\u042f',\n    zh: '\\u0436',\n    ch: '\\u0447',\n    sh: '\\u0448\\u0449',\n    yu: '\\u044e',\n    ya: '\\u044f',\n    yo: '\\u0451',\n    ye: '\\u0454',\n    yi: '\\u0457',\n  };\n  var diacriticsMap = null;\n  /**\n   * Creates a map of the diacritics.\n   *\n   * @ignore\n   * @returns {Object} Returns the diacritics map.\n   */\n\n  function getDiacriticsMap() {\n    if (diacriticsMap !== null) {\n      return diacriticsMap;\n    }\n\n    diacriticsMap = {};\n    Object.keys(diacritics).forEach(function(key) {\n      var characters = diacritics[key];\n\n      for (var index = 0; index < characters.length; index++) {\n        var character = characters[index];\n        diacriticsMap[character] = key;\n      }\n    });\n    return diacriticsMap;\n  }\n  /**\n   * Get the latin character from character with diacritics.\n   *\n   * @ignore\n   * @param   {string} character The character with diacritics.\n   * @returns {string}           Returns the character without diacritics.\n   */\n\n  function getLatinCharacter(character) {\n    var characterWithoutDiacritic = getDiacriticsMap()[character];\n    return characterWithoutDiacritic ? characterWithoutDiacritic : character;\n  }\n\n  /**\n   * Returns the `cleanCharacter` from combining marks regular expression match.\n   *\n   * @ignore\n   * @param {string} character The character with combining marks\n   * @param {string} cleanCharacter The character without combining marks.\n   * @return {string} The character without combining marks.\n   */\n\n  function removeCombiningMarks(character, cleanCharacter) {\n    return cleanCharacter;\n  }\n  /**\n   * Latinises the `subject` by removing diacritic characters.\n   *\n   * @function latinise\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to latinise.\n   * @return {string} Returns the latinised string.\n   * @example\n   * v.latinise('cafe\\u0301'); // or 'café'\n   * // => 'cafe'\n   *\n   * v.latinise('août décembre');\n   * // => 'aout decembre'\n   *\n   * v.latinise('как прекрасен этот мир');\n   * // => 'kak prekrasen etot mir'\n   */\n\n  function latinise(subject) {\n    var subjectString = coerceToString(subject);\n\n    if (subjectString === '') {\n      return '';\n    }\n\n    return subjectString\n      .replace(REGEXP_NON_LATIN, getLatinCharacter)\n      .replace(REGEXP_COMBINING_MARKS, removeCombiningMarks);\n  }\n\n  /**\n   * Pads `subject` to a new `length`.\n   *\n   * @function pad\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to pad.\n   * @param {int} [length=0] The length to pad the string. No changes are made if `length` is less than `subject.length`.\n   * @param {string} [pad=' '] The string to be used for padding.\n   * @return {string} Returns the padded string.\n   * @example\n   * v.pad('dog', 5);\n   * // => ' dog '\n   *\n   * v.pad('bird', 6, '-');\n   * // => '-bird-'\n   *\n   * v.pad('cat', 6, '-=');\n   * // => '-cat-='\n   */\n\n  function pad(subject, length, pad) {\n    var subjectString = coerceToString(subject);\n    var lengthInt = isNil(length) ? 0 : clipNumber(toInteger(length), 0, MAX_SAFE_INTEGER);\n    var padString = coerceToString(pad, ' ');\n\n    if (lengthInt <= subjectString.length) {\n      return subjectString;\n    }\n\n    var paddingLength = lengthInt - subjectString.length;\n    var paddingSideLength = toInteger(paddingLength / 2);\n    var paddingSideRemainingLength = paddingLength % 2;\n    return (\n      buildPadding(padString, paddingSideLength) +\n      subjectString +\n      buildPadding(padString, paddingSideLength + paddingSideRemainingLength)\n    );\n  }\n\n  /**\n   * Replaces the matches of `search` with `replace`. <br/>\n   *\n   * @function replace\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to verify.\n   * @param {string|RegExp} search The search pattern to replace. If `search` is a string,\n   * a simple string match is evaluated and only the first occurrence replaced.\n   * @param {string|Function} replace The string or function which invocation result replaces `search` match.\n   * @return {string} Returns the replacement result.\n   * @example\n   * v.replace('swan', 'wa', 'u');\n   * // => 'sun'\n   *\n   * v.replace('domestic duck', /domestic\\s/, '');\n   * // => 'duck'\n   *\n   * v.replace('nice duck', /(nice)(duck)/, function(match, nice, duck) {\n   *   return 'the ' + duck + ' is ' + nice;\n   * });\n   * // => 'the duck is nice'\n   */\n\n  function replace(subject, search, replace) {\n    var subjectString = coerceToString(subject);\n    return subjectString.replace(search, replace);\n  }\n\n  /**\n   * Replaces all occurrences of `search` with `replace`. <br/>\n   *\n   * @function replaceAll\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to verify.\n   * @param {string|RegExp} search The search pattern to replace. If `search` is a string, a simple string match is evaluated.\n   * All matches are replaced.\n   * @param {string|Function} replace The string or function which invocation result replaces all `search` matches.\n   * @return {string} Returns the replacement result.\n   * @example\n   * v.replaceAll('good morning', 'o', '*');\n   * // => 'g**d m*rning'\n   * v.replaceAll('evening', /n/g, 's');\n   * // => 'evesisg'\n   *\n   */\n\n  function replaceAll(subject, search, replace) {\n    var subjectString = coerceToString(subject);\n\n    if (search instanceof RegExp) {\n      if (search.flags.indexOf('g') === -1) {\n        throw new TypeError('search argument is a non-global regular expression');\n      }\n\n      return subjectString.replace(search, replace);\n    }\n\n    var searchString = coerceToString(search);\n    var isFunctionalReplace = typeof replace === 'function';\n\n    if (!isFunctionalReplace) {\n      replace = coerceToString(replace);\n    }\n\n    var searchLength = searchString.length;\n\n    if (searchLength === 0) {\n      return replaceAll(subject, /(?:)/g, replace);\n    }\n\n    var advanceBy = searchLength > 1 ? searchLength : 1;\n    var matchPositions = [];\n    var position = subjectString.indexOf(searchString, 0);\n\n    while (position !== -1) {\n      matchPositions.push(position);\n      position = subjectString.indexOf(searchString, position + advanceBy);\n    }\n\n    var endOfLastMatch = 0;\n    var result = '';\n\n    for (var i = 0; i < matchPositions.length; i++) {\n      var _position = matchPositions[i];\n      var replacement = replace;\n\n      if (isFunctionalReplace) {\n        replacement = coerceToString(replace.call(undefined, searchString, _position, subjectString));\n      }\n\n      result += subjectString.slice(endOfLastMatch, _position) + replacement;\n      endOfLastMatch = _position + searchLength;\n    }\n\n    if (endOfLastMatch < subjectString.length) {\n      result += subjectString.slice(endOfLastMatch);\n    }\n\n    return result;\n  }\n\n  /**\n   * Reverses the `subject`.\n   *\n   * @function reverse\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to reverse.\n   * @return {string} Returns the reversed string.\n   * @example\n   * v.reverse('winter');\n   * // => 'retniw'\n   */\n\n  function reverse(subject) {\n    var subjectString = coerceToString(subject);\n    return subjectString\n      .split('')\n      .reverse()\n      .join('');\n  }\n\n  /**\n   * Reverses the `subject` taking care of\n   * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and\n   * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>.\n   *\n   * @function reverseGrapheme\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to reverse.\n   * @return {string} Returns the reversed string.\n   * @example\n   * v.reverseGrapheme('summer');\n   * // => 'remmus'\n   *\n   * v.reverseGrapheme('𝌆 bar mañana mañana');\n   * // => 'anañam anañam rab 𝌆'\n   */\n\n  function reverseGrapheme(subject) {\n    var subjectString = coerceToString(subject);\n    /**\n     * @see https://github.com/mathiasbynens/esrever\n     */\n\n    subjectString = subjectString\n      .replace(REGEXP_COMBINING_MARKS, function($0, $1, $2) {\n        return reverseGrapheme($2) + $1;\n      })\n      .replace(REGEXP_SURROGATE_PAIRS, '$2$1');\n    var reversedString = '';\n    var index = subjectString.length;\n\n    while (index--) {\n      reversedString += subjectString.charAt(index);\n    }\n\n    return reversedString;\n  }\n\n  /**\n   * Slugifies the `subject`. Cleans the `subject` by replacing diacritics with corresponding latin characters.\n   *\n   * @function slugify\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to slugify.\n   * @return {string} Returns the slugified string.\n   * @example\n   * v.slugify('Italian cappuccino drink');\n   * // => 'italian-cappuccino-drink'\n   *\n   * v.slugify('caffé latté');\n   * // => 'caffe-latte'\n   *\n   * v.slugify('хорошая погода');\n   * // => 'horoshaya-pogoda'\n   */\n\n  function slugify(subject) {\n    var subjectString = coerceToString(subject);\n\n    if (subjectString === '') {\n      return '';\n    }\n\n    var cleanSubjectString = latinise(subjectString).replace(REGEXP_NON_LATIN, '-');\n    return kebabCase(cleanSubjectString);\n  }\n\n  /**\n   * Changes `subject` by deleting `deleteCount` of characters starting at position `start`. Places a new string\n   * `toAdd` instead of deleted characters.\n   *\n   * @function splice\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string where to insert.\n   * @param {string} start The position to start changing the string. For a negative position will start from the end of\n   * the string.\n   * @param {number} [deleteCount=subject.length-start] The number of characters to delete from string.\n   * @param {string} [toAdd=''] The string to be added instead of deleted characters.\n   * @return {string} Returns the modified string.\n   * @example\n   * v.splice('new year', 0, 4);\n   * // => 'year'\n   *\n   * v.splice('new year', 0, 3, 'happy');\n   * // => 'happy year'\n   *\n   * v.splice('new year', -4, 4, 'day');\n   * // => 'new day'\n   */\n\n  function splice(subject, start, deleteCount, toAdd) {\n    var subjectString = coerceToString(subject);\n    var toAddString = coerceToString(toAdd);\n    var startPosition = coerceToNumber(start);\n\n    if (startPosition < 0) {\n      startPosition = subjectString.length + startPosition;\n\n      if (startPosition < 0) {\n        startPosition = 0;\n      }\n    } else if (startPosition > subjectString.length) {\n      startPosition = subjectString.length;\n    }\n\n    var deleteCountNumber = coerceToNumber(deleteCount, subjectString.length - startPosition);\n\n    if (deleteCountNumber < 0) {\n      deleteCountNumber = 0;\n    }\n\n    return subjectString.slice(0, startPosition) + toAddString + subjectString.slice(startPosition + deleteCountNumber);\n  }\n\n  /**\n   * Translates characters or replaces substrings in `subject`.\n   *\n   * @function tr\n   * @static\n   * @since 1.3.0\n   * @memberOf Manipulate\n   * @param  {string} [subject=''] The string to translate.\n   * @param  {string|Object} from The string of characters to translate from. Or an object, then the object keys are replaced with corresponding values (longest keys are tried first).\n   * @param  {string} to The string of characters to translate to. Ignored when `from` is an object.\n   * @return {string} Returns the translated string.\n   * @example\n   * v.tr('hello', 'el', 'ip');\n   * // => 'hippo'\n   *\n   * v.tr('légèreté', 'éè', 'ee');\n   * // => 'legerete'\n   *\n   * v.tr('Yes. The fire rises.', {\n   *   'Yes': 'Awesome',\n   *   'fire': 'flame'\n   * })\n   * // => 'Awesome. The flame rises.'\n   *\n   * v.tr(':where is the birthplace of :what', {\n   *   ':where': 'Africa',\n   *   ':what': 'Humanity'\n   * });\n   * // => 'Africa is the birthplace of Humanity'\n   *\n   */\n\n  function tr(subject, from, to) {\n    var subjectString = coerceToString(subject);\n    var keys;\n    var values;\n\n    if (isString(from) && isString(to)) {\n      keys = from.split('');\n      values = to.split('');\n    } else {\n      var _extractKeysAndValues = extractKeysAndValues(nilDefault(from, {}));\n\n      var _extractKeysAndValues2 = _slicedToArray(_extractKeysAndValues, 2);\n\n      keys = _extractKeysAndValues2[0];\n      values = _extractKeysAndValues2[1];\n    }\n\n    var keysLength = keys.length;\n\n    if (keysLength === 0) {\n      return subjectString;\n    }\n\n    var result = '';\n    var valuesLength = values.length;\n\n    for (var index = 0; index < subjectString.length; index++) {\n      var isMatch = false;\n      var matchValue = void 0;\n\n      for (var keyIndex = 0; keyIndex < keysLength && keyIndex < valuesLength; keyIndex++) {\n        var key = keys[keyIndex];\n\n        if (subjectString.substr(index, key.length) === key) {\n          isMatch = true;\n          matchValue = values[keyIndex];\n          index = index + key.length - 1;\n          break;\n        }\n      }\n\n      result += isMatch ? matchValue : subjectString[index];\n    }\n\n    return result;\n  }\n\n  function extractKeysAndValues(object) {\n    var keys = Object.keys(object);\n    var values = keys.sort(sortStringByLength).map(function(key) {\n      return object[key];\n    });\n    return [keys, values];\n  }\n\n  function sortStringByLength(str1, str2) {\n    if (str1.length === str2.length) {\n      return 0;\n    }\n\n    return str1.length < str2.length ? 1 : -1;\n  }\n\n  /**\n   * Checks whether `subject` includes `search` starting from `position`.\n   *\n   * @function includes\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string where to search.\n   * @param {string} search The string to search.\n   * @param {number} [position=0] The position to start searching.\n   * @return {boolean} Returns `true` if `subject` includes `search` or `false` otherwise.\n   * @example\n   * v.includes('starship', 'star');\n   * // => true\n   *\n   * v.includes('galaxy', 'g', 1);\n   * // => false\n   */\n\n  function includes(subject, search, position) {\n    var subjectString = coerceToString(subject);\n    var searchString = toString(search);\n\n    if (searchString === null) {\n      return false;\n    }\n\n    if (searchString === '') {\n      return true;\n    }\n\n    position = isNil(position) ? 0 : clipNumber(toInteger(position), 0, subjectString.length);\n    return subjectString.indexOf(searchString, position) !== -1;\n  }\n\n  var reduce$1 = Array.prototype.reduce;\n  /**\n   * Removes whitespaces from the left side of the `subject`.\n   *\n   * @function trimLeft\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to trim.\n   * @param {string} [whitespace=whitespace] The whitespace characters to trim. List all characters that you want to be stripped.\n   * @return {string} Returns the trimmed string.\n   * @example\n   * v.trimLeft('  Starship Troopers');\n   * // => 'Starship Troopers'\n   *\n   * v.trimLeft('***Mobile Infantry', '*');\n   * // => 'Mobile Infantry'\n   */\n\n  function trimLeft(subject, whitespace) {\n    var subjectString = coerceToString(subject);\n\n    if (whitespace === '' || subjectString === '') {\n      return subjectString;\n    }\n\n    var whitespaceString = toString(whitespace);\n\n    if (isNil(whitespaceString)) {\n      return subjectString.replace(REGEXP_TRIM_LEFT, '');\n    }\n\n    var matchWhitespace = true;\n    return reduce$1.call(\n      subjectString,\n      function(trimmed, character) {\n        if (matchWhitespace && includes(whitespaceString, character)) {\n          return trimmed;\n        }\n\n        matchWhitespace = false;\n        return trimmed + character;\n      },\n      ''\n    );\n  }\n\n  var reduceRight = Array.prototype.reduceRight;\n  /**\n   * Removes whitespaces from the right side of the `subject`.\n   *\n   * @function trimRight\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to trim.\n   * @param {string} [whitespace=whitespace] The whitespace characters to trim. List all characters that you want to be stripped.\n   * @return {string} Returns the trimmed string.\n   * @example\n   * v.trimRight('the fire rises   ');\n   * // => 'the fire rises'\n   *\n   * v.trimRight('do you feel in charge?!!!', '!');\n   * // => 'do you feel in charge?'\n   */\n\n  function trimRight(subject, whitespace) {\n    var subjectString = coerceToString(subject);\n\n    if (whitespace === '' || subjectString === '') {\n      return subjectString;\n    }\n\n    var whitespaceString = toString(whitespace);\n\n    if (isNil(whitespaceString)) {\n      return subjectString.replace(REGEXP_TRIM_RIGHT, '');\n    }\n\n    var matchWhitespace = true;\n    return reduceRight.call(\n      subjectString,\n      function(trimmed, character) {\n        if (matchWhitespace && includes(whitespaceString, character)) {\n          return trimmed;\n        }\n\n        matchWhitespace = false;\n        return character + trimmed;\n      },\n      ''\n    );\n  }\n\n  /**\n   * Removes whitespaces from left and right sides of the `subject`.\n   *\n   * @function trim\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param {string} [subject=''] The string to trim.\n   * @param {string} [whitespace=whitespace] The whitespace characters to trim. List all characters that you want to be stripped.\n   * @return {string} Returns the trimmed string.\n   * @example\n   * v.trim(' Mother nature ');\n   * // => 'Mother nature'\n   *\n   * v.trim('--Earth--', '-');\n   * // => 'Earth'\n   */\n\n  function trim(subject, whitespace) {\n    var subjectString = coerceToString(subject);\n\n    if (whitespace === '' || subjectString === '') {\n      return subjectString;\n    }\n\n    var whitespaceString = toString(whitespace);\n\n    if (isNil(whitespaceString)) {\n      return subjectString.trim();\n    }\n\n    return trimRight(trimLeft(subjectString, whitespaceString), whitespaceString);\n  }\n\n  var OPTION_WIDTH = 'width';\n  var OPTION_NEW_LINE = 'newLine';\n  var OPTION_INDENT = 'indent';\n  var OPTION_CUT = 'cut';\n  /**\n   * Wraps `subject` to a given number of characters using a string break character.\n   *\n   * @function wordWrap\n   * @static\n   * @since 1.0.0\n   * @memberOf Manipulate\n   * @param  {string} [subject=''] The string to wrap.\n   * @param  {Object} [options={}] The wrap options.\n   * @param  {number} [options.width=75] The number of characters at which to wrap.\n   * @param  {string} [options.newLine='\\n'] The string to add at the end of line.\n   * @param  {string} [options.indent='']  The string to intend the line.\n   * @param  {boolean} [options.cut=false] When `false` (default) does not split the word even if word length is bigger than `width`. <br/>\n   *                                       When `true` breaks the word that has length bigger than `width`.\n   *\n   * @return {string} Returns wrapped string.\n   * @example\n   * v.wordWrap('Hello world', {\n   *   width: 5\n   * });\n   * // => 'Hello\\nworld'\n   *\n   * v.wordWrap('Hello world', {\n   *   width: 5,\n   *   newLine: '<br/>',\n   *   indent: '__'\n   * });\n   * // => '__Hello<br/>__world'\n   *\n   * v.wordWrap('Wonderful world', {\n   *   width: 5,\n   *   cut: true\n   * });\n   * // => 'Wonde\\nrful\\nworld'\n   *\n   */\n\n  function wordWrap(subject) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var subjectString = coerceToString(subject);\n\n    var _determineOptions = determineOptions(options),\n      width = _determineOptions.width,\n      newLine = _determineOptions.newLine,\n      indent = _determineOptions.indent,\n      cut = _determineOptions.cut;\n\n    if (subjectString === '' || width <= 0) {\n      return indent;\n    }\n\n    var subjectLength = subjectString.length;\n    var substring = subjectString.substring.bind(subjectString);\n    var offset = 0;\n    var wrappedLine = '';\n\n    while (subjectLength - offset > width) {\n      if (subjectString[offset] === ' ') {\n        offset++;\n        continue;\n      }\n\n      var spaceToWrapAt = subjectString.lastIndexOf(' ', width + offset);\n\n      if (spaceToWrapAt >= offset) {\n        wrappedLine += indent + substring(offset, spaceToWrapAt) + newLine;\n        offset = spaceToWrapAt + 1;\n      } else {\n        if (cut) {\n          wrappedLine += indent + substring(offset, width + offset) + newLine;\n          offset += width;\n        } else {\n          spaceToWrapAt = subjectString.indexOf(' ', width + offset);\n\n          if (spaceToWrapAt >= 0) {\n            wrappedLine += indent + substring(offset, spaceToWrapAt) + newLine;\n            offset = spaceToWrapAt + 1;\n          } else {\n            wrappedLine += indent + substring(offset);\n            offset = subjectLength;\n          }\n        }\n      }\n    }\n\n    if (offset < subjectLength) {\n      wrappedLine += indent + substring(offset);\n    }\n\n    return wrappedLine;\n  }\n  /**\n   * Determine the word wrap options. The missing values are filled with defaults.\n   *\n   * @param  {Object} options  The options object.\n   * @return {Object}          The word wrap options, with default settings if necessary.\n   * @ignore\n   */\n\n  function determineOptions(options) {\n    return {\n      width: coerceToNumber(options[OPTION_WIDTH], 75),\n      newLine: coerceToString(options[OPTION_NEW_LINE], '\\n'),\n      indent: coerceToString(options[OPTION_INDENT], ''),\n      cut: coerceToBoolean(options[OPTION_CUT], false),\n    };\n  }\n\n  /**\n   * Checks whether `subject` ends with `end`.\n   *\n   * @function endsWith\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string to verify.\n   * @param {string} end The ending string.\n   * @param {number} [position=subject.length] Search within `subject` as if the string were only `position` long.\n   * @return {boolean} Returns `true` if `subject` ends with `end` or `false` otherwise.\n   * @example\n   * v.endsWith('red alert', 'alert');\n   * // => true\n   *\n   * v.endsWith('metro south', 'metro');\n   * // => false\n   *\n   * v.endsWith('Murphy', 'ph', 5);\n   * // => true\n   */\n\n  function endsWith(subject, end, position) {\n    if (isNil(end)) {\n      return false;\n    }\n\n    var subjectString = coerceToString(subject);\n    var endString = coerceToString(end);\n\n    if (endString === '') {\n      return true;\n    }\n\n    position = isNil(position) ? subjectString.length : clipNumber(toInteger(position), 0, subjectString.length);\n    position -= endString.length;\n    var lastIndex = subjectString.indexOf(endString, position);\n    return lastIndex !== -1 && lastIndex === position;\n  }\n\n  /**\n   * Checks whether `subject` contains only alpha characters.\n   *\n   * @function isAlpha\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string to verify.\n   * @return {boolean} Returns `true` if `subject` contains only alpha characters or `false` otherwise.\n   * @example\n   * v.isAlpha('bart');\n   * // => true\n   *\n   * v.isAlpha('lisa!');\n   * // => false\n   *\n   * v.isAlpha('lisa and bart');\n   * // => false\n   */\n\n  function isAlpha(subject) {\n    var subjectString = coerceToString(subject);\n    return REGEXP_ALPHA.test(subjectString);\n  }\n\n  /**\n   * Checks whether `subject` contains only alpha and digit characters.\n   *\n   * @function isAlphaDigit\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string to verify.\n   * @return {boolean} Returns `true` if `subject` contains only alpha and digit characters or `false` otherwise.\n   * @example\n   * v.isAlphaDigit('year2020');\n   * // => true\n   *\n   * v.isAlphaDigit('1448');\n   * // => true\n   *\n   * v.isAlphaDigit('40-20');\n   * // => false\n   */\n\n  function isAlphaDigit(subject) {\n    var subjectString = coerceToString(subject);\n    return REGEXP_ALPHA_DIGIT.test(subjectString);\n  }\n\n  /**\n   * Checks whether `subject` is empty or contains only whitespaces.\n   *\n   * @function isBlank\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string to verify.\n   * @return {boolean} Returns `true` if `subject` is empty or contains only whitespaces or `false` otherwise.\n   * @example\n   * v.isBlank('');\n   * // => true\n   *\n   * v.isBlank('  ');\n   * // => true\n   *\n   * v.isBlank('World');\n   * // => false\n   */\n\n  function isBlank(subject) {\n    var subjectString = coerceToString(subject);\n    return subjectString.trim().length === 0;\n  }\n\n  /**\n   * Checks whether `subject` contains only digit characters.\n   *\n   * @function isDigit\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string to verify.\n   * @return {boolean} Returns `true` if `subject` contains only digit characters or `false` otherwise.\n   * @example\n   * v.isDigit('35');\n   * // => true\n   *\n   * v.isDigit('1.5');\n   * // => false\n   *\n   * v.isDigit('ten');\n   * // => false\n   */\n\n  function isDigit(subject) {\n    var subjectString = coerceToString(subject);\n    return REGEXP_DIGIT.test(subjectString);\n  }\n\n  /**\n   * Checks whether `subject` is empty.\n   *\n   * @function isEmpty\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string to verify.\n   * @return {boolean} Returns `true` if `subject` is empty or `false` otherwise\n   * @example\n   * v.isEmpty('');\n   * // => true\n   *\n   * v.isEmpty('  ');\n   * // => false\n   *\n   * v.isEmpty('sun');\n   * // => false\n   */\n\n  function isEmpty(subject) {\n    var subjectString = coerceToString(subject);\n    return subjectString.length === 0;\n  }\n\n  /**\n   * Checks whether `subject` has only lower case characters.\n   *\n   * @function isLowerCase\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string to verify.\n   * @return {boolean} Returns `true` if `subject` is lower case or `false` otherwise.\n   * @example\n   * v.isLowerCase('motorcycle');\n   * // => true\n   *\n   * v.isLowerCase('John');\n   * // => false\n   *\n   * v.isLowerCase('T1000');\n   * // => false\n   */\n\n  function isLowerCase(subject) {\n    var valueString = coerceToString(subject);\n    return isAlpha(valueString) && valueString.toLowerCase() === valueString;\n  }\n\n  /**\n   * Checks whether `subject` is numeric.\n   *\n   * @function isNumeric\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string to verify.\n   * @return {boolean} Returns `true` if `subject` is numeric or `false` otherwise.\n   * @example\n   * v.isNumeric('350');\n   * // => true\n   *\n   * v.isNumeric('-20.5');\n   * // => true\n   *\n   * v.isNumeric('1.5E+2');\n   * // => true\n   *\n   * v.isNumeric('five');\n   * // => false\n   */\n\n  function isNumeric(subject) {\n    var valueNumeric = typeof subject === 'object' && !isNil(subject) ? Number(subject) : subject;\n    return (\n      (typeof valueNumeric === 'number' || typeof valueNumeric === 'string') &&\n      !isNaN(valueNumeric - parseFloat(valueNumeric))\n    );\n  }\n\n  /**\n   * Checks whether `subject` contains only upper case characters.\n   *\n   * @function isUpperCase\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string to verify.\n   * @return {boolean} Returns `true` if `subject` is upper case or `false` otherwise.\n   * @example\n   * v.isUpperCase('ACDC');\n   * // => true\n   *\n   * v.isUpperCase('Morning');\n   * // => false\n   */\n\n  function isUpperCase(subject) {\n    var subjectString = coerceToString(subject);\n    return isAlpha(subjectString) && subjectString.toUpperCase() === subjectString;\n  }\n\n  /**\n   * Checks whether `subject` matches the regular expression `pattern`.\n   *\n   * @function matches\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string to verify.\n   * @param {RegExp|string} pattern The pattern to match. If `pattern` is not RegExp, it is transformed to `new RegExp(pattern, flags)`.\n   * @param {string} [flags=''] The regular expression flags. Applies when `pattern` is string type.\n   * @return {boolean} Returns `true` if `subject` matches `pattern` or `false` otherwise.\n   * @example\n   * v.matches('pluto', /plu.{2}/);\n   * // => true\n   *\n   * v.matches('sun', 'S', 'i');\n   * // => true\n   *\n   * v.matches('apollo 11', '\\\\d{3}');\n   * // => false\n   */\n\n  function matches(subject, pattern, flags) {\n    var subjectString = coerceToString(subject);\n    var flagsString = coerceToString(flags);\n    var patternString;\n\n    if (!(pattern instanceof RegExp)) {\n      patternString = toString(pattern);\n\n      if (patternString === null) {\n        return false;\n      }\n\n      pattern = new RegExp(patternString, flagsString);\n    }\n\n    return pattern.test(subjectString);\n  }\n\n  /**\n   * Checks whether `subject` starts with `start`.\n   *\n   * @function startsWith\n   * @static\n   * @since 1.0.0\n   * @memberOf Query\n   * @param {string} [subject=''] The string to verify.\n   * @param {string} start The starting string.\n   * @param {number} [position=0] The position to start searching.\n   * @return {boolean} Returns `true` if `subject` starts with `start` or `false` otherwise.\n   * @example\n   * v.startsWith('say hello to my little friend', 'say hello');\n   * // => true\n   *\n   * v.startsWith('tony', 'on', 1);\n   * // => true\n   *\n   * v.startsWith('the world is yours', 'world');\n   * // => false\n   */\n\n  function startsWith(subject, start, position) {\n    var subjectString = coerceToString(subject);\n    var startString = toString(start);\n\n    if (startString === null) {\n      return false;\n    }\n\n    if (startString === '') {\n      return true;\n    }\n\n    position = isNil(position) ? 0 : clipNumber(toInteger(position), 0, subjectString.length);\n    return subjectString.substr(position, startString.length) === startString;\n  }\n\n  /**\n   * Splits `subject` into an array of characters.\n   *\n   * @function chars\n   * @static\n   * @since 1.0.0\n   * @memberOf Split\n   * @param {string} [subject=''] The string to split into characters.\n   * @return {Array} Returns the array of characters.\n   * @example\n   * v.chars('cloud');\n   * // => ['c', 'l', 'o', 'u', 'd']\n   */\n\n  function chars(subject) {\n    var subjectString = coerceToString(subject);\n    return subjectString.split('');\n  }\n\n  /**\n   * Returns an array of Unicode code point values from characters of `subject`.\n   *\n   * @function codePoints\n   * @static\n   * @since 1.0.0\n   * @memberOf Split\n   * @param  {string} [subject=''] The string to extract from.\n   * @return {Array} Returns an array of non-negative numbers less than or equal to `0x10FFFF`.\n   * @example\n   * v.codePoints('rain');\n   * // => [114, 97, 105, 110], or\n   * //    [0x72, 0x61, 0x69, 0x6E]\n   *\n   * v.codePoints('\\uD83D\\uDE00 smile'); // or '😀 smile'\n   * // => [128512, 32, 115, 109, 105, 108, 101], or\n   * //    [0x1F600, 0x20, 0x73, 0x6D, 0x69, 0x6C, 0x65]\n   */\n\n  function codePoints(subject) {\n    var subjectString = coerceToString(subject);\n    var subjectStringLength = subjectString.length;\n    var codePointArray = [];\n    var index = 0;\n    var codePointNumber;\n\n    while (index < subjectStringLength) {\n      codePointNumber = codePointAt(subjectString, index);\n      codePointArray.push(codePointNumber);\n      index += codePointNumber > 0xffff ? 2 : 1;\n    }\n\n    return codePointArray;\n  }\n\n  /**\n   * Splits `subject` into an array of graphemes taking care of\n   * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#24surrogatepairs\">surrogate pairs</a> and\n   * <a href=\"https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/#25combiningmarks\">combining marks</a>.\n   *\n   * @function graphemes\n   * @static\n   * @since 1.0.0\n   * @memberOf Split\n   * @param {string} [subject=''] The string to split into characters.\n   * @return {Array} Returns the array of graphemes.\n   * @example\n   * v.graphemes('\\uD835\\uDC00\\uD835\\uDC01'); // or '𝐀𝐁'\n   * // => ['\\uD835\\uDC00', '\\uD835\\uDC01'], or\n   * //    ['𝐀', '𝐁']\n   *\n   * v.graphemes('cafe\\u0301'); // or 'café'\n   * // => ['c', 'a', 'f', 'e\\u0301'], or\n   * //    ['c', 'a', 'f', 'é']\n   */\n\n  function graphemes(subject) {\n    var subjectString = coerceToString(subject);\n    return nilDefault(subjectString.match(REGEXP_UNICODE_CHARACTER), []);\n  }\n\n  /**\n   * Splits `subject` into an array of chunks by `separator`.\n   *\n   * @function split\n   * @static\n   * @since 1.0.0\n   * @memberOf Split\n   * @param {string} [subject=''] The string to split into characters.\n   * @param {string|RegExp} [separator] The pattern to match the separator.\n   * @param {number} [limit] Limit the number of chunks to be found.\n   * @return {Array} Returns the array of chunks.\n   * @example\n   * v.split('rage against the dying of the light', ' ');\n   * // => ['rage', 'against', 'the', 'dying', 'of', 'the', 'light']\n   *\n   * v.split('the dying of the light', /\\s/, 3);\n   * // => ['the', 'dying', 'of']\n   */\n\n  function split(subject, separator, limit) {\n    var subjectString = coerceToString(subject);\n    return subjectString.split(separator, limit);\n  }\n\n  var BYRE_ORDER_MARK = '\\uFEFF';\n  /**\n   * Strips the byte order mark (BOM) from the beginning of `subject`.\n   *\n   * @function stripBom\n   * @static\n   * @since 1.2.0\n   * @memberOf Strip\n   * @param {string} [subject=''] The string to strip from.\n   * @return {string} Returns the stripped string.\n   * @example\n   *\n   * v.stripBom('\\uFEFFsummertime sadness');\n   * // => 'summertime sadness'\n   *\n   * v.stripBom('summertime happiness');\n   * // => 'summertime happiness'\n   *\n   */\n\n  function trim$1(subject) {\n    var subjectString = coerceToString(subject);\n\n    if (subjectString === '') {\n      return '';\n    }\n\n    if (subjectString[0] === BYRE_ORDER_MARK) {\n      return subjectString.substring(1);\n    }\n\n    return subjectString;\n  }\n\n  /**\n   * Checks whether `subject` contains substring at specific `index`.\n   *\n   * @ignore\n   * @param {string} subject The subject to search in.\n   * @param {string} substring The substring to search/\n   * @param {number} index The index to search substring.\n   * @param {boolean} lookBehind Whether to look behind (true) or ahead (false).\n   * @return {boolean} Returns a boolean whether the substring exists.\n   */\n  function hasSubstringAtIndex(subject, substring, index) {\n    var lookBehind = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    var indexOffset = 0;\n\n    if (lookBehind) {\n      indexOffset = -substring.length + 1;\n    }\n\n    var extractedSubstring = subject.substr(index + indexOffset, substring.length);\n    return extractedSubstring.toLowerCase() === substring;\n  }\n\n  /**\n   * Parses the tags from the string '<tag1><tag2>...<tagN>'.\n   *\n   * @ignore\n   * @param {string} tags The string that contains the tags.\n   * @return {string[]} Returns the array of tag names.\n   */\n\n  function parseTagList(tags) {\n    var tagsList = [];\n    var match;\n\n    while ((match = REGEXP_TAG_LIST.exec(tags)) !== null) {\n      tagsList.push(match[1]);\n    }\n\n    return tagsList;\n  }\n\n  var STATE_START_TAG = 0;\n  var STATE_NON_WHITESPACE = 1;\n  var STATE_DONE = 2;\n  /**\n   * Parses the tag name from html content.\n   *\n   * @ignore\n   * @param {string} tagContent The tag content.\n   * @return {string} Returns the tag name.\n   */\n\n  function parseTagName(tagContent) {\n    var state = STATE_START_TAG;\n    var tagName = '';\n    var index = 0;\n\n    while (state !== STATE_DONE) {\n      var char = tagContent[index++].toLowerCase();\n\n      switch (char) {\n        case '<':\n          break;\n\n        case '>':\n          state = STATE_DONE;\n          break;\n\n        default:\n          if (REGEXP_WHITESPACE.test(char)) {\n            if (state === STATE_NON_WHITESPACE) {\n              state = STATE_DONE;\n            }\n          } else {\n            if (state === STATE_START_TAG) {\n              state = STATE_NON_WHITESPACE;\n            }\n\n            if (char !== '/') {\n              tagName += char;\n            }\n          }\n\n          break;\n      }\n    }\n\n    return tagName;\n  }\n\n  var STATE_OUTPUT = 0;\n  var STATE_HTML = 1;\n  var STATE_EXCLAMATION = 2;\n  var STATE_COMMENT = 3;\n  /**\n   * Strips HTML tags from `subject`.\n   *\n   * @function stripTags\n   * @static\n   * @since 1.1.0\n   * @memberOf Strip\n   * @param {string} [subject=''] The string to strip from.\n   * @param {string|Array} [allowableTags] The string `'<tag1><tag2>'` or array `['tag1', 'tag2']` of tags that should not be stripped.\n   * @param {string} [replacement=''] The string to replace the stripped tag.\n   * @return {string} Returns the stripped string.\n   * @example\n   *\n   * v.stripTags('<span><a href=\"#\">Summer</a> is nice</span>');\n   * // => 'Summer is nice'\n   *\n   * v.stripTags('<span><i>Winter</i> is <b>cold</b></span>', ['b', 'i']);\n   * // => '<i>Winter</i> is <b>cold</b>'\n   *\n   * v.stripTags('Sun<br/>set', '', '-');\n   * // => 'Sun-set'\n   */\n\n  function trim$2(subject, allowableTags, replacement) {\n    subject = coerceToString(subject);\n\n    if (subject === '') {\n      return '';\n    }\n\n    if (!Array.isArray(allowableTags)) {\n      var allowableTagsString = coerceToString(allowableTags);\n      allowableTags = allowableTagsString === '' ? [] : parseTagList(allowableTagsString);\n    }\n\n    var replacementString = coerceToString(replacement);\n    var length = subject.length;\n    var hasAllowableTags = allowableTags.length > 0;\n    var hasSubstring = hasSubstringAtIndex.bind(null, subject);\n    var state = STATE_OUTPUT;\n    var depth = 0;\n    var output = '';\n    var tagContent = '';\n    var quote = null;\n\n    for (var index = 0; index < length; index++) {\n      var char = subject[index];\n      var advance = false;\n\n      switch (char) {\n        case '<':\n          if (quote) {\n            break;\n          }\n\n          if (hasSubstring('< ', index, false)) {\n            advance = true;\n            break;\n          }\n\n          if (state === STATE_OUTPUT) {\n            advance = true;\n            state = STATE_HTML;\n            break;\n          }\n\n          if (state === STATE_HTML) {\n            depth++;\n            break;\n          }\n\n          advance = true;\n          break;\n\n        case '!':\n          if (state === STATE_HTML && hasSubstring('<!', index)) {\n            state = STATE_EXCLAMATION;\n            break;\n          }\n\n          advance = true;\n          break;\n\n        case '-':\n          if (state === STATE_EXCLAMATION && hasSubstring('!--', index)) {\n            state = STATE_COMMENT;\n            break;\n          }\n\n          advance = true;\n          break;\n\n        case '\"':\n        case \"'\":\n          if (state === STATE_HTML) {\n            if (quote === char) {\n              quote = null;\n            } else if (!quote) {\n              quote = char;\n            }\n          }\n\n          advance = true;\n          break;\n\n        case 'E':\n        case 'e':\n          if (state === STATE_EXCLAMATION && hasSubstring('doctype', index)) {\n            state = STATE_HTML;\n            break;\n          }\n\n          advance = true;\n          break;\n\n        case '>':\n          if (depth > 0) {\n            depth--;\n            break;\n          }\n\n          if (quote) {\n            break;\n          }\n\n          if (state === STATE_HTML) {\n            quote = null;\n            state = STATE_OUTPUT;\n\n            if (hasAllowableTags) {\n              tagContent += '>';\n              var tagName = parseTagName(tagContent);\n\n              if (allowableTags.indexOf(tagName.toLowerCase()) !== -1) {\n                output += tagContent;\n              } else {\n                output += replacementString;\n              }\n\n              tagContent = '';\n            } else {\n              output += replacementString;\n            }\n\n            break;\n          }\n\n          if (state === STATE_EXCLAMATION || (state === STATE_COMMENT && hasSubstring('-->', index))) {\n            quote = null;\n            state = STATE_OUTPUT;\n            tagContent = '';\n            break;\n          }\n\n          advance = true;\n          break;\n\n        default:\n          advance = true;\n      }\n\n      if (advance) {\n        switch (state) {\n          case STATE_OUTPUT:\n            output += char;\n            break;\n\n          case STATE_HTML:\n            if (hasAllowableTags) {\n              tagContent += char;\n            }\n\n            break;\n        }\n      }\n    }\n\n    return output;\n  }\n\n  var globalObject = null;\n\n  function getGlobalObject() {\n    if (globalObject !== null) {\n      return globalObject;\n    }\n    /* istanbul ignore next */\n    // It's hard to mock the global variables. This code surely works fine. I hope :)\n\n    if (typeof global === 'object' && global.Object === Object) {\n      // NodeJS global object\n      globalObject = global;\n    } else if (typeof self === 'object' && self.Object === Object) {\n      // self property from Window object\n      globalObject = self;\n    } else {\n      // Other cases. Function constructor always has the context as global object\n      globalObject = new Function('return this')();\n    }\n\n    return globalObject;\n  }\n\n  var globalObject$1 = getGlobalObject();\n  var previousV = globalObject$1.v;\n  /**\n   * Restores `v` variable to previous value and returns Voca library instance.\n   *\n   * @function noConflict\n   * @static\n   * @since 1.0.0\n   * @memberOf Util\n   * @return {Object} Returns Voca library instance.\n   * @example\n   * var voca = v.noConflict();\n   * voca.isAlpha('Hello');\n   * // => true\n   */\n\n  function noConflict() {\n    if (this === globalObject$1.v) {\n      globalObject$1.v = previousV;\n    }\n\n    return this;\n  }\n\n  /**\n   * A property that contains the library <a href=\"http://semver.org/\">semantic version number</a>.\n   * @name version\n   * @static\n   * @since 1.0.0\n   * @memberOf Util\n   * @type string\n   * @example\n   * v.version\n   * // => '1.4.0'\n   */\n  var version = '1.4.0';\n\n  /* eslint sort-imports: \"off\" */\n  var functions = {\n    camelCase: camelCase,\n    capitalize: capitalize,\n    decapitalize: decapitalize,\n    kebabCase: kebabCase,\n    lowerCase: lowerCase,\n    snakeCase: snakeCase,\n    swapCase: swapCase,\n    titleCase: titleCase,\n    upperCase: upperCase,\n    count: count,\n    countGraphemes: countGrapheme,\n    countSubstrings: countSubstrings,\n    countWhere: countWhere,\n    countWords: countWords,\n    escapeHtml: escapeHtml,\n    escapeRegExp: escapeRegExp,\n    unescapeHtml: unescapeHtml,\n    sprintf: sprintf,\n    vprintf: vprintf,\n    indexOf: indexOf,\n    lastIndexOf: lastIndexOf,\n    search: search,\n    charAt: charAt,\n    codePointAt: codePointAt,\n    first: first,\n    graphemeAt: graphemeAt,\n    last: last,\n    prune: prune,\n    slice: slice,\n    substr: substr,\n    substring: substring,\n    truncate: truncate,\n    insert: insert,\n    latinise: latinise,\n    pad: pad,\n    padLeft: padLeft,\n    padRight: padRight,\n    repeat: repeat,\n    replace: replace,\n    replaceAll: replaceAll,\n    reverse: reverse,\n    reverseGrapheme: reverseGrapheme,\n    slugify: slugify,\n    splice: splice,\n    tr: tr,\n    trim: trim,\n    trimLeft: trimLeft,\n    trimRight: trimRight,\n    wordWrap: wordWrap,\n    endsWith: endsWith,\n    includes: includes,\n    isAlpha: isAlpha,\n    isAlphaDigit: isAlphaDigit,\n    isBlank: isBlank,\n    isDigit: isDigit,\n    isEmpty: isEmpty,\n    isLowerCase: isLowerCase,\n    isNumeric: isNumeric,\n    isString: isString,\n    isUpperCase: isUpperCase,\n    matches: matches,\n    startsWith: startsWith,\n    chars: chars,\n    codePoints: codePoints,\n    graphemes: graphemes,\n    split: split,\n    words: words,\n    stripBom: trim$1,\n    stripTags: trim$2,\n    noConflict: noConflict,\n    version: version,\n  };\n\n  /**\n   * The chain wrapper constructor.\n   *\n   * @ignore\n   * @param  {string}       subject               The string to be wrapped.\n   * @param  {boolean}      [explicitChain=false] A boolean that indicates if the chain sequence is explicit or implicit.\n   * @return {ChainWrapper}                       Returns a new instance of `ChainWrapper`\n   * @constructor\n   */\n\n  function ChainWrapper(subject, explicitChain) {\n    this._wrappedValue = subject;\n    this._explicitChain = explicitChain;\n  }\n  /**\n   * Unwraps the chain sequence wrapped value.\n   *\n   * @memberof Chain\n   * @since 1.0.0\n   * @function __proto__value\n   * @return {*} Returns the unwrapped value.\n   * @example\n   * v\n   *  .chain('Hello world')\n   *  .replace('Hello', 'Hi')\n   *  .lowerCase()\n   *  .slugify()\n   *  .value()\n   * // => 'hi-world'\n   *\n   * v(' Space travel ')\n   *  .trim()\n   *  .truncate(8)\n   *  .value()\n   * // => 'Space...'\n   */\n\n  ChainWrapper.prototype.value = function() {\n    return this._wrappedValue;\n  };\n  /**\n   * Override the default object valueOf().\n   *\n   * @ignore\n   * @return {*} Returns the wrapped value.\n   */\n\n  ChainWrapper.prototype.valueOf = function() {\n    return this.value();\n  };\n  /**\n   * Returns the wrapped value to be used in JSON.stringify().\n   *\n   * @ignore\n   * @return {*} Returns the wrapped value.\n   */\n\n  ChainWrapper.prototype.toJSON = function() {\n    return this.value();\n  };\n  /**\n   * Returns the string representation of the wrapped value.\n   *\n   * @ignore\n   * @return {string} Returns the string representation.\n   */\n\n  ChainWrapper.prototype.toString = function() {\n    return String(this.value());\n  };\n  /**\n   * Creates a new chain object that enables <i>explicit</i> chain sequences.\n   * Use `v.prototype.value()` to unwrap the result. <br/>\n   * Does not modify the wrapped value.\n   *\n   * @memberof Chain\n   * @since 1.0.0\n   * @function __proto__chain\n   * @return {Object} Returns the wrapper in <i>explicit</i> mode.\n   * @example\n   * v('Back to School')\n   *  .chain()\n   *  .lowerCase()\n   *  .words()\n   *  .value()\n   * // => ['back', 'to', 'school']\n   *\n   * v(\" Back to School \")\n   *  .chain()\n   *  .trim()\n   *  .truncate(7)\n   *  .value()\n   * // => 'Back...'\n   */\n\n  ChainWrapper.prototype.chain = function() {\n    return new ChainWrapper(this._wrappedValue, true);\n  };\n  /**\n   * Modifies the wrapped value with the invocation result of `changer` function. The current wrapped value is the\n   * argument of `changer` invocation.\n   *\n   * @memberof Chain\n   * @since 1.0.0\n   * @function __proto__thru\n   * @param  {Function} changer The function to invoke.\n   * @return {Object}           Returns the new wrapper that wraps the invocation result of `changer`.\n   * @example\n   * v\n   *  .chain('sun is shining')\n   *  .words()\n   *  .thru(function(words) {\n   *    return words[0];\n   *  })\n   *  .value()\n   * // => 'sun'\n   *\n   */\n\n  ChainWrapper.prototype.thru = function(changer) {\n    if (typeof changer === 'function') {\n      return new ChainWrapper(changer(this._wrappedValue), this._explicitChain);\n    }\n\n    return this;\n  };\n  /**\n   * A boolean that indicates if the chain sequence is explicit or implicit.\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n\n  ChainWrapper.prototype._explicitChain = true;\n  /**\n   * Make a voca function chainable.\n   *\n   * @ignore\n   * @param  {Function} functionInstance The function to make chainable\n   * @return {Function}                  Returns the chainable function\n   */\n\n  function makeFunctionChainable(functionInstance) {\n    return function() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var result = functionInstance.apply(void 0, [this._wrappedValue].concat(args));\n\n      if (this._explicitChain || typeof result === 'string') {\n        return new ChainWrapper(result, this._explicitChain);\n      } else {\n        return result;\n      }\n    };\n  }\n\n  Object.keys(functions).forEach(function(name) {\n    ChainWrapper.prototype[name] = makeFunctionChainable(functions[name]);\n  });\n\n  /**\n   * Creates a chain object that wraps `subject`, enabling <i>explicit</i> chain sequences. <br/>\n   * Use `v.prototype.value()` to unwrap the result.\n   *\n   * @memberOf Chain\n   * @since 1.0.0\n   * @function chain\n   * @param  {string} subject The string to wrap.\n   * @return {Object}         Returns the new wrapper object.\n   * @example\n   * v\n   *  .chain('Back to School')\n   *  .lowerCase()\n   *  .words()\n   *  .value()\n   * // => ['back', 'to', 'school']\n   */\n\n  function chain(subject) {\n    return new ChainWrapper(subject, true);\n  }\n\n  /**\n   * Creates a chain object that wraps `subject`, enabling <i>implicit</i> chain sequences.<br/>\n   * A function that returns `number`, `boolean` or `array` type <i>terminates</i> the chain sequence and returns the unwrapped value.\n   * Otherwise use `v.prototype.value()` to unwrap the result.\n   *\n   * @memberOf Chain\n   * @since 1.0.0\n   * @function v\n   * @param {string} subject The string to wrap.\n   * @return {Object}  Returns the new wrapper object.\n   * @example\n   * v('Back to School')\n   *  .lowerCase()\n   *  .words()\n   * // => ['back', 'to', 'school']\n   *\n   * v(\" Back to School \")\n   *  .trim()\n   *  .truncate(7)\n   *  .value()\n   * // => 'Back...'\n   */\n\n  function Voca(subject) {\n    return new ChainWrapper(subject, false);\n  }\n\n  _extends(Voca, functions, {\n    chain: chain,\n  });\n\n  /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    ...functions,\n    voca: Voca\n  });\n\n//# sourceURL=webpack://test-rayous/./node_modules/rayous/client/modules/voca.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;